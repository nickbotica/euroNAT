; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Michael\Desktop\Code\euroNAT\NATData.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??0NATWaypoint@@QAE@XZ				; NATWaypoint::NATWaypoint
PUBLIC	??0NAT@@QAE@XZ					; NAT::NAT
PUBLIC	??1NATWaypoint@@QAE@XZ				; NATWaypoint::~NATWaypoint
PUBLIC	??1NAT@@QAE@XZ					; NAT::~NAT
PUBLIC	__tcstok
PUBLIC	?RemoveAll@CStringArray@@QAEXXZ			; CStringArray::RemoveAll
PUBLIC	?Add@CStringArray@@QAEHPBD@Z			; CStringArray::Add
PUBLIC	??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z		; ATL::CSimpleStringT<char,0>::operator[]
PUBLIC	?GetAt@?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z	; ATL::CSimpleStringT<char,0>::GetAt
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
PUBLIC	?StringLengthN@?$CSimpleStringT@D$0A@@ATL@@SAHPBDI@Z ; ATL::CSimpleStringT<char,0>::StringLengthN
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z	; ATL::CSimpleStringT<char,0>::Append
PUBLIC	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z	; ATL::CSimpleStringT<char,0>::Append
PUBLIC	??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator+=
PUBLIC	??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
PUBLIC	?StringFindCharRev@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z ; ATL::ChTraitsCRT<char>::StringFindCharRev
PUBLIC	?ReverseFind@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::ReverseFind
PUBLIC	?GetCount@CStringArray@@QBEHXZ			; CStringArray::GetCount
PUBLIC	?ElementAt@CStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::ElementAt
PUBLIC	??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ; CStringArray::operator[]
PUBLIC	??1COleVariant@@QAE@XZ				; COleVariant::~COleVariant
PUBLIC	?IsOpen@CDaoRecordset@@QBEHXZ			; CDaoRecordset::IsOpen
PUBLIC	?NATWorkerData@NATData@@2UNATWorkerCont@1@A	; NATData::NATWorkerData
PUBLIC	?LastInstance@NATData@@2PAV1@A			; NATData::LastInstance
PUBLIC	??_C@_0M@MBIMMEME@euroNAT?4dll?$AA@		; `string'
PUBLIC	??_C@_06OPNGBHIH@wp?4mdb?$AA@			; `string'
PUBLIC	??_C@_0BC@CFDJFMBB@GetWaypointLatLon?$AA@	; `string'
PUBLIC	??_C@_0CL@HBDDLLP@euroNAT?3?5Unable?5to?5open?5waypoint@ ; `string'
PUBLIC	??_C@_0BK@CEEBFJIO@http?3?1?1nova37?4com?1nat?4php?$AA@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6?$AA@			; `string'
PUBLIC	??_C@_01IPJKGB@?$CD?$AA@			; `string'
PUBLIC	??_C@_01DCLJPIOD@?$CB?$AA@			; `string'
PUBLIC	??_C@_03IGPHLJKL@NIL?$AA@			; `string'
PUBLIC	??_C@_01CLKCMJKC@?5?$AA@			; `string'
PUBLIC	??_C@_03PDHDNHIA@?$CFdW?$AA@			; `string'
PUBLIC	??_C@_06KGHIGKLN@?$CFdN?$CFdW?$AA@		; `string'
PUBLIC	??_C@_0N@HPDLHNII@WaypointName?$AA@		; `string'
PUBLIC	??_C@_08NCKPLHC@Latitude?$AA@			; `string'
PUBLIC	??_C@_0L@BGHCCJEH@Longtitude?$AA@		; `string'
PUBLIC	??_C@_03EBHGFDMP@15W?$AA@			; `string'
PUBLIC	??_C@_03FFAIDOMK@20W?$AA@			; `string'
PUBLIC	??_C@_03ONLEFJKP@30W?$AA@			; `string'
PUBLIC	??_C@_03HAGDGBBG@40W?$AA@			; `string'
PUBLIC	??_C@_03MINPAGHD@50W?$AA@			; `string'
PUBLIC	??_C@_03MKJJLICK@53W?$AA@			; `string'
PUBLIC	??_C@_03NKGKKJJN@60W?$AA@			; `string'
PUBLIC	??_C@_03NMKBGLHG@65W?$AA@			; `string'
PUBLIC	??_C@_03NPCFLPBI@67W?$AA@			; `string'
PUBLIC	??_C@_05PCGEFKOI@5230W?$AA@			; `string'
PUBLIC	??_C@_06HABAFNNJ@57N50W?$AA@			; `string'
PUBLIC	??_C@_06MIKMDKLM@57N40W?$AA@			; `string'
PUBLIC	??_C@_06JOCHNBKA@56N30W?$AA@			; `string'
PUBLIC	??_C@_06GLFDBHMO@54N20W?$AA@			; `string'
PUBLIC	??_C@_06KJHEJJNG@52N15W?$AA@			; `string'
PUBLIC	??_C@_03ONKIAKOF@45N?$AA@			; `string'
PUBLIC	??_C@_03MLEHIBFH@27N?$AA@			; `string'
PUBLIC	??_C@_03NCKOGJIE@18N?$AA@			; `string'
PUBLIC	??_C@_03MLFLNCBN@52W?$AA@			; `string'
EXTRN	??_L@YGXPAXIHP6EX0@Z1@Z:PROC			; `eh vector constructor iterator'
EXTRN	__imp_??0CPosition@EuroScopePlugIn@@QAE@XZ:PROC
EXTRN	??_M@YGXPAXIHP6EX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	?AfxBeginThread@@YGPAVCWinThread@@P6AIPAX@Z0HIKPAU_SECURITY_ATTRIBUTES@@@Z:PROC ; AfxBeginThread
EXTRN	__mbstok:PROC
EXTRN	?SetSize@CStringArray@@QAEXHH@Z:PROC		; CStringArray::SetSize
EXTRN	?SetAtGrow@CStringArray@@QAEXHPBD@Z:PROC	; CStringArray::SetAtGrow
EXTRN	__imp__GetModuleFileNameA@12:PROC
EXTRN	__imp__GetModuleHandleA@4:PROC
EXTRN	_atoi:PROC
EXTRN	_strnlen:PROC
EXTRN	__mbsrchr:PROC
EXTRN	??0CStringArray@@QAE@XZ:PROC			; CStringArray::CStringArray
EXTRN	??1CStringArray@@UAE@XZ:PROC			; CStringArray::~CStringArray
EXTRN	??0COleVariant@@QAE@PBDG@Z:PROC			; COleVariant::COleVariant
EXTRN	__imp__VariantClear@4:PROC
EXTRN	??0CDaoDatabase@@QAE@PAVCDaoWorkspace@@@Z:PROC	; CDaoDatabase::CDaoDatabase
EXTRN	??0CDaoQueryDef@@QAE@PAVCDaoDatabase@@@Z:PROC	; CDaoQueryDef::CDaoQueryDef
EXTRN	??0CDaoRecordset@@QAE@PAVCDaoDatabase@@@Z:PROC	; CDaoRecordset::CDaoRecordset
EXTRN	?AfxDaoTerm@@YGXXZ:PROC				; AfxDaoTerm
?NATWorkerData@NATData@@2UNATWorkerCont@1@A DQ 01H DUP (?) ; NATData::NATWorkerData
?LastInstance@NATData@@2PAV1@A DD 01H DUP (?)		; NATData::LastInstance
;	COMDAT ??_C@_03MLFLNCBN@52W?$AA@
CONST	SEGMENT
??_C@_03MLFLNCBN@52W?$AA@ DB '52W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NCKOGJIE@18N?$AA@
CONST	SEGMENT
??_C@_03NCKOGJIE@18N?$AA@ DB '18N', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MLEHIBFH@27N?$AA@
CONST	SEGMENT
??_C@_03MLEHIBFH@27N?$AA@ DB '27N', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ONKIAKOF@45N?$AA@
CONST	SEGMENT
??_C@_03ONKIAKOF@45N?$AA@ DB '45N', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06KJHEJJNG@52N15W?$AA@
CONST	SEGMENT
??_C@_06KJHEJJNG@52N15W?$AA@ DB '52N15W', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GLFDBHMO@54N20W?$AA@
CONST	SEGMENT
??_C@_06GLFDBHMO@54N20W?$AA@ DB '54N20W', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JOCHNBKA@56N30W?$AA@
CONST	SEGMENT
??_C@_06JOCHNBKA@56N30W?$AA@ DB '56N30W', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MIKMDKLM@57N40W?$AA@
CONST	SEGMENT
??_C@_06MIKMDKLM@57N40W?$AA@ DB '57N40W', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HABAFNNJ@57N50W?$AA@
CONST	SEGMENT
??_C@_06HABAFNNJ@57N50W?$AA@ DB '57N50W', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05PCGEFKOI@5230W?$AA@
CONST	SEGMENT
??_C@_05PCGEFKOI@5230W?$AA@ DB '5230W', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NPCFLPBI@67W?$AA@
CONST	SEGMENT
??_C@_03NPCFLPBI@67W?$AA@ DB '67W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NMKBGLHG@65W?$AA@
CONST	SEGMENT
??_C@_03NMKBGLHG@65W?$AA@ DB '65W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03NKGKKJJN@60W?$AA@
CONST	SEGMENT
??_C@_03NKGKKJJN@60W?$AA@ DB '60W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MKJJLICK@53W?$AA@
CONST	SEGMENT
??_C@_03MKJJLICK@53W?$AA@ DB '53W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03MINPAGHD@50W?$AA@
CONST	SEGMENT
??_C@_03MINPAGHD@50W?$AA@ DB '50W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03HAGDGBBG@40W?$AA@
CONST	SEGMENT
??_C@_03HAGDGBBG@40W?$AA@ DB '40W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03ONLEFJKP@30W?$AA@
CONST	SEGMENT
??_C@_03ONLEFJKP@30W?$AA@ DB '30W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FFAIDOMK@20W?$AA@
CONST	SEGMENT
??_C@_03FFAIDOMK@20W?$AA@ DB '20W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03EBHGFDMP@15W?$AA@
CONST	SEGMENT
??_C@_03EBHGFDMP@15W?$AA@ DB '15W', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BGHCCJEH@Longtitude?$AA@
CONST	SEGMENT
??_C@_0L@BGHCCJEH@Longtitude?$AA@ DB 'Longtitude', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08NCKPLHC@Latitude?$AA@
CONST	SEGMENT
??_C@_08NCKPLHC@Latitude?$AA@ DB 'Latitude', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HPDLHNII@WaypointName?$AA@
CONST	SEGMENT
??_C@_0N@HPDLHNII@WaypointName?$AA@ DB 'WaypointName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KGHIGKLN@?$CFdN?$CFdW?$AA@
CONST	SEGMENT
??_C@_06KGHIGKLN@?$CFdN?$CFdW?$AA@ DB '%dN%dW', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03PDHDNHIA@?$CFdW?$AA@
CONST	SEGMENT
??_C@_03PDHDNHIA@?$CFdW?$AA@ DB '%dW', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5?$AA@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03IGPHLJKL@NIL?$AA@
CONST	SEGMENT
??_C@_03IGPHLJKL@NIL?$AA@ DB 'NIL', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01DCLJPIOD@?$CB?$AA@
CONST	SEGMENT
??_C@_01DCLJPIOD@?$CB?$AA@ DB '!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01IPJKGB@?$CD?$AA@
CONST	SEGMENT
??_C@_01IPJKGB@?$CD?$AA@ DB '#', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6?$AA@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6?$AA@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CEEBFJIO@http?3?1?1nova37?4com?1nat?4php?$AA@
CONST	SEGMENT
??_C@_0BK@CEEBFJIO@http?3?1?1nova37?4com?1nat?4php?$AA@ DB 'http://nova37'
	DB	'.com/nat.php', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@HBDDLLP@euroNAT?3?5Unable?5to?5open?5waypoint@
CONST	SEGMENT
??_C@_0CL@HBDDLLP@euroNAT?3?5Unable?5to?5open?5waypoint@ DB 'euroNAT: Una'
	DB	'ble to open waypoint database.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CFDJFMBB@GetWaypointLatLon?$AA@
CONST	SEGMENT
??_C@_0BC@CFDJFMBB@GetWaypointLatLon?$AA@ DB 'GetWaypointLatLon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OPNGBHIH@wp?4mdb?$AA@
CONST	SEGMENT
??_C@_06OPNGBHIH@wp?4mdb?$AA@ DB 'wp.mdb', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MBIMMEME@euroNAT?4dll?$AA@
CONST	SEGMENT
??_C@_0M@MBIMMEME@euroNAT?4dll?$AA@ DB 'euroNAT.dll', 00H ; `string'
; Function compile flags: /Ogtp
;	COMDAT ?RemoveAll@CStringArray@@QAEXXZ
_TEXT	SEGMENT
?RemoveAll@CStringArray@@QAEXXZ PROC			; CStringArray::RemoveAll, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxcoll.inl
; Line 286
	push	-1
	push	0
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	ret	0
?RemoveAll@CStringArray@@QAEXXZ ENDP			; CStringArray::RemoveAll
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT __tcstok
_TEXT	SEGMENT
__tcstok PROC						; COMDAT
; __String$ = ecx
; __Delimiters$ = eax
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\tchar.h
; Line 1552
	push	eax
	push	ecx
	call	__mbstok
	add	esp, 8
; Line 1554
	ret	0
__tcstok ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Add@CStringArray@@QAEHPBD@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?Add@CStringArray@@QAEHPBD@Z PROC			; CStringArray::Add, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxcoll.inl
; Line 315
	push	ebp
	mov	ebp, esp
; Line 316
	mov	eax, DWORD PTR _newElement$[ebp]
	push	esi
	mov	esi, DWORD PTR [ecx+8]
	push	eax
	push	esi
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
; Line 317
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
?Add@CStringArray@@QAEHPBD@Z ENDP			; CStringArray::Add
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?StringLengthN@?$CSimpleStringT@D$0A@@ATL@@SAHPBDI@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
_sizeInXChar$ = 12					; size = 4
?StringLengthN@?$CSimpleStringT@D$0A@@ATL@@SAHPBDI@Z PROC ; ATL::CSimpleStringT<char,0>::StringLengthN, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 762
	push	ebp
	mov	ebp, esp
; Line 763
	mov	eax, DWORD PTR _psz$[ebp]
	test	eax, eax
	jne	SHORT $LN1@StringLeng
; Line 768
	pop	ebp
	ret	0
$LN1@StringLeng:
; Line 767
	mov	ecx, DWORD PTR _sizeInXChar$[ebp]
	push	ecx
	push	eax
	call	_strnlen
	add	esp, 8
; Line 768
	pop	ebp
	ret	0
?StringLengthN@?$CSimpleStringT@D$0A@@ATL@@SAHPBDI@Z ENDP ; ATL::CSimpleStringT<char,0>::StringLengthN
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?ElementAt@CStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
?ElementAt@CStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC ; CStringArray::ElementAt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxcoll.inl
; Line 305
	push	ebp
	mov	ebp, esp
; Line 306
	mov	eax, DWORD PTR _nIndex$[ebp]
	test	eax, eax
	js	SHORT $LN1@ElementAt
	cmp	eax, DWORD PTR [ecx+8]
	jge	SHORT $LN1@ElementAt
; Line 308
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	ebp
	ret	4
$LN1@ElementAt:
; Line 307
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN6@ElementAt:
$LN5@ElementAt:
	int	3
?ElementAt@CStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CStringArray::ElementAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetCount@CStringArray@@QBEHXZ
_TEXT	SEGMENT
?GetCount@CStringArray@@QBEHXZ PROC			; CStringArray::GetCount, COMDAT
; _this$ = eax
; Line 280
	mov	eax, DWORD PTR [eax+8]
	ret	0
?GetCount@CStringArray@@QBEHXZ ENDP			; CStringArray::GetCount
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1COleVariant@@QAE@XZ
_TEXT	SEGMENT
??1COleVariant@@QAE@XZ PROC				; COleVariant::~COleVariant, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxole.inl
; Line 95
	push	ecx
	call	DWORD PTR __imp__VariantClear@4
	ret	0
??1COleVariant@@QAE@XZ ENDP				; COleVariant::~COleVariant
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsOpen@CDaoRecordset@@QBEHXZ
_TEXT	SEGMENT
?IsOpen@CDaoRecordset@@QBEHXZ PROC			; CDaoRecordset::IsOpen, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxdao.inl
; Line 40
	mov	eax, DWORD PTR [ecx+108]
	ret	0
?IsOpen@CDaoRecordset@@QBEHXZ ENDP			; CDaoRecordset::IsOpen
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?StringFindCharRev@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
_ch$ = 12						; size = 1
?StringFindCharRev@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z PROC ; ATL::ChTraitsCRT<char>::StringFindCharRev, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 215
	push	ebp
	mov	ebp, esp
; Line 216
	movzx	eax, BYTE PTR _ch$[ebp]
	mov	ecx, DWORD PTR _psz$[ebp]
	push	eax
	push	ecx
	call	__mbsrchr
	add	esp, 8
; Line 217
	pop	ebp
	ret	0
?StringFindCharRev@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z ENDP ; ATL::ChTraitsCRT<char>::StringFindCharRev
_TEXT	ENDS
PUBLIC	?Explode@@YAXPBD0AAVCStringArray@@@Z		; Explode
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_delimiters$ = 8					; size = 4
?Explode@@YAXPBD0AAVCStringArray@@@Z PROC		; Explode
; _str$ = eax
; _arr$ = ebx
; File c:\users\michael\desktop\code\euronat\natdata.cpp
; Line 39
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 40
	push	-1
	push	0
	mov	ecx, ebx
	mov	esi, eax
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
; Line 42
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL18@Explode:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL18@Explode
	sub	eax, edx
	inc	eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
; Line 43
	mov	edx, edi
	add	esp, 4
	mov	eax, esi
	sub	edx, esi
$LL6@Explode:
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR [edx+eax], cl
	inc	eax
	test	cl, cl
	jne	SHORT $LL6@Explode
; Line 48
	mov	esi, DWORD PTR _delimiters$[ebp]
	push	esi
	push	edi
	call	__mbstok
	add	esp, 8
; Line 49
	test	eax, eax
	je	SHORT $LN16@Explode
	npad	3
$LL3@Explode:
; Line 55
	push	eax
	mov	eax, DWORD PTR [ebx+8]
	push	eax
	mov	ecx, ebx
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
	push	esi
	push	0
	call	__mbstok
	add	esp, 8
	test	eax, eax
	jne	SHORT $LL3@Explode
$LN16@Explode:
; Line 51
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	pop	edi
	pop	esi
; Line 61
	pop	ebp
	ret	0
?Explode@@YAXPBD0AAVCStringArray@@@Z ENDP		; Explode
; Function compile flags: /Ogtp
;	COMDAT ??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z
_TEXT	SEGMENT
_nIndex$ = 8						; size = 4
??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z PROC ; CStringArray::operator[], COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxcoll.inl
; Line 327
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _nIndex$[ebp]
	test	eax, eax
	js	SHORT $LN3@operator@2
	cmp	eax, DWORD PTR [ecx+8]
	jge	SHORT $LN3@operator@2
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [ecx+eax*4]
	pop	ebp
	ret	4
$LN3@operator@2:
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN9@operator@2:
$LN8@operator@2:
	int	3
??ACStringArray@@QAEAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@H@Z ENDP ; CStringArray::operator[]
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?ReverseFind@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHD@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 1
?ReverseFind@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHD@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::ReverseFind, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1727
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1729
	movzx	ecx, BYTE PTR _ch$[ebp]
	mov	eax, DWORD PTR [esi]
	push	ecx
	push	eax
	call	__mbsrchr
	add	esp, 8
; Line 1732
	test	eax, eax
	jne	SHORT $LN3@ReverseFin
	or	eax, -1
	pop	esi
; Line 1733
	pop	ebp
	ret	4
$LN3@ReverseFin:
; Line 1732
	sub	eax, DWORD PTR [esi]
	pop	esi
; Line 1733
	pop	ebp
	ret	4
?ReverseFind@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::ReverseFind
; Function compile flags: /Ogtp
;	COMDAT ?GetAt@?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z
_TEXT	SEGMENT
_iChar$ = 8						; size = 4
?GetAt@?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z PROC		; ATL::CSimpleStringT<char,0>::GetAt, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 515
	push	ebp
	mov	ebp, esp
; Line 517
	mov	edx, DWORD PTR _iChar$[ebp]
	test	edx, edx
	js	SHORT $LN1@GetAt
	mov	eax, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax-12]
	jg	SHORT $LN1@GetAt
; Line 520
	mov	al, BYTE PTR [eax+edx]
; Line 521
	pop	ebp
	ret	4
$LN1@GetAt:
; Line 518
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN10@GetAt:
$LN9@GetAt:
	int	3
?GetAt@?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z ENDP		; ATL::CSimpleStringT<char,0>::GetAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z
_TEXT	SEGMENT
_iChar$ = 8						; size = 4
??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z PROC		; ATL::CSimpleStringT<char,0>::operator[], COMDAT
; _this$ = ecx
; Line 392
	push	ebp
	mov	ebp, esp
; Line 395
	mov	edx, DWORD PTR _iChar$[ebp]
	test	edx, edx
	js	SHORT $LN1@operator@5
	mov	eax, DWORD PTR [ecx]
	cmp	edx, DWORD PTR [eax-12]
	jg	SHORT $LN1@operator@5
; Line 398
	mov	al, BYTE PTR [eax+edx]
; Line 399
	pop	ebp
	ret	4
$LN1@operator@5:
; Line 396
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN10@operator@5:
$LN9@operator@5:
	int	3
??A?$CSimpleStringT@D$0A@@ATL@@QBEDH@Z ENDP		; ATL::CSimpleStringT<char,0>::operator[]
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1NATWaypoint@@QAE@XZ
_TEXT	SEGMENT
??1NATWaypoint@@QAE@XZ PROC				; NATWaypoint::~NATWaypoint, COMDAT
; _this$ = ecx
	mov	eax, DWORD PTR [ecx]
	sub	eax, 16					; 00000010H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN9@NATWaypoin
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN9@NATWaypoin:
	ret	0
??1NATWaypoint@@QAE@XZ ENDP				; NATWaypoint::~NATWaypoint
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1NAT@@QAE@XZ
_TEXT	SEGMENT
??1NAT@@QAE@XZ PROC					; NAT::~NAT, COMDAT
; _this$ = ecx
	push	OFFSET ??1NATWaypoint@@QAE@XZ
	push	20					; 00000014H
	push	24					; 00000018H
	add	ecx, 96					; 00000060H
	push	ecx
	call	??_M@YGXPAXIHP6EX0@Z@Z
	ret	0
??1NAT@@QAE@XZ ENDP					; NAT::~NAT
_TEXT	ENDS
PUBLIC	??_ENAT@@QAEPAXI@Z				; NAT::`vector deleting destructor'
; Function compile flags: /Ogtp
;	COMDAT ??_ENAT@@QAEPAXI@Z
_TEXT	SEGMENT
??_ENAT@@QAEPAXI@Z PROC					; NAT::`vector deleting destructor', COMDAT
; _this$ = eax
	mov	ecx, DWORD PTR [eax-4]
	push	esi
	lea	esi, DWORD PTR [eax-4]
	push	OFFSET ??1NAT@@QAE@XZ
	push	ecx
	push	584					; 00000248H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	push	esi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	mov	eax, esi
	pop	esi
	ret	0
??_ENAT@@QAEPAXI@Z ENDP					; NAT::`vector deleting destructor'
PUBLIC	??1NATData@@QAE@XZ				; NATData::~NATData
; Function compile flags: /Ogtp
_TEXT	SEGMENT
??1NATData@@QAE@XZ PROC					; NATData::~NATData
; _this$ = edi
; File c:\users\michael\desktop\code\euronat\natdata.cpp
; Line 23
	mov	eax, DWORD PTR [edi+4]
	test	eax, eax
	je	SHORT $LN5@NATData
	mov	ecx, DWORD PTR [eax-4]
	push	esi
	lea	esi, DWORD PTR [eax-4]
	push	OFFSET ??1NAT@@QAE@XZ
	push	ecx
	push	584					; 00000248H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	push	esi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
	pop	esi
$LN5@NATData:
; Line 24
	mov	edx, DWORD PTR [edi+8]
	push	edx
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
; Line 25
	ret	0
??1NATData@@QAE@XZ ENDP					; NATData::~NATData
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0NATWaypoint@@QAE@XZ
_TEXT	SEGMENT
??0NATWaypoint@@QAE@XZ PROC				; NATWaypoint::NATWaypoint, COMDAT
; _this$ = ecx
	push	esi
	mov	esi, ecx
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	test	eax, eax
	jne	SHORT $LN16@NATWaypoin@2
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN29@NATWaypoin@2:
$LN16@NATWaypoin@2:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	fldz
	add	eax, 16					; 00000010H
	fst	QWORD PTR [esi+16]
	mov	DWORD PTR [esi], eax
	fstp	QWORD PTR [esi+8]
	mov	eax, esi
	pop	esi
	ret	0
$LN28@NATWaypoin@2:
??0NATWaypoint@@QAE@XZ ENDP				; NATWaypoint::NATWaypoint
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0NAT@@QAE@XZ
_TEXT	SEGMENT
??0NAT@@QAE@XZ PROC					; NAT::NAT, COMDAT
; _this$ = ecx
	push	esi
	push	OFFSET ??1NATWaypoint@@QAE@XZ
	push	OFFSET ??0NATWaypoint@@QAE@XZ
	push	20					; 00000014H
	mov	esi, ecx
	push	24					; 00000018H
	lea	eax, DWORD PTR [esi+96]
	push	eax
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	mov	eax, esi
	pop	esi
	ret	0
??0NAT@@QAE@XZ ENDP					; NAT::NAT
_TEXT	ENDS
PUBLIC	??0NATData@@QAE@XZ				; NATData::NATData
__unwindtable$??0NATData@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0NATData@@QAE@XZ$0
__ehfuncinfo$??0NATData@@QAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0NATData@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
_TEXT	SEGMENT
$T242843 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0NATData@@QAE@XZ PROC					; NATData::NATData
; _this$ = esi
; Line 9
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0NATData@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
; Line 10
	push	15188					; 00003b54H
	call	??_U@YAPAXI@Z				; operator new[]
	add	esp, 4
	mov	DWORD PTR $T242843[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	eax, eax
	je	SHORT $LN3@NATData@2
	push	OFFSET ??1NAT@@QAE@XZ
	push	OFFSET ??0NAT@@QAE@XZ
	push	26					; 0000001aH
	lea	edi, DWORD PTR [eax+4]
	push	584					; 00000248H
	push	edi
	mov	DWORD PTR [eax], 26			; 0000001aH
	call	??_L@YGXPAXIHP6EX0@Z1@Z
	jmp	SHORT $LN4@NATData@2
$LN3@NATData@2:
	xor	edi, edi
$LN4@NATData@2:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
; Line 11
	push	4
	mov	DWORD PTR [esi+4], edi
	call	??2@YAPAXI@Z				; operator new
	mov	DWORD PTR [esi+8], eax
; Line 12
	mov	DWORD PTR [eax], 0
; Line 14
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A, eax
; Line 15
	mov	ecx, DWORD PTR [esi+8]
	add	esp, 4
	mov	DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A+4, ecx
; Line 17
	mov	DWORD PTR ?LastInstance@NATData@@2PAV1@A, esi ; NATData::LastInstance
; Line 18
	mov	eax, esi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	mov	esp, ebp
	pop	ebp
	ret	0
__unwindfunclet$??0NATData@@QAE@XZ$0:
	mov	eax, DWORD PTR $T242843[ebp]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
	ret	0
__ehhandler$??0NATData@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0NATData@@QAE@XZ
	jmp	___CxxFrameHandler3
??0NATData@@QAE@XZ ENDP					; NATData::NATData
; Function compile flags: /Ogtp
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_nOldLength$ = -8					; size = 4
_nOffset$ = -4						; size = 4
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC	; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 413
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 415
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi]
	mov	ecx, edx
	sub	ecx, eax
	push	edi
; Line 417
	mov	edi, DWORD PTR [eax-12]
; Line 425
	mov	eax, DWORD PTR _nLength$[ebp]
	mov	DWORD PTR _nOffset$[ebp], ecx
	mov	DWORD PTR _nOldLength$[ebp], edi
	test	eax, eax
	jns	SHORT $LN20@Append
; Line 442
$LN48@Append:
; Line 425
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN59@Append:
$LN20@Append:
	push	ebx
; Line 428
	test	edx, edx
	jne	SHORT $LN31@Append
	xor	ebx, ebx
	jmp	SHORT $LN11@Append
$LN31@Append:
	push	eax
	push	edx
	call	_strnlen
	add	esp, 8
	mov	ebx, eax
$LN11@Append:
; Line 431
	mov	eax, 2147483647				; 7fffffffH
	sub	eax, ebx
	cmp	eax, edi
	jge	SHORT $LN10@Append
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN60@Append:
$LN10@Append:
; Line 433
	add	edi, ebx
; Line 434
	jns	SHORT $LN37@Append
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN61@Append:
$LN37@Append:
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax-8]
	mov	ecx, 1
	sub	ecx, DWORD PTR [eax-4]
	sub	edx, edi
	or	ecx, edx
	jge	SHORT $LN36@Append
	push	edi
	mov	ecx, esi
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$LN36@Append:
; Line 435
	mov	ecx, DWORD PTR _nOffset$[ebp]
	mov	edx, DWORD PTR _nOldLength$[ebp]
	mov	eax, DWORD PTR [esi]
	cmp	ecx, edx
	ja	SHORT $LN57@Append
; Line 437
	add	ecx, eax
	jmp	SHORT $LN1@Append
$LN57@Append:
	mov	ecx, DWORD PTR _pszSrc$[ebp]
$LN1@Append:
; Line 441
	push	ebx
	push	ecx
	add	eax, edx
	push	ebx
	push	eax
	call	_memcpy_s
; Line 442
	mov	eax, DWORD PTR [esi]
	add	esp, 16					; 00000010H
	pop	ebx
	cmp	edi, DWORD PTR [eax-8]
	jg	$LN48@Append
	mov	DWORD PTR [eax-12], edi
	mov	eax, DWORD PTR [esi]
	mov	BYTE PTR [edi+eax], 0
	pop	edi
	pop	esi
; Line 443
	mov	esp, ebp
	pop	ebp
	ret	8
$LN58@Append:
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Ogtp
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_pNewData$220158 = 8					; size = 4
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx
; Line 297
	push	ebp
	mov	ebp, esp
; Line 298
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax]
; Line 299
	mov	esi, DWORD PTR [edi]
	lea	eax, DWORD PTR [ecx-16]
	sub	esi, 16					; 00000010H
; Line 300
	cmp	eax, esi
	je	SHORT $LN26@operator@11
; Line 302
	cmp	DWORD PTR [esi+12], 0
	push	ebx
	lea	ebx, DWORD PTR [esi+12]
	jl	SHORT $LN2@operator@11
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [esi]
	jne	SHORT $LN2@operator@11
; Line 308
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	mov	DWORD PTR _pNewData$220158[ebp], eax
	add	esp, 4
; Line 309
	or	eax, -1
	lock	 xadd	 DWORD PTR [ebx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN19@operator@11
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	esi
	call	eax
$LN19@operator@11:
; Line 310
	mov	ecx, DWORD PTR _pNewData$220158[ebp]
	add	ecx, 16					; 00000010H
	pop	ebx
	mov	DWORD PTR [edi], ecx
; Line 314
	mov	eax, edi
	pop	edi
	pop	esi
; Line 315
	pop	ebp
	ret	4
$LN2@operator@11:
; Line 304
	mov	edx, DWORD PTR [ecx-12]
	push	edx
	push	ecx
	mov	ecx, edi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
	pop	ebx
$LN26@operator@11:
; Line 314
	mov	eax, edi
	pop	edi
	pop	esi
; Line 315
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC	; ATL::CSimpleStringT<char,0>::Append, COMDAT
; _this$ = ecx
; Line 407
	push	ebp
	mov	ebp, esp
	push	esi
; Line 408
	mov	esi, DWORD PTR _pszSrc$[ebp]
	test	esi, esi
	jne	SHORT $LN3@Append@2
	xor	eax, eax
	push	eax
	push	esi
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
	pop	esi
; Line 409
	pop	ebp
	ret	4
; Line 408
$LN3@Append@2:
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	1
$LL6@Append@2:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL6@Append@2
	sub	eax, edi
	pop	edi
	push	eax
	push	esi
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
	pop	esi
; Line 409
	pop	ebp
	ret	4
?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::Append
; Function compile flags: /Ogtp
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_pNewData$244525 = 8					; size = 4
_strSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1217
	push	ebp
	mov	ebp, esp
; Line 1218
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR [eax]
	mov	esi, DWORD PTR [edi]
	lea	eax, DWORD PTR [ecx-16]
	sub	esi, 16					; 00000010H
	cmp	eax, esi
	je	SHORT $LN28@operator@13
	cmp	DWORD PTR [esi+12], 0
	push	ebx
	lea	ebx, DWORD PTR [esi+12]
	jl	SHORT $LN4@operator@13
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [esi]
	jne	SHORT $LN4@operator@13
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	mov	DWORD PTR _pNewData$244525[ebp], eax
	add	esp, 4
	or	eax, -1
	lock	 xadd	 DWORD PTR [ebx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN21@operator@13
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	esi
	call	eax
$LN21@operator@13:
	mov	ecx, DWORD PTR _pNewData$244525[ebp]
	add	ecx, 16					; 00000010H
	pop	ebx
	mov	DWORD PTR [edi], ecx
; Line 1220
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1221
	pop	ebp
	ret	4
; Line 1218
$LN4@operator@13:
	mov	edx, DWORD PTR [ecx-12]
	push	edx
	push	ecx
	mov	ecx, edi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
	pop	ebx
$LN28@operator@13:
; Line 1220
	mov	eax, edi
	pop	edi
	pop	esi
; Line 1221
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC	; ATL::CSimpleStringT<char,0>::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 360
	push	ebp
	mov	ebp, esp
; Line 361
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	edi
	mov	edi, ecx
	test	edx, edx
	jne	SHORT $LN5@operator@14
	xor	eax, eax
	push	eax
	push	edx
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
; Line 363
	mov	eax, edi
	pop	edi
; Line 364
	pop	ebp
	ret	4
; Line 361
$LN5@operator@14:
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL8@operator@14:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL8@operator@14
	sub	eax, esi
	pop	esi
	push	eax
	push	edx
	mov	ecx, edi
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
; Line 363
	mov	eax, edi
	pop	edi
; Line 364
	pop	ebp
	ret	4
??Y?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator+=
; Function compile flags: /Ogtp
;	COMDAT ??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1297
	push	ebp
	mov	ebp, esp
; Line 1298
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	edi
	mov	edi, ecx
	test	edx, edx
	jne	SHORT $LN7@operator@16
	xor	eax, eax
	push	eax
	push	edx
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
; Line 1300
	mov	eax, edi
	pop	edi
; Line 1301
	pop	ebp
	ret	4
; Line 1298
$LN7@operator@16:
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL10@operator@16:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL10@operator@16
	sub	eax, esi
	pop	esi
	push	eax
	push	edx
	mov	ecx, edi
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
; Line 1300
	mov	eax, edi
	pop	edi
; Line 1301
	pop	ebp
	ret	4
??Y?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator+=
PUBLIC	__real@c04a000000000000
PUBLIC	__real@4046155558212945
PUBLIC	__real@4046600000000000
PUBLIC	__real@404788888b545c79
PUBLIC	__real@40482eeef1bac2df
PUBLIC	__real@4048666666666666
PUBLIC	__real@4048555558212945
PUBLIC	__real@c04bd33333333333
PUBLIC	__real@4032000000000000
PUBLIC	__real@4038a2221c8a7a42
PUBLIC	__real@c047e44441787054
PUBLIC	__real@403b000000000000
PUBLIC	__real@40412eeef1bac2df
PUBLIC	__real@4044cccccccccccd
PUBLIC	__real@c037e2221c8a7a42
PUBLIC	__real@4046800000000000
PUBLIC	__real@404768888b545c79
PUBLIC	__real@404a000000000000
PUBLIC	__real@404b000000000000
PUBLIC	__real@404c000000000000
PUBLIC	__real@404c800000000000
PUBLIC	__real@4048d77774aba387
PUBLIC	__real@4048e8888b545c79
PUBLIC	__real@4048b77774aba387
PUBLIC	__real@4048155558212945
PUBLIC	__real@4046f33333333333
PUBLIC	__real@c04a400000000000
PUBLIC	__real@4046955558212945
PUBLIC	__real@40458eeef1bac2df
PUBLIC	__real@4044d55558212945
PUBLIC	__real@4044355558212945
PUBLIC	__real@c050c00000000000
PUBLIC	__real@4045000000000000
PUBLIC	__real@c050400000000000
PUBLIC	__real@4045622224edf612
PUBLIC	__real@c04e000000000000
PUBLIC	__real@40461ddddb1209ee
PUBLIC	__real@c04a800000000000
PUBLIC	__real@4047155558212945
PUBLIC	__real@c049000000000000
PUBLIC	__real@4047866666666666
PUBLIC	__real@c044000000000000
PUBLIC	__real@4048a22224edf612
PUBLIC	__real@c03e000000000000
PUBLIC	__real@4049400000000000
PUBLIC	__real@c034000000000000
PUBLIC	__real@40496aaaa7ded6bb
PUBLIC	__real@c02e000000000000
PUBLIC	__real@4049577774aba387
PUBLIC	?AddConcordTracks@NATData@@KAXPAUNATWorkerCont@1@@Z ; NATData::AddConcordTracks
;	COMDAT __real@c04a000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
__real@c04a000000000000 DQ 0c04a000000000000r	; -52
CONST	ENDS
;	COMDAT __real@4046155558212945
CONST	SEGMENT
__real@4046155558212945 DQ 04046155558212945r	; 44.1667
CONST	ENDS
;	COMDAT __real@4046600000000000
CONST	SEGMENT
__real@4046600000000000 DQ 04046600000000000r	; 44.75
CONST	ENDS
;	COMDAT __real@404788888b545c79
CONST	SEGMENT
__real@404788888b545c79 DQ 0404788888b545c79r	; 47.0667
CONST	ENDS
;	COMDAT __real@40482eeef1bac2df
CONST	SEGMENT
__real@40482eeef1bac2df DQ 040482eeef1bac2dfr	; 48.3667
CONST	ENDS
;	COMDAT __real@4048666666666666
CONST	SEGMENT
__real@4048666666666666 DQ 04048666666666666r	; 48.8
CONST	ENDS
;	COMDAT __real@4048555558212945
CONST	SEGMENT
__real@4048555558212945 DQ 04048555558212945r	; 48.6667
CONST	ENDS
;	COMDAT __real@c04bd33333333333
CONST	SEGMENT
__real@c04bd33333333333 DQ 0c04bd33333333333r	; -55.65
CONST	ENDS
;	COMDAT __real@4032000000000000
CONST	SEGMENT
__real@4032000000000000 DQ 04032000000000000r	; 18
CONST	ENDS
;	COMDAT __real@4038a2221c8a7a42
CONST	SEGMENT
__real@4038a2221c8a7a42 DQ 04038a2221c8a7a42r	; 24.6333
CONST	ENDS
;	COMDAT __real@c047e44441787054
CONST	SEGMENT
__real@c047e44441787054 DQ 0c047e44441787054r	; -47.7833
CONST	ENDS
;	COMDAT __real@403b000000000000
CONST	SEGMENT
__real@403b000000000000 DQ 0403b000000000000r	; 27
CONST	ENDS
;	COMDAT __real@40412eeef1bac2df
CONST	SEGMENT
__real@40412eeef1bac2df DQ 040412eeef1bac2dfr	; 34.3667
CONST	ENDS
;	COMDAT __real@4044cccccccccccd
CONST	SEGMENT
__real@4044cccccccccccd DQ 04044cccccccccccdr	; 41.6
CONST	ENDS
;	COMDAT __real@c037e2221c8a7a42
CONST	SEGMENT
__real@c037e2221c8a7a42 DQ 0c037e2221c8a7a42r	; -23.8833
CONST	ENDS
;	COMDAT __real@4046800000000000
CONST	SEGMENT
__real@4046800000000000 DQ 04046800000000000r	; 45
CONST	ENDS
;	COMDAT __real@404768888b545c79
CONST	SEGMENT
__real@404768888b545c79 DQ 0404768888b545c79r	; 46.8167
CONST	ENDS
;	COMDAT __real@404a000000000000
CONST	SEGMENT
__real@404a000000000000 DQ 0404a000000000000r	; 52
CONST	ENDS
;	COMDAT __real@404b000000000000
CONST	SEGMENT
__real@404b000000000000 DQ 0404b000000000000r	; 54
CONST	ENDS
;	COMDAT __real@404c000000000000
CONST	SEGMENT
__real@404c000000000000 DQ 0404c000000000000r	; 56
CONST	ENDS
;	COMDAT __real@404c800000000000
CONST	SEGMENT
__real@404c800000000000 DQ 0404c800000000000r	; 57
CONST	ENDS
;	COMDAT __real@4048d77774aba387
CONST	SEGMENT
__real@4048d77774aba387 DQ 04048d77774aba387r	; 49.6833
CONST	ENDS
;	COMDAT __real@4048e8888b545c79
CONST	SEGMENT
__real@4048e8888b545c79 DQ 04048e8888b545c79r	; 49.8167
CONST	ENDS
;	COMDAT __real@4048b77774aba387
CONST	SEGMENT
__real@4048b77774aba387 DQ 04048b77774aba387r	; 49.4333
CONST	ENDS
;	COMDAT __real@4048155558212945
CONST	SEGMENT
__real@4048155558212945 DQ 04048155558212945r	; 48.1667
CONST	ENDS
;	COMDAT __real@4046f33333333333
CONST	SEGMENT
__real@4046f33333333333 DQ 04046f33333333333r	; 45.9
CONST	ENDS
;	COMDAT __real@c04a400000000000
CONST	SEGMENT
__real@c04a400000000000 DQ 0c04a400000000000r	; -52.5
CONST	ENDS
;	COMDAT __real@4046955558212945
CONST	SEGMENT
__real@4046955558212945 DQ 04046955558212945r	; 45.1667
CONST	ENDS
;	COMDAT __real@40458eeef1bac2df
CONST	SEGMENT
__real@40458eeef1bac2df DQ 040458eeef1bac2dfr	; 43.1167
CONST	ENDS
;	COMDAT __real@4044d55558212945
CONST	SEGMENT
__real@4044d55558212945 DQ 04044d55558212945r	; 41.6667
CONST	ENDS
;	COMDAT __real@4044355558212945
CONST	SEGMENT
__real@4044355558212945 DQ 04044355558212945r	; 40.4167
CONST	ENDS
;	COMDAT __real@c050c00000000000
CONST	SEGMENT
__real@c050c00000000000 DQ 0c050c00000000000r	; -67
CONST	ENDS
;	COMDAT __real@4045000000000000
CONST	SEGMENT
__real@4045000000000000 DQ 04045000000000000r	; 42
CONST	ENDS
;	COMDAT __real@c050400000000000
CONST	SEGMENT
__real@c050400000000000 DQ 0c050400000000000r	; -65
CONST	ENDS
;	COMDAT __real@4045622224edf612
CONST	SEGMENT
__real@4045622224edf612 DQ 04045622224edf612r	; 42.7667
CONST	ENDS
;	COMDAT __real@c04e000000000000
CONST	SEGMENT
__real@c04e000000000000 DQ 0c04e000000000000r	; -60
CONST	ENDS
;	COMDAT __real@40461ddddb1209ee
CONST	SEGMENT
__real@40461ddddb1209ee DQ 040461ddddb1209eer	; 44.2333
CONST	ENDS
;	COMDAT __real@c04a800000000000
CONST	SEGMENT
__real@c04a800000000000 DQ 0c04a800000000000r	; -53
CONST	ENDS
;	COMDAT __real@4047155558212945
CONST	SEGMENT
__real@4047155558212945 DQ 04047155558212945r	; 46.1667
CONST	ENDS
;	COMDAT __real@c049000000000000
CONST	SEGMENT
__real@c049000000000000 DQ 0c049000000000000r	; -50
CONST	ENDS
;	COMDAT __real@4047866666666666
CONST	SEGMENT
__real@4047866666666666 DQ 04047866666666666r	; 47.05
CONST	ENDS
;	COMDAT __real@c044000000000000
CONST	SEGMENT
__real@c044000000000000 DQ 0c044000000000000r	; -40
CONST	ENDS
;	COMDAT __real@4048a22224edf612
CONST	SEGMENT
__real@4048a22224edf612 DQ 04048a22224edf612r	; 49.2667
CONST	ENDS
;	COMDAT __real@c03e000000000000
CONST	SEGMENT
__real@c03e000000000000 DQ 0c03e000000000000r	; -30
CONST	ENDS
;	COMDAT __real@4049400000000000
CONST	SEGMENT
__real@4049400000000000 DQ 04049400000000000r	; 50.5
CONST	ENDS
;	COMDAT __real@c034000000000000
CONST	SEGMENT
__real@c034000000000000 DQ 0c034000000000000r	; -20
CONST	ENDS
;	COMDAT __real@40496aaaa7ded6bb
CONST	SEGMENT
__real@40496aaaa7ded6bb DQ 040496aaaa7ded6bbr	; 50.8333
CONST	ENDS
;	COMDAT __real@c02e000000000000
CONST	SEGMENT
__real@c02e000000000000 DQ 0c02e000000000000r	; -15
CONST	ENDS
;	COMDAT __real@4049577774aba387
CONST	SEGMENT
__real@4049577774aba387 DQ 04049577774aba387r	; 50.6833
; Function compile flags: /Ogtp
CONST	ENDS
_TEXT	SEGMENT
tv1792 = -8						; size = 4
tv1779 = -8						; size = 4
tv1766 = -8						; size = 4
tv1753 = -8						; size = 4
$T245436 = -8						; size = 4
tv1806 = -4						; size = 4
$T245560 = -4						; size = 4
$T245529 = -4						; size = 4
$T245498 = -4						; size = 4
$T245467 = -4						; size = 4
?AddConcordTracks@NATData@@KAXPAUNATWorkerCont@1@@Z PROC ; NATData::AddConcordTracks
; File c:\users\michael\desktop\code\euronat\natdata.cpp
; Line 194
	push	ebp
	mov	ebp, esp
; Line 195
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A+4
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	edi, DWORD PTR [eax]
; Line 199
	mov	esi, edi
	imul	esi, 584				; 00000248H
	lea	ecx, DWORD PTR [edi+5]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	BYTE PTR [esi+edx+580], 1
; Line 200
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	xor	ebx, ebx
	mov	DWORD PTR [esi+eax+8], ebx
; Line 201
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	BYTE PTR [esi+ecx+4], 77		; 0000004dH
; Line 202
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	push	3
	lea	ecx, DWORD PTR [esi+edx+96]
	push	OFFSET ??_C@_03EBHGFDMP@15W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 203
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@4049577774aba387
; Line 205
	push	3
	fstp	QWORD PTR [esi+eax+104]
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c02e000000000000
	push	OFFSET ??_C@_03FFAIDOMK@20W?$AA@
	fstp	QWORD PTR [esi+ecx+112]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+120]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 206
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@40496aaaa7ded6bb
	fstp	QWORD PTR [esi+eax+128]
; Line 207
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c034000000000000
; Line 208
	push	3
	fstp	QWORD PTR [esi+ecx+136]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+144]
	push	OFFSET ??_C@_03ONLEFJKP@30W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 209
	fld	QWORD PTR __real@4049400000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+152]
; Line 210
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c03e000000000000
; Line 211
	push	3
	fstp	QWORD PTR [esi+ecx+160]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+168]
	push	OFFSET ??_C@_03HAGDGBBG@40W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 212
	fld	QWORD PTR __real@4048a22224edf612
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+176]
; Line 213
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c044000000000000
; Line 214
	push	3
	fstp	QWORD PTR [esi+ecx+184]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+192]
	push	OFFSET ??_C@_03MINPAGHD@50W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 215
	fld	QWORD PTR __real@4047866666666666
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+200]
; Line 216
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c049000000000000
; Line 217
	push	3
	fstp	QWORD PTR [esi+ecx+208]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+216]
	push	OFFSET ??_C@_03MKJJLICK@53W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 218
	fld	QWORD PTR __real@4047155558212945
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+224]
; Line 219
	fld	QWORD PTR __real@c04a800000000000
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+232]
; Line 220
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	push	3
	lea	ecx, DWORD PTR [esi+edx+240]
	push	OFFSET ??_C@_03NKGKKJJN@60W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 221
	fld	QWORD PTR __real@40461ddddb1209ee
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+248]
; Line 222
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c04e000000000000
; Line 223
	push	3
	fstp	QWORD PTR [esi+ecx+256]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+264]
	push	OFFSET ??_C@_03NMKBGLHG@65W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 224
	fld	QWORD PTR __real@4045622224edf612
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+272]
; Line 225
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c050400000000000
; Line 226
	push	3
	fstp	QWORD PTR [esi+ecx+280]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+288]
	push	OFFSET ??_C@_03NPCFLPBI@67W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 227
	fld	QWORD PTR __real@4045000000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+296]
; Line 228
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c050c00000000000
; Line 236
	push	3
	fstp	QWORD PTR [esi+ecx+304]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+edx], 9
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	esi, DWORD PTR [edi+1]
	imul	esi, 584				; 00000248H
	mov	BYTE PTR [esi+eax+580], 1
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+ecx+8], ebx
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	BYTE PTR [esi+edx+4], 78		; 0000004eH
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+96]
	push	OFFSET ??_C@_03NPCFLPBI@67W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 237
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@4044355558212945
; Line 239
	push	3
	fstp	QWORD PTR [esi+ecx+104]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c050c00000000000
	push	OFFSET ??_C@_03NMKBGLHG@65W?$AA@
	fstp	QWORD PTR [esi+edx+112]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+120]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 240
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@4044d55558212945
	fstp	QWORD PTR [esi+ecx+128]
; Line 241
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c050400000000000
; Line 242
	push	3
	fstp	QWORD PTR [esi+edx+136]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+144]
	push	OFFSET ??_C@_03NKGKKJJN@60W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 243
	fld	QWORD PTR __real@40458eeef1bac2df
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+152]
; Line 244
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c04e000000000000
; Line 245
	push	5
	fstp	QWORD PTR [esi+edx+160]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+168]
	push	OFFSET ??_C@_05PCGEFKOI@5230W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 246
	fld	QWORD PTR __real@4046955558212945
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+176]
; Line 247
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c04a400000000000
; Line 248
	push	3
	fstp	QWORD PTR [esi+edx+184]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+192]
	push	OFFSET ??_C@_03MINPAGHD@50W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 249
	fld	QWORD PTR __real@4046f33333333333
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+200]
; Line 250
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c049000000000000
; Line 251
	push	3
	fstp	QWORD PTR [esi+edx+208]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+216]
	push	OFFSET ??_C@_03HAGDGBBG@40W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 252
	fld	QWORD PTR __real@4048155558212945
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+224]
; Line 253
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c044000000000000
; Line 254
	push	3
	fstp	QWORD PTR [esi+edx+232]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+240]
	push	OFFSET ??_C@_03ONLEFJKP@30W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 255
	fld	QWORD PTR __real@4048b77774aba387
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+248]
; Line 256
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c03e000000000000
; Line 257
	push	3
	fstp	QWORD PTR [esi+edx+256]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+264]
	push	OFFSET ??_C@_03FFAIDOMK@20W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 258
	fld	QWORD PTR __real@4048e8888b545c79
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+272]
; Line 259
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c034000000000000
; Line 260
	push	3
	fstp	QWORD PTR [esi+edx+280]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+288]
	push	OFFSET ??_C@_03EBHGFDMP@15W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 261
	fld	QWORD PTR __real@4048d77774aba387
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+296]
; Line 262
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c02e000000000000
	fstp	QWORD PTR [esi+edx+304]
; Line 263
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+eax], 9
; Line 267
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	esi, DWORD PTR [edi+2]
	imul	esi, 584				; 00000248H
	mov	BYTE PTR [esi+ecx+580], 1
; Line 268
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+edx+8], ebx
; Line 269
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	BYTE PTR [esi+eax+4], 76		; 0000004cH
; Line 270
	mov	ecx, OFFSET ??_C@_03MINPAGHD@50W?$AA@
	cmp	BYTE PTR ?ShortWPNames@NATShow@@2_NA, bl ; NATShow::ShortWPNames
	jne	SHORT $LN4@AddConcord
	mov	ecx, OFFSET ??_C@_06HABAFNNJ@57N50W?$AA@
$LN4@AddConcord:
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	eax, DWORD PTR [esi+edx+96]
	mov	DWORD PTR $T245436[ebp], eax
	cmp	ecx, ebx
	jne	SHORT $LN181@AddConcord
	xor	eax, eax
	jmp	SHORT $LN182@AddConcord
$LN181@AddConcord:
	mov	eax, ecx
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR tv1806[ebp], edx
$LL346@AddConcord:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL346@AddConcord
	sub	eax, DWORD PTR tv1806[ebp]
$LN182@AddConcord:
	push	eax
	push	ecx
	mov	ecx, DWORD PTR $T245436[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 271
	fld	QWORD PTR __real@404c800000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+104]
; Line 272
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c049000000000000
	fstp	QWORD PTR [esi+ecx+112]
; Line 273
	mov	ecx, OFFSET ??_C@_03HAGDGBBG@40W?$AA@
	cmp	BYTE PTR ?ShortWPNames@NATShow@@2_NA, bl ; NATShow::ShortWPNames
	jne	SHORT $LN6@AddConcord
	mov	ecx, OFFSET ??_C@_06MIKMDKLM@57N40W?$AA@
$LN6@AddConcord:
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	eax, DWORD PTR [esi+edx+120]
	mov	DWORD PTR $T245467[ebp], eax
	cmp	ecx, ebx
	jne	SHORT $LN190@AddConcord
	xor	eax, eax
	jmp	SHORT $LN191@AddConcord
$LN190@AddConcord:
	mov	eax, ecx
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR tv1792[ebp], edx
$LL347@AddConcord:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL347@AddConcord
	sub	eax, DWORD PTR tv1792[ebp]
$LN191@AddConcord:
	push	eax
	push	ecx
	mov	ecx, DWORD PTR $T245467[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 274
	fld	QWORD PTR __real@404c800000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+128]
; Line 275
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c044000000000000
	fstp	QWORD PTR [esi+ecx+136]
; Line 276
	mov	ecx, OFFSET ??_C@_03ONLEFJKP@30W?$AA@
	cmp	BYTE PTR ?ShortWPNames@NATShow@@2_NA, bl ; NATShow::ShortWPNames
	jne	SHORT $LN8@AddConcord
	mov	ecx, OFFSET ??_C@_06JOCHNBKA@56N30W?$AA@
$LN8@AddConcord:
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	eax, DWORD PTR [esi+edx+144]
	mov	DWORD PTR $T245498[ebp], eax
	cmp	ecx, ebx
	jne	SHORT $LN199@AddConcord
	xor	eax, eax
	jmp	SHORT $LN200@AddConcord
$LN199@AddConcord:
	mov	eax, ecx
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR tv1779[ebp], edx
$LL348@AddConcord:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL348@AddConcord
	sub	eax, DWORD PTR tv1779[ebp]
$LN200@AddConcord:
	push	eax
	push	ecx
	mov	ecx, DWORD PTR $T245498[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 277
	fld	QWORD PTR __real@404c000000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+152]
; Line 278
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c03e000000000000
	fstp	QWORD PTR [esi+ecx+160]
; Line 279
	mov	ecx, OFFSET ??_C@_03FFAIDOMK@20W?$AA@
	cmp	BYTE PTR ?ShortWPNames@NATShow@@2_NA, bl ; NATShow::ShortWPNames
	jne	SHORT $LN10@AddConcord
	mov	ecx, OFFSET ??_C@_06GLFDBHMO@54N20W?$AA@
$LN10@AddConcord:
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	eax, DWORD PTR [esi+edx+168]
	mov	DWORD PTR $T245529[ebp], eax
	cmp	ecx, ebx
	jne	SHORT $LN208@AddConcord
	xor	eax, eax
	jmp	SHORT $LN209@AddConcord
$LN208@AddConcord:
	mov	eax, ecx
	lea	edx, DWORD PTR [eax+1]
	mov	DWORD PTR tv1766[ebp], edx
	npad	5
$LL349@AddConcord:
	mov	dl, BYTE PTR [eax]
	inc	eax
	cmp	dl, bl
	jne	SHORT $LL349@AddConcord
	sub	eax, DWORD PTR tv1766[ebp]
$LN209@AddConcord:
	push	eax
	push	ecx
	mov	ecx, DWORD PTR $T245529[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 280
	fld	QWORD PTR __real@404b000000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+176]
; Line 281
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c034000000000000
; Line 282
	mov	eax, OFFSET ??_C@_03EBHGFDMP@15W?$AA@
	fstp	QWORD PTR [esi+ecx+184]
	cmp	BYTE PTR ?ShortWPNames@NATShow@@2_NA, bl ; NATShow::ShortWPNames
	jne	SHORT $LN12@AddConcord
	mov	eax, OFFSET ??_C@_06KJHEJJNG@52N15W?$AA@
$LN12@AddConcord:
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+edx+192]
	mov	DWORD PTR $T245560[ebp], ecx
	cmp	eax, ebx
	jne	SHORT $LN217@AddConcord
	xor	ecx, ecx
	jmp	SHORT $LN218@AddConcord
$LN217@AddConcord:
	mov	ecx, eax
	lea	edx, DWORD PTR [ecx+1]
	mov	DWORD PTR tv1753[ebp], edx
	npad	5
$LL350@AddConcord:
	mov	dl, BYTE PTR [ecx]
	inc	ecx
	cmp	dl, bl
	jne	SHORT $LL350@AddConcord
	sub	ecx, DWORD PTR tv1753[ebp]
$LN218@AddConcord:
	push	ecx
	mov	ecx, DWORD PTR $T245560[ebp]
	push	eax
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 283
	fld	QWORD PTR __real@404a000000000000
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+eax+200]
; Line 284
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c02e000000000000
; Line 292
	push	3
	fstp	QWORD PTR [esi+ecx+208]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+edx], 5
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	esi, DWORD PTR [edi+3]
	imul	esi, 584				; 00000248H
	mov	BYTE PTR [esi+eax+580], 1
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+ecx+8], ebx
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	BYTE PTR [esi+edx+4], 80		; 00000050H
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+96]
	push	OFFSET ??_C@_03FFAIDOMK@20W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 293
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@404768888b545c79
; Line 295
	push	3
	fstp	QWORD PTR [esi+ecx+104]
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c034000000000000
	push	OFFSET ??_C@_03ONKIAKOF@45N?$AA@
	fstp	QWORD PTR [esi+edx+112]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+120]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 296
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@4046800000000000
	fstp	QWORD PTR [esi+ecx+128]
; Line 297
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c037e2221c8a7a42
; Line 298
	push	3
	fstp	QWORD PTR [esi+edx+136]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+144]
	push	OFFSET ??_C@_03ONLEFJKP@30W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 299
	fld	QWORD PTR __real@4044cccccccccccd
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+152]
; Line 300
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c03e000000000000
; Line 301
	push	3
	fstp	QWORD PTR [esi+edx+160]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+168]
	push	OFFSET ??_C@_03HAGDGBBG@40W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 302
	fld	QWORD PTR __real@40412eeef1bac2df
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+176]
; Line 303
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c044000000000000
; Line 304
	push	3
	fstp	QWORD PTR [esi+edx+184]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+192]
	push	OFFSET ??_C@_03MLEHIBFH@27N?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 305
	fld	QWORD PTR __real@403b000000000000
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+200]
; Line 306
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c047e44441787054
; Line 307
	push	3
	fstp	QWORD PTR [esi+edx+208]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+216]
	push	OFFSET ??_C@_03MINPAGHD@50W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 308
	fld	QWORD PTR __real@4038a2221c8a7a42
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+224]
; Line 309
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c049000000000000
; Line 310
	push	3
	fstp	QWORD PTR [esi+edx+232]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+eax+240]
	push	OFFSET ??_C@_03NCKOGJIE@18N?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 311
	fld	QWORD PTR __real@4032000000000000
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+ecx+248]
; Line 312
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c04bd33333333333
; Line 320
	push	3
	fstp	QWORD PTR [esi+edx+256]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+eax], 7
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	esi, DWORD PTR [edi+4]
	imul	esi, 584				; 00000248H
	mov	BYTE PTR [esi+ecx+580], 1
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+edx+8], ebx
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	BYTE PTR [esi+eax+4], 79		; 0000004fH
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+ecx+96]
	push	OFFSET ??_C@_03EBHGFDMP@15W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 321
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@4048555558212945
; Line 323
	push	3
	fstp	QWORD PTR [esi+edx+104]
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c02e000000000000
	push	OFFSET ??_C@_03FFAIDOMK@20W?$AA@
	fstp	QWORD PTR [esi+eax+112]
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+ecx+120]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 324
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@4048666666666666
	fstp	QWORD PTR [esi+edx+128]
; Line 325
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c034000000000000
; Line 326
	push	3
	fstp	QWORD PTR [esi+eax+136]
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+ecx+144]
	push	OFFSET ??_C@_03ONLEFJKP@30W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 327
	fld	QWORD PTR __real@40482eeef1bac2df
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+edx+152]
; Line 328
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c03e000000000000
; Line 329
	push	3
	fstp	QWORD PTR [esi+eax+160]
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+ecx+168]
	push	OFFSET ??_C@_03HAGDGBBG@40W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 330
	fld	QWORD PTR __real@404788888b545c79
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+edx+176]
; Line 331
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c044000000000000
; Line 332
	push	3
	fstp	QWORD PTR [esi+eax+184]
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+ecx+192]
	push	OFFSET ??_C@_03MINPAGHD@50W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 333
	fld	QWORD PTR __real@4046600000000000
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+edx+200]
; Line 334
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c049000000000000
	fstp	QWORD PTR [esi+eax+208]
; Line 335
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	push	3
	lea	ecx, DWORD PTR [esi+ecx+216]
	push	OFFSET ??_C@_03MLFLNCBN@52W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 336
	fld	QWORD PTR __real@4046155558212945
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+edx+224]
; Line 337
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c04a000000000000
; Line 338
	push	3
	fstp	QWORD PTR [esi+eax+232]
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	lea	ecx, DWORD PTR [esi+ecx+240]
	push	OFFSET ??_C@_03NKGKKJJN@60W?$AA@
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 339
	fld	QWORD PTR __real@4045000000000000
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fstp	QWORD PTR [esi+edx+248]
; Line 340
	mov	eax, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	fld	QWORD PTR __real@c04e000000000000
	pop	edi
	fstp	QWORD PTR [esi+eax+256]
; Line 341
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [esi+ecx], 7
	pop	esi
	pop	ebx
; Line 342
	mov	esp, ebp
	pop	ebp
	ret	0
?AddConcordTracks@NATData@@KAXPAUNATWorkerCont@1@@Z ENDP ; NATData::AddConcordTracks
PUBLIC	__real@bff0000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?FetchDataWorker@NATData@@KAIPAX@Z		; NATData::FetchDataWorker
;	COMDAT __real@bff0000000000000
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
__catchsym$?FetchDataWorker@NATData@@KAIPAX@Z$22 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?FetchDataWorker@NATData@@KAIPAX@Z$2
__catchsym$?FetchDataWorker@NATData@@KAIPAX@Z$21 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$?FetchDataWorker@NATData@@KAIPAX@Z$0
__ehfuncinfo$?FetchDataWorker@NATData@@KAIPAX@Z DD 019930522H
	DD	010H
	DD	FLAT:__unwindtable$?FetchDataWorker@NATData@@KAIPAX@Z
	DD	02H
	DD	FLAT:__tryblocktable$?FetchDataWorker@NATData@@KAIPAX@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__tryblocktable$?FetchDataWorker@NATData@@KAIPAX@Z DD 00H
	DD	05H
	DD	06H
	DD	01H
	DD	FLAT:__catchsym$?FetchDataWorker@NATData@@KAIPAX@Z$21
	DD	0cH
	DD	0eH
	DD	0fH
	DD	01H
	DD	FLAT:__catchsym$?FetchDataWorker@NATData@@KAIPAX@Z$22
__unwindtable$?FetchDataWorker@NATData@@KAIPAX@Z DD 0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$4
	DD	01H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$5
	DD	01H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$6
	DD	01H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$7
	DD	01H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$8
	DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$9
	DD	07H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$10
	DD	08H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$11
	DD	09H
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$12
	DD	0aH
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$13
	DD	0bH
	DD	00H
	DD	0cH
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$18
	DD	0cH
	DD	FLAT:__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$19
	DD	0bH
	DD	00H
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_grab$ = -2308						; size = 48
$T247813 = -2260					; size = 16
_olevarLon$232840 = -2244				; size = 16
_olevarLat$232837 = -2228				; size = 16
$T247811 = -2212					; size = 4
tv1696 = -2208						; size = 4
$T247809 = -2204					; size = 4
$T247810 = -2200					; size = 4
tv1786 = -2196						; size = 4
$T247812 = -2192					; size = 4
_nOldLength$249222 = -2188				; size = 4
_rtalc$232816 = -2184					; size = 4
_lines$ = -2180						; size = 20
_precord$ = -2160					; size = 4
_vals$ = -2156						; size = 20
_tmi$ = -2136						; size = 4
_rtal$ = -2132						; size = 20
_response$ = -2112					; size = 4
_i$232803 = -2108					; size = 4
_pqry$ = -2104						; size = 4
_count$ = -2100						; size = 4
$T247804 = -2100					; size = 4
$T247800 = -2100					; size = 4
$T247796 = -2100					; size = 4
_pwpdb$ = -2096						; size = 4
$T247794 = -2096					; size = 4
tv1789 = -2092						; size = 4
_lon$232823 = -2092					; size = 4
_j$232815 = -2088					; size = 4
_dta$ = -2084						; size = 4
_dbfilename$232766 = -2080				; size = 4
_nOffset$249223 = -2076					; size = 4
_pNewData$249263 = -2076				; size = 4
_lat$232821 = -2076					; size = 4
_c$232802 = -2072					; size = 4
_dllpath$232764 = -2068					; size = 2048
__$ArrayPad$ = -20					; size = 4
__$EHRec$ = -16						; size = 16
_pvar$ = 8						; size = 4
?FetchDataWorker@NATData@@KAIPAX@Z PROC			; NATData::FetchDataWorker
; File c:\users\michael\desktop\code\euronat\natdata.cpp
; Line 63
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?FetchDataWorker@NATData@@KAIPAX@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 2296				; 000008f8H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	ebx
	push	esi
	push	edi
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp], esp
; Line 75
	push	2048					; 00000800H
	lea	eax, DWORD PTR _dllpath$232764[ebp]
	push	eax
	push	OFFSET ??_C@_0M@MBIMMEME@euroNAT?4dll?$AA@
	mov	DWORD PTR _dta$[ebp], OFFSET ?NATWorkerData@NATData@@2UNATWorkerCont@1@A ; NATData::NATWorkerData
	mov	BYTE PTR ?Loading@NATShow@@2_NA, 1	; NATShow::Loading
	mov	DWORD PTR __$EHRec$[ebp+12], 0
	call	DWORD PTR __imp__GetModuleHandleA@4
	push	eax
	call	DWORD PTR __imp__GetModuleFileNameA@12
; Line 76
	lea	ecx, DWORD PTR _dllpath$232764[ebp]
	push	ecx
	lea	ecx, DWORD PTR _dbfilename$232766[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 77
	mov	edx, DWORD PTR _dbfilename$232766[ebp]
	push	92					; 0000005cH
	push	edx
	call	__mbsrchr
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN68@FetchDataW
	or	eax, -1
	jmp	SHORT $LN69@FetchDataW
$LN68@FetchDataW:
	sub	eax, DWORD PTR _dbfilename$232766[ebp]
$LN69@FetchDataW:
	inc	eax
	push	eax
	lea	eax, DWORD PTR $T247794[ebp]
	push	eax
	lea	ecx, DWORD PTR _dbfilename$232766[ebp]
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	BYTE PTR __$EHRec$[ebp+12], 2
	mov	ecx, DWORD PTR [eax]
	mov	esi, DWORD PTR _dbfilename$232766[ebp]
	lea	eax, DWORD PTR [ecx-16]
	add	esi, -16				; fffffff0H
	cmp	eax, esi
	je	SHORT $LN99@FetchDataW
	cmp	DWORD PTR [esi+12], 0
	lea	edi, DWORD PTR [esi+12]
	jl	SHORT $LN79@FetchDataW
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [esi]
	jne	SHORT $LN79@FetchDataW
	push	eax
	call	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
	mov	ebx, eax
	add	esp, 4
	or	eax, -1
	lock	 xadd	 DWORD PTR [edi], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN96@FetchDataW
	mov	ecx, DWORD PTR [esi]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	esi
	call	eax
$LN96@FetchDataW:
	add	ebx, 16					; 00000010H
	mov	DWORD PTR _dbfilename$232766[ebp], ebx
	jmp	SHORT $LN99@FetchDataW
$LN79@FetchDataW:
	mov	eax, DWORD PTR [ecx-12]
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _dbfilename$232766[ebp]
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
$LN99@FetchDataW:
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	eax, DWORD PTR $T247794[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN109@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN109@FetchDataW:
; Line 78
	push	6
	push	OFFSET ??_C@_06OPNGBHIH@wp?4mdb?$AA@
	lea	ecx, DWORD PTR _dbfilename$232766[ebp]
	call	?Append@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::Append
; Line 81
	push	120					; 00000078H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T247796[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 3
	test	eax, eax
	je	SHORT $LN29@FetchDataW
	push	0
	mov	ecx, eax
	call	??0CDaoDatabase@@QAE@PAVCDaoWorkspace@@@Z ; CDaoDatabase::CDaoDatabase
	mov	esi, eax
	jmp	SHORT $LN30@FetchDataW
$LN29@FetchDataW:
	xor	esi, esi
$LN30@FetchDataW:
; Line 82
	push	OFFSET ??_C@_00CNPNBAHC@?$AA@
	mov	BYTE PTR __$EHRec$[ebp+12], 1
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR _dbfilename$232766[ebp]
	mov	edx, DWORD PTR [edx+16]
	push	1
	push	0
	push	eax
	mov	ecx, esi
	mov	DWORD PTR _pwpdb$[ebp], esi
	call	edx
; Line 84
	push	28					; 0000001cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T247800[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 4
	test	eax, eax
	je	SHORT $LN31@FetchDataW
	push	esi
	mov	ecx, eax
	call	??0CDaoQueryDef@@QAE@PAVCDaoDatabase@@@Z ; CDaoQueryDef::CDaoQueryDef
	mov	ecx, eax
	jmp	SHORT $LN32@FetchDataW
$LN31@FetchDataW:
	xor	ecx, ecx
$LN32@FetchDataW:
	mov	BYTE PTR __$EHRec$[ebp+12], 1
; Line 85
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+20]
	push	OFFSET ??_C@_0BC@CFDJFMBB@GetWaypointLatLon?$AA@
	mov	DWORD PTR _pqry$[ebp], ecx
	call	edx
; Line 87
	push	152					; 00000098H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T247804[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+12], 5
	test	eax, eax
	je	SHORT $LN33@FetchDataW
	push	esi
	mov	ecx, eax
	call	??0CDaoRecordset@@QAE@PAVCDaoDatabase@@@Z ; CDaoRecordset::CDaoRecordset
	jmp	SHORT $LN34@FetchDataW
$LN33@FetchDataW:
	xor	eax, eax
$LN34@FetchDataW:
	mov	ebx, eax
; Line 88
	mov	BYTE PTR __$EHRec$[ebp+12], 0
	mov	eax, DWORD PTR _dbfilename$232766[ebp]
	add	eax, -16				; fffffff0H
	mov	DWORD PTR _precord$[ebp], ebx
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN135@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN135@FetchDataW:
	mov	DWORD PTR __$EHRec$[ebp+12], -1
; Line 94
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	test	ecx, ecx
	jne	SHORT $LN150@FetchDataW
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN642@FetchDataW:
$LN150@FetchDataW:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR _response$[ebp], eax
; Line 95
	lea	esi, DWORD PTR _grab$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 7
	call	??0CWebGrab@@QAE@XZ			; CWebGrab::CWebGrab
; Line 97
	lea	edx, DWORD PTR _response$[ebp]
	mov	ecx, esi
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	call	?GetFile@CWebGrab@@QAEHPBDAAV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@0PAVCWnd@@@Z ; CWebGrab::GetFile
; Line 100
	mov	edx, DWORD PTR _dta$[ebp]
	xor	ecx, ecx
$LN25@FetchDataW:
	mov	esi, DWORD PTR [edx]
	mov	eax, ecx
	imul	eax, 584				; 00000248H
	mov	BYTE PTR [eax+esi+4], 0
	xor	eax, eax
$LL22@FetchDataW:
	mov	edi, DWORD PTR [edx]
	mov	esi, ecx
	imul	esi, 146				; 00000092H
	add	esi, eax
	inc	eax
	mov	DWORD PTR [edi+esi*4+12], 0
	cmp	eax, 20					; 00000014H
	jl	SHORT $LL22@FetchDataW
	inc	ecx
	cmp	ecx, 26					; 0000001aH
	jl	SHORT $LN25@FetchDataW
; Line 103
	lea	ecx, DWORD PTR _lines$[ebp]
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
; Line 104
	lea	ecx, DWORD PTR _vals$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
; Line 105
	lea	ecx, DWORD PTR _rtal$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	call	??0CStringArray@@QAE@XZ			; CStringArray::CStringArray
; Line 106
	push	-1
	push	0
	lea	ecx, DWORD PTR _lines$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 11		; 0000000bH
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	mov	edi, DWORD PTR _response$[ebp]
	mov	eax, edi
	lea	edx, DWORD PTR [eax+1]
	npad	5
$LL628@FetchDataW:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL628@FetchDataW
	sub	eax, edx
	inc	eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	esi, eax
	add	esp, 4
	mov	ecx, edi
	mov	edx, esi
	npad	7
$LL167@FetchDataW:
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al
	inc	ecx
	inc	edx
	test	al, al
	jne	SHORT $LL167@FetchDataW
	mov	eax, esi
	npad	4
$LL164@FetchDataW:
	push	OFFSET ??_C@_01EEMJAFIK@?6?$AA@
	push	eax
	call	__mbstok
	add	esp, 8
	test	eax, eax
	jne	$LN162@FetchDataW
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 107
	cmp	DWORD PTR _lines$[ebp+8], 0
	jg	SHORT $LN177@FetchDataW
; Line 113
$LN225@FetchDataW:
; Line 107
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN643@FetchDataW:
$LN177@FetchDataW:
	mov	ecx, DWORD PTR _lines$[ebp+4]
	mov	eax, DWORD PTR [ecx]
	push	eax
	call	_atoi
; Line 109
	mov	edx, DWORD PTR _dta$[ebp]
	mov	edx, DWORD PTR [edx+4]
	add	esp, 4
	xor	ecx, ecx
; Line 110
	mov	edi, 1
	mov	DWORD PTR _count$[ebp], eax
	mov	DWORD PTR _tmi$[ebp], ecx
	mov	DWORD PTR [edx], eax
	mov	DWORD PTR _c$232802[ebp], ecx
	mov	DWORD PTR _i$232803[ebp], edi
$LN641@FetchDataW:
	mov	esi, DWORD PTR _pwpdb$[ebp]
	cmp	DWORD PTR _c$232802[ebp], eax
	jge	$LN17@FetchDataW
; Line 111
	test	edi, edi
	js	SHORT $LN225@FetchDataW
	cmp	edi, DWORD PTR _lines$[ebp+8]
	jge	SHORT $LN225@FetchDataW
	mov	ecx, DWORD PTR _lines$[ebp+4]
	push	1
	lea	edx, DWORD PTR $T247809[ebp]
	lea	esi, DWORD PTR [edi*4]
	lea	ecx, DWORD PTR [ecx+esi]
	push	edx
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	eax, DWORD PTR [eax]
	push	OFFSET ??_C@_01IPJKGB@?$CD?$AA@
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T247809[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN220@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN220@FetchDataW:
	test	bl, bl
	je	SHORT $LN16@FetchDataW
; Line 113
	cmp	edi, DWORD PTR _lines$[ebp+8]
	jge	$LN225@FetchDataW
	mov	ecx, DWORD PTR _lines$[ebp+4]
	mov	edx, DWORD PTR [ecx+esi]
	mov	eax, DWORD PTR [edx-12]
	add	ecx, esi
	dec	eax
	push	eax
	lea	edx, DWORD PTR $T247810[ebp]
	push	edx
	call	?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Right
	mov	eax, DWORD PTR [eax]
	push	eax
	call	_atoi
	mov	DWORD PTR _tmi$[ebp], eax
	mov	eax, DWORD PTR $T247810[ebp]
	add	eax, -16				; fffffff0H
	add	esp, 4
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN249@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN249@FetchDataW:
; Line 114
	dec	DWORD PTR _c$232802[ebp]
	inc	DWORD PTR _c$232802[ebp]
; Line 118
	mov	eax, DWORD PTR _count$[ebp]
	mov	ebx, DWORD PTR _precord$[ebp]
	inc	edi
	mov	DWORD PTR _i$232803[ebp], edi
	jmp	$LN641@FetchDataW
$LN16@FetchDataW:
	cmp	edi, DWORD PTR _lines$[ebp+8]
	jge	$LN225@FetchDataW
	mov	ecx, DWORD PTR _lines$[ebp+4]
	mov	esi, DWORD PTR [ecx+esi]
	push	-1
	push	0
	lea	ecx, DWORD PTR _vals$[ebp]
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL629@FetchDataW:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL629@FetchDataW
	sub	eax, edx
	inc	eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	ecx, esi
	mov	edx, edi
$LL266@FetchDataW:
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al
	inc	ecx
	inc	edx
	test	al, al
	jne	SHORT $LL266@FetchDataW
	mov	eax, edi
	npad	4
$LL263@FetchDataW:
	push	OFFSET ??_C@_01DCLJPIOD@?$CB?$AA@
	push	eax
	call	__mbstok
	add	esp, 8
	test	eax, eax
	jne	$LN261@FetchDataW
	push	edi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
; Line 120
	cmp	DWORD PTR _vals$[ebp+8], 2
	jg	SHORT $LN276@FetchDataW
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN644@FetchDataW:
$LN276@FetchDataW:
	mov	edx, DWORD PTR _vals$[ebp+4]
	mov	eax, DWORD PTR [edx+8]
	push	OFFSET ??_C@_03IGPHLJKL@NIL?$AA@
	push	eax
	call	__mbscmp
	mov	ebx, DWORD PTR _dta$[ebp]
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR _c$232802[ebp]
	sete	cl
	imul	eax, 584				; 00000248H
	xor	edx, edx
	test	cl, cl
	mov	ecx, DWORD PTR [ebx]
	setne	dl
	inc	edx
	mov	DWORD PTR [eax+ecx+8], edx
; Line 121
	cmp	DWORD PTR _vals$[ebp+8], 0
	jg	SHORT $LN307@FetchDataW
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN645@FetchDataW:
$LN307@FetchDataW:
	mov	edx, DWORD PTR _vals$[ebp+4]
	mov	ecx, DWORD PTR [edx]
	cmp	DWORD PTR [ecx-12], 0
	jge	SHORT $LN312@FetchDataW
; Line 140
$LN497@FetchDataW:
; Line 121
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN646@FetchDataW:
$LN312@FetchDataW:
	mov	cl, BYTE PTR [ecx]
	mov	edx, DWORD PTR [ebx]
	mov	BYTE PTR [eax+edx+4], cl
; Line 122
	mov	ecx, DWORD PTR [ebx]
	mov	edx, DWORD PTR _tmi$[ebp]
	mov	DWORD PTR [eax+ecx+576], edx
; Line 125
	cmp	DWORD PTR _vals$[ebp+8], 1
	jg	SHORT $LN322@FetchDataW
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN647@FetchDataW:
$LN322@FetchDataW:
	mov	eax, DWORD PTR _vals$[ebp+4]
	mov	esi, DWORD PTR [eax+4]
	push	-1
	push	0
	lea	ecx, DWORD PTR _rtal$[ebp]
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL630@FetchDataW:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL630@FetchDataW
	sub	eax, edx
	inc	eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	ecx, esi
	mov	edx, edi
	npad	6
$LL333@FetchDataW:
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al
	inc	ecx
	inc	edx
	test	al, al
	jne	SHORT $LL333@FetchDataW
	mov	eax, edi
	npad	4
$LL330@FetchDataW:
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	eax
	call	__mbstok
	add	esp, 8
	test	eax, eax
	jne	$LN328@FetchDataW
	push	edi
	call	??3@YAXPAX@Z				; operator delete
; Line 128
	mov	ecx, DWORD PTR _rtal$[ebp+8]
	add	esp, 4
	xor	esi, esi
	mov	DWORD PTR _j$232815[ebp], esi
	mov	DWORD PTR _rtalc$232816[ebp], ecx
$LL15@FetchDataW:
	cmp	esi, DWORD PTR _rtalc$232816[ebp]
	jge	$LN13@FetchDataW
; Line 129
	test	esi, esi
	js	$LN225@FetchDataW
	cmp	esi, DWORD PTR _rtal$[ebp+8]
	jge	$LN225@FetchDataW
	mov	edx, DWORD PTR _rtal$[ebp+4]
	mov	eax, DWORD PTR [edx+esi*4]
	cmp	DWORD PTR [eax-12], 0
	lea	ecx, DWORD PTR [edx+esi*4]
	jge	SHORT $LN350@FetchDataW
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN648@FetchDataW:
$LN350@FetchDataW:
	cmp	BYTE PTR [eax], 48			; 00000030H
	jl	$LN12@FetchDataW
	cmp	DWORD PTR [eax-12], 0
	jge	SHORT $LN365@FetchDataW
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN649@FetchDataW:
$LN365@FetchDataW:
	cmp	BYTE PTR [eax], 57			; 00000039H
	jg	$LN12@FetchDataW
; Line 130
	push	2
	lea	eax, DWORD PTR $T247811[ebp]
	push	eax
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	eax, DWORD PTR [eax]
	push	eax
	call	_atoi
	mov	DWORD PTR _lat$232821[ebp], eax
	mov	eax, DWORD PTR $T247811[ebp]
	add	eax, -16				; fffffff0H
	add	esp, 4
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN387@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN387@FetchDataW:
; Line 131
	cmp	esi, DWORD PTR _rtal$[ebp+8]
	jge	$LN225@FetchDataW
	mov	edx, DWORD PTR _rtal$[ebp+4]
	push	2
	lea	ecx, DWORD PTR $T247812[ebp]
	push	ecx
	lea	ecx, DWORD PTR [edx+esi*4]
	call	?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Right
	mov	eax, DWORD PTR [eax]
	push	eax
	call	_atoi
	mov	edi, eax
	mov	eax, DWORD PTR $T247812[ebp]
	add	eax, -16				; fffffff0H
	add	esp, 4
	mov	DWORD PTR _lon$232823[ebp], edi
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN405@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN405@FetchDataW:
; Line 132
	mov	eax, DWORD PTR _c$232802[ebp]
	fild	DWORD PTR _lat$232821[ebp]
	mov	edx, DWORD PTR [ebx]
	imul	eax, 584				; 00000248H
	lea	ecx, DWORD PTR [esi+esi*2]
	lea	ecx, DWORD PTR [eax+ecx*8]
; Line 135
	push	edi
	fstp	QWORD PTR [ecx+edx+104]
	mov	edx, DWORD PTR [ebx]
	fild	DWORD PTR _lon$232823[ebp]
	fmul	QWORD PTR __real@bff0000000000000
	fstp	QWORD PTR [ecx+edx+112]
	cmp	BYTE PTR ?ShortWPNames@NATShow@@2_NA, 0	; NATShow::ShortWPNames
	je	SHORT $LN11@FetchDataW
	lea	ecx, DWORD PTR [esi+esi*2+12]
	lea	edx, DWORD PTR [eax+ecx*8]
	add	edx, DWORD PTR [ebx]
	push	OFFSET ??_C@_03PDHDNHIA@?$CFdW?$AA@
	push	edx
	call	?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Format
	add	esp, 12					; 0000000cH
$LN14@FetchDataW:
; Line 128
	inc	DWORD PTR _j$232815[ebp]
	mov	esi, DWORD PTR _j$232815[ebp]
	mov	ebx, DWORD PTR _dta$[ebp]
	jmp	$LL15@FetchDataW
$LN11@FetchDataW:
; Line 137
	mov	ecx, DWORD PTR _lat$232821[ebp]
	lea	edx, DWORD PTR [esi+esi*2+12]
	push	ecx
	lea	eax, DWORD PTR [eax+edx*8]
	add	eax, DWORD PTR [ebx]
	push	OFFSET ??_C@_06KGHIGKLN@?$CFdN?$CFdW?$AA@
	push	eax
	call	?Format@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAAXPBDZZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Format
	mov	ebx, DWORD PTR _dta$[ebp]
	add	esp, 16					; 00000010H
	inc	DWORD PTR _j$232815[ebp]
	mov	esi, DWORD PTR _j$232815[ebp]
	jmp	$LL15@FetchDataW
$LN12@FetchDataW:
; Line 140
	mov	eax, DWORD PTR _c$232802[ebp]
	mov	edx, DWORD PTR _j$232815[ebp]
	imul	eax, 584				; 00000248H
	mov	ecx, DWORD PTR [ecx]
	lea	edx, DWORD PTR [edx+edx*2+12]
	mov	DWORD PTR tv1696[ebp], eax
	lea	eax, DWORD PTR [eax+edx*8]
	mov	edx, DWORD PTR _dta$[ebp]
	mov	ebx, DWORD PTR [edx]
	add	ebx, eax
	mov	DWORD PTR tv1786[ebp], eax
	mov	eax, DWORD PTR [ebx]
	lea	esi, DWORD PTR [ecx-16]
	lea	edi, DWORD PTR [eax-16]
	mov	DWORD PTR tv1789[ebp], ecx
	cmp	esi, edi
	je	$LN525@FetchDataW
	cmp	DWORD PTR [edi+12], 0
	jl	$LN418@FetchDataW
	mov	ecx, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [edi]
	jne	$LN418@FetchDataW
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	cmp	DWORD PTR [esi+12], 0
	lea	ecx, DWORD PTR [esi+12]
	jl	SHORT $LN509@FetchDataW
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN509@FetchDataW
	mov	DWORD PTR _pNewData$249263[ebp], esi
	mov	eax, 1
	lock	 xadd	 DWORD PTR [ecx], eax
	jmp	SHORT $LN520@FetchDataW
$LN509@FetchDataW:
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	1
	push	ecx
	mov	ecx, eax
	call	edx
	mov	DWORD PTR _pNewData$249263[ebp], eax
	test	eax, eax
	jne	SHORT $LN507@FetchDataW
	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$LN650@FetchDataW:
$LN507@FetchDataW:
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR _pNewData$249263[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	eax, DWORD PTR [esi+4]
	inc	eax
	push	eax
	add	esi, 16					; 00000010H
	push	esi
	push	eax
	add	ecx, 16					; 00000010H
	push	ecx
	call	_memcpy_s
	add	esp, 16					; 00000010H
$LN520@FetchDataW:
	lea	eax, DWORD PTR [edi+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [eax], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN522@FetchDataW
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	edi
	call	eax
$LN522@FetchDataW:
	mov	ecx, DWORD PTR _pNewData$249263[ebp]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR [ebx], ecx
	jmp	$LN525@FetchDataW
$LN418@FetchDataW:
	mov	ecx, DWORD PTR tv1789[ebp]
	mov	esi, DWORD PTR [ecx-12]
	test	esi, esi
	jne	SHORT $LN439@FetchDataW
	cmp	DWORD PTR [edi+4], 0
	mov	esi, DWORD PTR [edi]
	je	$LN525@FetchDataW
	cmp	DWORD PTR [edi+12], 0
	lea	ecx, DWORD PTR [edi+12]
	jge	SHORT $LN443@FetchDataW
	cmp	DWORD PTR [eax-8], 0
	jge	SHORT $LN452@FetchDataW
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN651@FetchDataW:
$LN452@FetchDataW:
	mov	DWORD PTR [eax-12], 0
	mov	edx, DWORD PTR [ebx]
	mov	BYTE PTR [edx], 0
	jmp	$LN525@FetchDataW
$LN443@FetchDataW:
	or	eax, -1
	lock	 xadd	 DWORD PTR [ecx], eax
	dec	eax
	test	eax, eax
	jg	SHORT $LN460@FetchDataW
	mov	ecx, DWORD PTR [edi]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+4]
	push	edi
	call	eax
$LN460@FetchDataW:
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, esi
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR [ebx], eax
	jmp	$LN525@FetchDataW
$LN439@FetchDataW:
	test	ecx, ecx
	jne	SHORT $LN437@FetchDataW
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN652@FetchDataW:
$LN437@FetchDataW:
	mov	edx, DWORD PTR [eax-12]
	sub	ecx, eax
	mov	DWORD PTR _nOldLength$249222[ebp], edx
	mov	DWORD PTR _nOffset$249223[ebp], ecx
	test	esi, esi
	jns	SHORT $LN477@FetchDataW
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN653@FetchDataW:
$LN477@FetchDataW:
	mov	eax, 1
	sub	eax, DWORD PTR [edi+12]
	mov	edi, DWORD PTR [edi+8]
	sub	edi, esi
	or	edi, eax
	jge	SHORT $LN476@FetchDataW
	push	esi
	mov	ecx, ebx
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
	mov	ecx, DWORD PTR _nOffset$249223[ebp]
$LN476@FetchDataW:
	mov	eax, DWORD PTR [ebx]
	cmp	ecx, DWORD PTR _nOldLength$249222[ebp]
	mov	ecx, DWORD PTR [eax-8]
	push	esi
	ja	SHORT $LN436@FetchDataW
	mov	edx, DWORD PTR _nOffset$249223[ebp]
	add	edx, eax
	push	edx
	push	ecx
	push	eax
	call	_memmove_s
	jmp	SHORT $LN640@FetchDataW
$LN436@FetchDataW:
	mov	edx, DWORD PTR tv1789[ebp]
	push	edx
	push	ecx
	push	eax
	call	_memcpy_s
$LN640@FetchDataW:
	mov	eax, DWORD PTR [ebx]
	add	esp, 16					; 00000010H
	cmp	esi, DWORD PTR [eax-8]
	jg	$LN497@FetchDataW
	mov	DWORD PTR [eax-12], esi
	mov	eax, DWORD PTR [ebx]
	mov	BYTE PTR [esi+eax], 0
$LN525@FetchDataW:
; Line 142
	mov	ebx, DWORD PTR _dta$[ebp]
	mov	edx, DWORD PTR tv1786[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	mov	ecx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+ecx]
	push	14					; 0000000eH
	push	eax
	lea	ecx, DWORD PTR $T247813[ebp]
	call	??0COleVariant@@QAE@PBDG@Z		; COleVariant::COleVariant
	mov	ecx, DWORD PTR _pqry$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 13		; 0000000dH
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+44]
	push	OFFSET ??_C@_0N@HPDLHNII@WaypointName?$AA@
	call	eax
	lea	ecx, DWORD PTR $T247813[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 12		; 0000000cH
	mov	edi, DWORD PTR __imp__VariantClear@4
	push	ecx
	call	edi
; Line 143
	mov	esi, DWORD PTR _precord$[ebp]
	cmp	DWORD PTR [esi+108], 0
; Line 144
	mov	edx, DWORD PTR [esi]
	mov	ecx, esi
	je	SHORT $LN7@FetchDataW
	mov	eax, DWORD PTR [edx+96]
	call	eax
; Line 145
	jmp	SHORT $LN6@FetchDataW
$LN7@FetchDataW:
; Line 146
	mov	eax, DWORD PTR _pqry$[ebp]
	mov	edx, DWORD PTR [edx+16]
	push	0
	push	4
	push	eax
	call	edx
$LN6@FetchDataW:
; Line 148
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+60]
	push	OFFSET ??_C@_08NCKPLHC@Latitude?$AA@
	lea	ecx, DWORD PTR _olevarLat$232837[ebp]
	push	ecx
	mov	ecx, esi
	call	edx
	mov	BYTE PTR __$EHRec$[ebp+12], 14		; 0000000eH
; Line 149
	mov	eax, DWORD PTR [esi]
	mov	edx, DWORD PTR [eax+60]
	push	OFFSET ??_C@_0L@BGHCCJEH@Longtitude?$AA@
	lea	ecx, DWORD PTR _olevarLon$232840[ebp]
	push	ecx
	mov	ecx, esi
	call	edx
; Line 150
	fld	QWORD PTR _olevarLat$232837[ebp+8]
	mov	eax, DWORD PTR _j$232815[ebp]
	mov	ecx, DWORD PTR tv1696[ebp]
	mov	edx, DWORD PTR [ebx]
	lea	eax, DWORD PTR [eax+eax*2]
	lea	eax, DWORD PTR [ecx+eax*8]
	fstp	QWORD PTR [eax+edx+104]
; Line 151
	mov	ecx, DWORD PTR [ebx]
	fld	QWORD PTR _olevarLon$232840[ebp+8]
; Line 152
	lea	edx, DWORD PTR _olevarLon$232840[ebp]
	push	edx
	fstp	QWORD PTR [eax+ecx+112]
	call	edi
	lea	eax, DWORD PTR _olevarLat$232837[ebp]
	push	eax
	call	edi
	inc	DWORD PTR _j$232815[ebp]
	mov	esi, DWORD PTR _j$232815[ebp]
	mov	ebx, DWORD PTR _dta$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+12], 11		; 0000000bH
	jmp	$LL15@FetchDataW
__catch$?FetchDataWorker@NATData@@KAIPAX@Z$2:
; Line 153
	mov	edx, DWORD PTR _c$232802[ebp]
	mov	eax, DWORD PTR _j$232815[ebp]
	imul	edx, 584				; 00000248H
	lea	ecx, DWORD PTR [eax+eax*2+12]
	mov	eax, DWORD PTR _dta$[ebp]
	lea	ecx, DWORD PTR [edx+ecx*8]
	add	ecx, DWORD PTR [eax]
	push	OFFSET ??_C@_06HOJDLJEN@SKIPME?$AA@
	call	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
; Line 154
	mov	BYTE PTR ?OutOfDate@NATShow@@2_NA, 1	; NATShow::OutOfDate
; Line 158
	mov	DWORD PTR __$EHRec$[ebp+12], 11		; 0000000bH
	mov	eax, $LN14@FetchDataW
	ret	0
$LN13@FetchDataW:
; Line 161
	mov	eax, DWORD PTR _c$232802[ebp]
	mov	ecx, DWORD PTR [ebx]
	imul	eax, 584				; 00000248H
	mov	DWORD PTR [eax+ecx], esi
; Line 165
	mov	edx, DWORD PTR [ebx]
	cmp	DWORD PTR [eax+edx+8], 1
	jne	$LN5@FetchDataW
; Line 166
	cmp	DWORD PTR _vals$[ebp+8], 2
	jg	SHORT $LN543@FetchDataW
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN654@FetchDataW:
$LN543@FetchDataW:
	mov	eax, DWORD PTR _vals$[ebp+4]
	mov	esi, DWORD PTR [eax+8]
	push	-1
	push	0
	lea	ecx, DWORD PTR _rtal$[ebp]
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL631@FetchDataW:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL631@FetchDataW
	sub	eax, edx
	inc	eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	ecx, esi
	mov	edx, edi
	npad	7
$LL554@FetchDataW:
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al
	inc	ecx
	inc	edx
	test	al, al
	jne	SHORT $LL554@FetchDataW
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	edi
	call	__mbstok
	add	esp, 8
	test	eax, eax
	je	$LN621@FetchDataW
$LL551@FetchDataW:
	mov	ecx, DWORD PTR _rtal$[ebp+8]
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _rtal$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	0
	call	__mbstok
	add	esp, 8
	test	eax, eax
	jne	SHORT $LL551@FetchDataW
; Line 167
	jmp	$LN621@FetchDataW
$LN5@FetchDataW:
; Line 168
	cmp	DWORD PTR _vals$[ebp+8], 3
	jg	SHORT $LN564@FetchDataW
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN655@FetchDataW:
$LN564@FetchDataW:
	mov	edx, DWORD PTR _vals$[ebp+4]
	mov	esi, DWORD PTR [edx+12]
	push	-1
	push	0
	lea	ecx, DWORD PTR _rtal$[ebp]
	call	?SetSize@CStringArray@@QAEXHH@Z		; CStringArray::SetSize
	mov	eax, esi
	lea	edx, DWORD PTR [eax+1]
$LL632@FetchDataW:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL632@FetchDataW
	sub	eax, edx
	inc	eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
	mov	edi, eax
	add	esp, 4
	mov	ecx, esi
	mov	edx, edi
	npad	1
$LL575@FetchDataW:
	mov	al, BYTE PTR [ecx]
	mov	BYTE PTR [edx], al
	inc	ecx
	inc	edx
	test	al, al
	jne	SHORT $LL575@FetchDataW
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	edi
	call	__mbstok
	add	esp, 8
	test	eax, eax
	je	SHORT $LN621@FetchDataW
	npad	4
$LL572@FetchDataW:
	push	eax
	mov	eax, DWORD PTR _rtal$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _rtal$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
	push	OFFSET ??_C@_01CLKCMJKC@?5?$AA@
	push	0
	call	__mbstok
	add	esp, 8
	test	eax, eax
	jne	SHORT $LL572@FetchDataW
$LN621@FetchDataW:
	push	edi
	call	??3@YAXPAX@Z				; operator delete
; Line 171
	mov	eax, DWORD PTR _rtal$[ebp+8]
	add	esp, 4
	xor	esi, esi
	mov	edi, eax
	test	eax, eax
	jle	SHORT $LN636@FetchDataW
	jmp	SHORT $LN3@FetchDataW
	npad	1
$LL635@FetchDataW:
	mov	eax, DWORD PTR _rtal$[ebp+8]
$LN3@FetchDataW:
; Line 172
	test	esi, esi
	js	$LN225@FetchDataW
	cmp	esi, eax
	jge	$LN225@FetchDataW
	mov	ecx, DWORD PTR _rtal$[ebp+4]
	mov	eax, DWORD PTR [ecx+esi*4]
	push	eax
	call	_atoi
	mov	edx, DWORD PTR _c$232802[ebp]
	mov	ecx, DWORD PTR _dta$[ebp]
	imul	edx, 146				; 00000092H
	mov	ecx, DWORD PTR [ecx]
	add	edx, esi
	inc	esi
	add	esp, 4
	mov	DWORD PTR [ecx+edx*4+12], eax
	cmp	esi, edi
	jl	SHORT $LL635@FetchDataW
$LN636@FetchDataW:
	mov	edi, DWORD PTR _i$232803[ebp]
	inc	DWORD PTR _c$232802[ebp]
	mov	eax, DWORD PTR _count$[ebp]
	mov	ebx, DWORD PTR _precord$[ebp]
	inc	edi
	mov	DWORD PTR _i$232803[ebp], edi
	jmp	$LN641@FetchDataW
; Line 125
$LN328@FetchDataW:
	mov	edx, DWORD PTR _rtal$[ebp+8]
	push	eax
	push	edx
	lea	ecx, DWORD PTR _rtal$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
	xor	eax, eax
	jmp	$LL330@FetchDataW
; Line 118
$LN261@FetchDataW:
	push	eax
	mov	eax, DWORD PTR _vals$[ebp+8]
	push	eax
	lea	ecx, DWORD PTR _vals$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
	xor	eax, eax
	jmp	$LL263@FetchDataW
$LN17@FetchDataW:
; Line 177
	call	?AddConcordTracks@NATData@@KAXPAUNATWorkerCont@1@@Z ; NATData::AddConcordTracks
; Line 179
	mov	edi, DWORD PTR _pqry$[ebp]
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, edi
	call	eax
; Line 180
	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+24]
	mov	ecx, ebx
	call	eax
; Line 181
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+20]
	mov	ecx, esi
	call	eax
; Line 183
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+4]
	push	1
	mov	ecx, edi
	call	eax
; Line 184
	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx+4]
	push	1
	mov	ecx, ebx
	call	eax
; Line 185
	mov	edx, DWORD PTR [esi]
	mov	eax, DWORD PTR [edx+4]
	push	1
	mov	ecx, esi
	call	eax
; Line 187
	call	?AfxDaoTerm@@YGXXZ			; AfxDaoTerm
; Line 191
	lea	ecx, DWORD PTR _rtal$[ebp]
	mov	BYTE PTR ?Loading@NATShow@@2_NA, 0	; NATShow::Loading
	mov	BYTE PTR __$EHRec$[ebp+12], 10		; 0000000aH
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	lea	ecx, DWORD PTR _vals$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 9
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	lea	ecx, DWORD PTR _lines$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 8
	call	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
	lea	ecx, DWORD PTR _grab$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+12], 7
	call	??1CWebGrab@@UAE@XZ			; CWebGrab::~CWebGrab
	mov	DWORD PTR __$EHRec$[ebp+12], -1
	mov	eax, DWORD PTR _response$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN63@FetchDataW
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN63@FetchDataW:
; Line 90
	xor	eax, eax
; Line 192
	mov	ecx, DWORD PTR __$EHRec$[ebp+4]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
; Line 106
$LN162@FetchDataW:
	mov	ecx, DWORD PTR _lines$[ebp+8]
	push	eax
	push	ecx
	lea	ecx, DWORD PTR _lines$[ebp]
	call	?SetAtGrow@CStringArray@@QAEXHPBD@Z	; CStringArray::SetAtGrow
	xor	eax, eax
	jmp	$LL164@FetchDataW
__catch$?FetchDataWorker@NATData@@KAIPAX@Z$0:
; Line 89
	push	0
	push	0
	push	OFFSET ??_C@_0CL@HBDDLLP@euroNAT?3?5Unable?5to?5open?5waypoint@
	call	?AfxMessageBox@@YGHPBDII@Z		; AfxMessageBox
; Line 90
	mov	eax, $LN63@FetchDataW
	ret	0
$LN639@FetchDataW:
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$4:
	lea	ecx, DWORD PTR _dbfilename$232766[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$5:
	lea	ecx, DWORD PTR $T247794[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$6:
	mov	eax, DWORD PTR $T247796[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
	ret	0
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$7:
	mov	eax, DWORD PTR $T247800[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
	ret	0
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$8:
	mov	eax, DWORD PTR $T247804[ebp]
	push	eax
	call	??3CObject@@SGXPAX@Z			; CObject::operator delete
	ret	0
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$9:
	lea	ecx, DWORD PTR _response$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$10:
	lea	ecx, DWORD PTR _grab$[ebp]
	jmp	??1CWebGrab@@UAE@XZ			; CWebGrab::~CWebGrab
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$11:
	lea	ecx, DWORD PTR _lines$[ebp]
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$12:
	lea	ecx, DWORD PTR _vals$[ebp]
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$13:
	lea	ecx, DWORD PTR _rtal$[ebp]
	jmp	??1CStringArray@@UAE@XZ			; CStringArray::~CStringArray
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$18:
	lea	ecx, DWORD PTR $T247813[ebp]
	jmp	??1COleVariant@@QAE@XZ			; COleVariant::~COleVariant
__unwindfunclet$?FetchDataWorker@NATData@@KAIPAX@Z$19:
	lea	ecx, DWORD PTR _olevarLat$232837[ebp]
	jmp	??1COleVariant@@QAE@XZ			; COleVariant::~COleVariant
__ehhandler$?FetchDataWorker@NATData@@KAIPAX@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-2312]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?FetchDataWorker@NATData@@KAIPAX@Z
	jmp	___CxxFrameHandler3
?FetchDataWorker@NATData@@KAIPAX@Z ENDP			; NATData::FetchDataWorker
PUBLIC	?Refresh@NATData@@QAEXXZ			; NATData::Refresh
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_this$ = 8						; size = 4
?Refresh@NATData@@QAEXXZ PROC				; NATData::Refresh
; Line 27
	push	ebp
	mov	ebp, esp
; Line 30
	push	0
	push	0
	push	0
	push	0
	push	OFFSET ?NATWorkerData@NATData@@2UNATWorkerCont@1@A ; NATData::NATWorkerData
	push	OFFSET ?FetchDataWorker@NATData@@KAIPAX@Z ; NATData::FetchDataWorker
	mov	BYTE PTR ?Loading@NATShow@@2_NA, 1	; NATShow::Loading
	call	?AfxBeginThread@@YGPAVCWinThread@@P6AIPAX@Z0HIKPAU_SECURITY_ATTRIBUTES@@@Z ; AfxBeginThread
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 31
	pop	ebp
	ret	4
?Refresh@NATData@@QAEXXZ ENDP				; NATData::Refresh
END
