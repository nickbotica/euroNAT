; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Michael\Desktop\Code\euroNAT\euroNatPlugin.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_R4?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Complete Object Locator'
PUBLIC	??_R3?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8 ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@@8 ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &> `RTTI Type Descriptor'
PUBLIC	??_R4euroNatPlugin@@6B@				; euroNatPlugin::`RTTI Complete Object Locator'
PUBLIC	??_R3euroNatPlugin@@8				; euroNatPlugin::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2euroNatPlugin@@8				; euroNatPlugin::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CPlugIn@EuroScopePlugIn@@8	; EuroScopePlugIn::CPlugIn::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R3CPlugIn@EuroScopePlugIn@@8			; EuroScopePlugIn::CPlugIn::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CPlugIn@EuroScopePlugIn@@8			; EuroScopePlugIn::CPlugIn::`RTTI Base Class Array'
PUBLIC	??_R0?AVCPlugIn@EuroScopePlugIn@@@8		; EuroScopePlugIn::CPlugIn `RTTI Type Descriptor'
PUBLIC	??_R1A@?0A@EA@euroNatPlugin@@8			; euroNatPlugin::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVeuroNatPlugin@@@8			; euroNatPlugin `RTTI Type Descriptor'
PUBLIC	??0CObject@@IAE@XZ				; CObject::CObject
PUBLIC	??0?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAE@XZ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>
PUBLIC	?IsStoring@CArchive@@QBEHXZ			; CArchive::IsStoring
PUBLIC	?EnsureRead@CArchive@@QAEXPAXI@Z		; CArchive::EnsureRead
PUBLIC	??$SerializeElements@PAVeuroNatRadarScreen@@@@YGXAAVCArchive@@PAPAVeuroNatRadarScreen@@H@Z ; SerializeElements<euroNatRadarScreen *>
PUBLIC	?Serialize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEXAAVCArchive@@@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::Serialize
PUBLIC	??_G?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEPAXI@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`scalar deleting destructor'
PUBLIC	??1?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAE@XZ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::~CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
PUBLIC	?GetAllocLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ; ATL::CSimpleStringT<char,0>::GetAllocLength
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADIPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
PUBLIC	??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<char>::GetBaseTypeLength
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ; ATL::ChTraitsCRT<char>::ConvertToBaseType
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
PUBLIC	?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
PUBLIC	?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	?StringFindChar@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z ; ATL::ChTraitsCRT<char>::StringFindChar
PUBLIC	?Find@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHDH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Find
PUBLIC	_HRESULT_FROM_WIN32
PUBLIC	??$AtlAdd@H@ATL@@YAJPAHHH@Z			; ATL::AtlAdd<int>
PUBLIC	??$AtlAddThrow@H@ATL@@YAHHH@Z			; ATL::AtlAddThrow<int>
PUBLIC	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
PUBLIC	?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Right
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
PUBLIC	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CSimpleStringT<char,0>::GetManager
PUBLIC	?GetManager@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::GetManager
PUBLIC	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@0@Z ; ATL::operator==
PUBLIC	?AtlIsValidString@ATL@@YAHPBDI@Z		; ATL::AtlIsValidString
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
PUBLIC	?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z	; ATL::ChTraitsCRT<char>::StringCompare
PUBLIC	?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Compare
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
PUBLIC	?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z	; euroNatPlugin::OnCompileCommand
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?AfxCrtErrorCheck@@YAHH@Z			; AfxCrtErrorCheck
PUBLIC	?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z		; ATL::Checked::memcpy_s
PUBLIC	?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize
PUBLIC	?SetAtGrow@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHABQAVeuroNatRadarScreen@@@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetAtGrow
PUBLIC	?Add@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEHABQAVeuroNatRadarScreen@@@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::Add
PUBLIC	?ElementAt@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::ElementAt
PUBLIC	??A?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::operator[]
PUBLIC	?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z ; euroNatPlugin::OnRadarScreenCreated
PUBLIC	??_GeuroNatPlugin@@UAEPAXI@Z			; euroNatPlugin::`scalar deleting destructor'
PUBLIC	??_C@_0BD@PMKHIJAE@NYARTCC?5ES?5euroNAT?$AA@	; `string'
PUBLIC	??_C@_0BC@CFFPPFMB@Michael?5Freudeman?$AA@	; `string'
PUBLIC	??_C@_03GCKCNDHP@1?41?$AA@			; `string'
PUBLIC	??_C@_07DFEKGNDK@euroNAT?$AA@			; `string'
PUBLIC	??_C@_0M@HJMNOLAP@?4natrefresh?$AA@		; `string'
PUBLIC	??_C@_09FOKNFEAA@?4natshow?5?$AA@		; `string'
PUBLIC	??_C@_03JOEPJFAM@gui?$AA@			; `string'
PUBLIC	??_C@_04PGHBAKEC@east?$AA@			; `string'
PUBLIC	??_C@_04GDDDFJPH@west?$AA@			; `string'
PUBLIC	??_C@_03NFKEKGGK@all?$AA@			; `string'
PUBLIC	??_C@_04CGFJFPFD@none?$AA@			; `string'
PUBLIC	??_C@_0M@CAMOGCEC@?4natoptions?$AA@		; `string'
PUBLIC	??_C@_08JNPHKMEB@?4natopt?5?$AA@		; `string'
PUBLIC	??_C@_09PFBFOOJD@linestyle?$AA@			; `string'
PUBLIC	??_C@_06EDEKCDFE@dotted?$AA@			; `string'
PUBLIC	??_C@_05OPIONHBI@solid?$AA@			; `string'
PUBLIC	??_C@_09MIAMOF@infostyle?$AA@			; `string'
PUBLIC	??_C@_06GGHJAEBN@static?$AA@			; `string'
PUBLIC	??_C@_05EIEHMANA@popup?$AA@			; `string'
PUBLIC	??_C@_07HGJGOMC@letters?$AA@			; `string'
PUBLIC	??_C@_04FKMICODN@show?$AA@			; `string'
PUBLIC	??_C@_04IBOFHAPJ@hide?$AA@			; `string'
PUBLIC	??_7euroNatPlugin@@6B@				; euroNatPlugin::`vftable'
PUBLIC	??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`vftable'
EXTRN	?OnAirportRunwayActivityChanged@CPlugIn@EuroScopePlugIn@@UAEXXZ:PROC ; EuroScopePlugIn::CPlugIn::OnAirportRunwayActivityChanged
EXTRN	?OnFunctionCall@CPlugIn@EuroScopePlugIn@@UAEXHPBDUtagPOINT@@UtagRECT@@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnFunctionCall
EXTRN	?OnNewMetarReceived@CPlugIn@EuroScopePlugIn@@UAEXPBD0@Z:PROC ; EuroScopePlugIn::CPlugIn::OnNewMetarReceived
EXTRN	?OnRefresAcListContent@CPlugIn@EuroScopePlugIn@@UAEXVCAircraftList@2@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnRefresAcListContent
EXTRN	?OnGetTagItem@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@HHQADPAHPAKPAN@Z:PROC ; EuroScopePlugIn::CPlugIn::OnGetTagItem
EXTRN	?OnCompilePrivateChat@CPlugIn@EuroScopePlugIn@@UAEXPBD00@Z:PROC ; EuroScopePlugIn::CPlugIn::OnCompilePrivateChat
EXTRN	?OnCompileFrequencyChat@CPlugIn@EuroScopePlugIn@@UAEXPBDN0@Z:PROC ; EuroScopePlugIn::CPlugIn::OnCompileFrequencyChat
EXTRN	?OnAircraftFlightStripPushed@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@PBD1@Z:PROC ; EuroScopePlugIn::CPlugIn::OnAircraftFlightStripPushed
EXTRN	?OnAircraftControllerAssignedDataUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@H@Z:PROC ; EuroScopePlugIn::CPlugIn::OnAircraftControllerAssignedDataUpdate
EXTRN	?OnAircraftFlightPlanUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnAircraftFlightPlanUpdate
EXTRN	?OnAircraftDisconnect@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnAircraftDisconnect
EXTRN	?OnAircraftPositionUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnAircraftPositionUpdate
EXTRN	?OnControllerDisconnect@CPlugIn@EuroScopePlugIn@@UAEXVCController@2@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnControllerDisconnect
EXTRN	?OnControllerPositionUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCController@2@@Z:PROC ; EuroScopePlugIn::CPlugIn::OnControllerPositionUpdate
EXTRN	__imp_??0CPlugIn@EuroScopePlugIn@@QAE@HPBD000@Z:PROC
EXTRN	__imp_??1CPlugIn@EuroScopePlugIn@@UAE@XZ:PROC
EXTRN	?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ:PROC ; CObject::GetRuntimeClass
EXTRN	?ReadCount@CArchive@@QAEKXZ:PROC		; CArchive::ReadCount
EXTRN	?WriteCount@CArchive@@QAEXK@Z:PROC		; CArchive::WriteCount
EXTRN	?AfxThrowArchiveException@@YGXHPBD@Z:PROC	; AfxThrowArchiveException
EXTRN	?Read@CArchive@@QAEIPAXI@Z:PROC			; CArchive::Read
EXTRN	?Write@CArchive@@QAEXPBXI@Z:PROC		; CArchive::Write
EXTRN	??_E?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEPAXI@Z:PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`vector deleting destructor'
EXTRN	__imp_?OnControllerPositionUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCController@2@@Z:PROC
EXTRN	__imp_?OnControllerDisconnect@CPlugIn@EuroScopePlugIn@@UAEXVCController@2@@Z:PROC
EXTRN	__imp_?OnAircraftPositionUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z:PROC
EXTRN	__imp_?OnAircraftDisconnect@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z:PROC
EXTRN	__imp_?OnAircraftFlightPlanUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z:PROC
EXTRN	__imp_?OnAircraftControllerAssignedDataUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@H@Z:PROC
EXTRN	__imp_?OnAircraftFlightStripPushed@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@PBD1@Z:PROC
EXTRN	__imp_?OnCompileFrequencyChat@CPlugIn@EuroScopePlugIn@@UAEXPBDN0@Z:PROC
EXTRN	__imp_?OnCompilePrivateChat@CPlugIn@EuroScopePlugIn@@UAEXPBD00@Z:PROC
EXTRN	__imp_?OnGetTagItem@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@HHQADPAHPAKPAN@Z:PROC
EXTRN	__imp_?OnRefresAcListContent@CPlugIn@EuroScopePlugIn@@UAEXVCAircraftList@2@@Z:PROC
EXTRN	__imp_?OnNewMetarReceived@CPlugIn@EuroScopePlugIn@@UAEXPBD0@Z:PROC
EXTRN	__imp_?OnFunctionCall@CPlugIn@EuroScopePlugIn@@UAEXHPBDUtagPOINT@@UtagRECT@@@Z:PROC
EXTRN	__imp_?OnAirportRunwayActivityChanged@CPlugIn@EuroScopePlugIn@@UAEXXZ:PROC
EXTRN	_memmove_s:PROC
EXTRN	__imp__FindResourceW@12:PROC
EXTRN	__imp__LockResource@4:PROC
EXTRN	__imp__LoadResource@8:PROC
EXTRN	__imp__SizeofResource@8:PROC
EXTRN	__imp__WideCharToMultiByte@32:PROC
EXTRN	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z:PROC ; AfxFindStringResourceHandle
EXTRN	__mbschr:PROC
EXTRN	__mbscmp:PROC
EXTRN	?ShowWindow@CWnd@@QAEHH@Z:PROC			; CWnd::ShowWindow
EXTRN	??_U@YAPAXI@Z:PROC				; operator new[]
EXTRN	??_V@YAXPAX@Z:PROC				; operator delete[]
EXTRN	?AfxThrowInvalidArgException@@YGXXZ:PROC	; AfxThrowInvalidArgException
EXTRN	??_EeuroNatPlugin@@UAEPAXI@Z:PROC		; euroNatPlugin::`vector deleting destructor'
;	COMDAT ??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
CONST	SEGMENT
??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@ DD FLAT:??_R4?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`vftable'
	DD	FLAT:?GetRuntimeClass@CObject@@UBEPAUCRuntimeClass@@XZ
	DD	FLAT:??_E?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEPAXI@Z
	DD	FLAT:?Serialize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEXAAVCArchive@@@Z
CONST	ENDS
;	COMDAT ??_R4?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
rdata$r	SEGMENT
??_R4?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@ DD 00H ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@@8
	DD	FLAT:??_R3?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8
rdata$r	SEGMENT
??_R3?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8 DD 00H	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8
rdata$r	SEGMENT
??_R2?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8 DD FLAT:??_R1A@?0A@EA@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8 ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CObject@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8 DD FLAT:??_R0?AV?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@@8 ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@@8
_DATA	SEGMENT
??_R0?AV?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@@8 DD FLAT:??_7type_info@@6B@ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@', 00H
_DATA	ENDS
;	COMDAT ??_7euroNatPlugin@@6B@
CONST	SEGMENT
??_7euroNatPlugin@@6B@ DD FLAT:??_R4euroNatPlugin@@6B@	; euroNatPlugin::`vftable'
	DD	FLAT:??_EeuroNatPlugin@@UAEPAXI@Z
	DD	FLAT:?OnControllerPositionUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCController@2@@Z
	DD	FLAT:?OnControllerDisconnect@CPlugIn@EuroScopePlugIn@@UAEXVCController@2@@Z
	DD	FLAT:?OnAircraftPositionUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z
	DD	FLAT:?OnAircraftDisconnect@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z
	DD	FLAT:?OnAircraftFlightPlanUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@@Z
	DD	FLAT:?OnAircraftControllerAssignedDataUpdate@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@H@Z
	DD	FLAT:?OnAircraftFlightStripPushed@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@PBD1@Z
	DD	FLAT:?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z
	DD	FLAT:?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z
	DD	FLAT:?OnCompileFrequencyChat@CPlugIn@EuroScopePlugIn@@UAEXPBDN0@Z
	DD	FLAT:?OnCompilePrivateChat@CPlugIn@EuroScopePlugIn@@UAEXPBD00@Z
	DD	FLAT:?OnGetTagItem@CPlugIn@EuroScopePlugIn@@UAEXVCAircraft@2@HHQADPAHPAKPAN@Z
	DD	FLAT:?OnRefresAcListContent@CPlugIn@EuroScopePlugIn@@UAEXVCAircraftList@2@@Z
	DD	FLAT:?OnNewMetarReceived@CPlugIn@EuroScopePlugIn@@UAEXPBD0@Z
	DD	FLAT:?OnFunctionCall@CPlugIn@EuroScopePlugIn@@UAEXHPBDUtagPOINT@@UtagRECT@@@Z
	DD	FLAT:?OnAirportRunwayActivityChanged@CPlugIn@EuroScopePlugIn@@UAEXXZ
CONST	ENDS
;	COMDAT ??_R4euroNatPlugin@@6B@
rdata$r	SEGMENT
??_R4euroNatPlugin@@6B@ DD 00H				; euroNatPlugin::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVeuroNatPlugin@@@8
	DD	FLAT:??_R3euroNatPlugin@@8
rdata$r	ENDS
;	COMDAT ??_R3euroNatPlugin@@8
rdata$r	SEGMENT
??_R3euroNatPlugin@@8 DD 00H				; euroNatPlugin::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2euroNatPlugin@@8
rdata$r	ENDS
;	COMDAT ??_R2euroNatPlugin@@8
rdata$r	SEGMENT
??_R2euroNatPlugin@@8 DD FLAT:??_R1A@?0A@EA@euroNatPlugin@@8 ; euroNatPlugin::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@CPlugIn@EuroScopePlugIn@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CPlugIn@EuroScopePlugIn@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CPlugIn@EuroScopePlugIn@@8 DD FLAT:??_R0?AVCPlugIn@EuroScopePlugIn@@@8 ; EuroScopePlugIn::CPlugIn::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CPlugIn@EuroScopePlugIn@@8
rdata$r	ENDS
;	COMDAT ??_R3CPlugIn@EuroScopePlugIn@@8
rdata$r	SEGMENT
??_R3CPlugIn@EuroScopePlugIn@@8 DD 00H			; EuroScopePlugIn::CPlugIn::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2CPlugIn@EuroScopePlugIn@@8
rdata$r	ENDS
;	COMDAT ??_R2CPlugIn@EuroScopePlugIn@@8
rdata$r	SEGMENT
??_R2CPlugIn@EuroScopePlugIn@@8 DD FLAT:??_R1A@?0A@EA@CPlugIn@EuroScopePlugIn@@8 ; EuroScopePlugIn::CPlugIn::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R0?AVCPlugIn@EuroScopePlugIn@@@8
_DATA	SEGMENT
??_R0?AVCPlugIn@EuroScopePlugIn@@@8 DD FLAT:??_7type_info@@6B@ ; EuroScopePlugIn::CPlugIn `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCPlugIn@EuroScopePlugIn@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@euroNatPlugin@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@euroNatPlugin@@8 DD FLAT:??_R0?AVeuroNatPlugin@@@8 ; euroNatPlugin::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3euroNatPlugin@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVeuroNatPlugin@@@8
_DATA	SEGMENT
??_R0?AVeuroNatPlugin@@@8 DD FLAT:??_7type_info@@6B@	; euroNatPlugin `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVeuroNatPlugin@@', 00H
_DATA	ENDS
;	COMDAT ??_C@_04IBOFHAPJ@hide?$AA@
CONST	SEGMENT
??_C@_04IBOFHAPJ@hide?$AA@ DB 'hide', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FKMICODN@show?$AA@
CONST	SEGMENT
??_C@_04FKMICODN@show?$AA@ DB 'show', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGJGOMC@letters?$AA@
CONST	SEGMENT
??_C@_07HGJGOMC@letters?$AA@ DB 'letters', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05EIEHMANA@popup?$AA@
CONST	SEGMENT
??_C@_05EIEHMANA@popup?$AA@ DB 'popup', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06GGHJAEBN@static?$AA@
CONST	SEGMENT
??_C@_06GGHJAEBN@static?$AA@ DB 'static', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MIAMOF@infostyle?$AA@
CONST	SEGMENT
??_C@_09MIAMOF@infostyle?$AA@ DB 'infostyle', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05OPIONHBI@solid?$AA@
CONST	SEGMENT
??_C@_05OPIONHBI@solid?$AA@ DB 'solid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06EDEKCDFE@dotted?$AA@
CONST	SEGMENT
??_C@_06EDEKCDFE@dotted?$AA@ DB 'dotted', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09PFBFOOJD@linestyle?$AA@
CONST	SEGMENT
??_C@_09PFBFOOJD@linestyle?$AA@ DB 'linestyle', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JNPHKMEB@?4natopt?5?$AA@
CONST	SEGMENT
??_C@_08JNPHKMEB@?4natopt?5?$AA@ DB '.natopt ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CAMOGCEC@?4natoptions?$AA@
CONST	SEGMENT
??_C@_0M@CAMOGCEC@?4natoptions?$AA@ DB '.natoptions', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CGFJFPFD@none?$AA@
CONST	SEGMENT
??_C@_04CGFJFPFD@none?$AA@ DB 'none', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03NFKEKGGK@all?$AA@
CONST	SEGMENT
??_C@_03NFKEKGGK@all?$AA@ DB 'all', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04GDDDFJPH@west?$AA@
CONST	SEGMENT
??_C@_04GDDDFJPH@west?$AA@ DB 'west', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PGHBAKEC@east?$AA@
CONST	SEGMENT
??_C@_04PGHBAKEC@east?$AA@ DB 'east', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03JOEPJFAM@gui?$AA@
CONST	SEGMENT
??_C@_03JOEPJFAM@gui?$AA@ DB 'gui', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09FOKNFEAA@?4natshow?5?$AA@
CONST	SEGMENT
??_C@_09FOKNFEAA@?4natshow?5?$AA@ DB '.natshow ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HJMNOLAP@?4natrefresh?$AA@
CONST	SEGMENT
??_C@_0M@HJMNOLAP@?4natrefresh?$AA@ DB '.natrefresh', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07DFEKGNDK@euroNAT?$AA@
CONST	SEGMENT
??_C@_07DFEKGNDK@euroNAT?$AA@ DB 'euroNAT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCKCNDHP@1?41?$AA@
CONST	SEGMENT
??_C@_03GCKCNDHP@1?41?$AA@ DB '1.1', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CFFPPFMB@Michael?5Freudeman?$AA@
CONST	SEGMENT
??_C@_0BC@CFFPPFMB@Michael?5Freudeman?$AA@ DB 'Michael Freudeman', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PMKHIJAE@NYARTCC?5ES?5euroNAT?$AA@
CONST	SEGMENT
??_C@_0BD@PMKHIJAE@NYARTCC?5ES?5euroNAT?$AA@ DB 'NYARTCC ES euroNAT', 00H ; `string'
; Function compile flags: /Ogtp
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC	; ATL::CSimpleStringT<char,0>::StringLength, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 744
	push	ebp
	mov	ebp, esp
; Line 745
	mov	eax, DWORD PTR _psz$[ebp]
	test	eax, eax
	jne	SHORT $LN1@StringLeng@2
; Line 750
	pop	ebp
	ret	0
$LN1@StringLeng@2:
; Line 749
	lea	edx, DWORD PTR [eax+1]
	npad	1
$LL4@StringLeng@2:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL4@StringLeng@2
	sub	eax, edx
; Line 750
	pop	ebp
	ret	0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADIPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_nDestLen$ = 12						; size = 4
_pchSrc$ = 16						; size = 4
_nChars$ = 20						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADIPBDH@Z PROC ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT
; Line 739
	push	ebp
	mov	ebp, esp
; Line 742
	pop	ebp
; Line 741
	jmp	_memmove_s
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADIPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC	; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx
; Line 555
	mov	eax, DWORD PTR [ecx]
; Line 556
	ret	0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsLocked@CStringData@ATL@@QBE_NXZ PROC			; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx
; Line 95
	xor	eax, eax
	cmp	DWORD PTR [ecx+12], eax
	setl	al
; Line 96
	ret	0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC			; ATL::_AtlGetConversionACP, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlconv.h
; Line 108
	mov	eax, 3
; Line 110
	ret	0
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z PROC	; ATL::ChTraitsCRT<char>::GetBaseTypeLength, COMDAT
; _pszSource$ = ecx
; _nLength$ = eax
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 332
	push	0
	push	0
	push	0
	push	0
	push	eax
	push	ecx
	push	0
	push	3
	call	DWORD PTR __imp__WideCharToMultiByte@32
; Line 333
	ret	0
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<char>::GetBaseTypeLength
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC ; ATL::_AtlGetStringResourceImage, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcore.h
; Line 290
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 297
	mov	ebx, DWORD PTR _hInstance$[ebp]
	push	edi
	mov	edi, DWORD PTR _hResource$[ebp]
	push	edi
	push	ebx
	call	DWORD PTR __imp__LoadResource@8
; Line 298
	test	eax, eax
	jne	SHORT $LN6@AtlGetStri
	pop	edi
	pop	ebx
; Line 328
	pop	ebp
	ret	0
$LN6@AtlGetStri:
	push	esi
; Line 303
	push	eax
	call	DWORD PTR __imp__LockResource@4
	mov	esi, eax
; Line 304
	test	esi, esi
; Line 306
	je	SHORT $LN11@AtlGetStri
; Line 309
	push	edi
	push	ebx
	call	DWORD PTR __imp__SizeofResource@8
; Line 311
	mov	ecx, DWORD PTR _id$[ebp]
	add	eax, esi
	and	ecx, 15					; 0000000fH
; Line 313
	jbe	SHORT $LN3@AtlGetStri
	npad	5
$LL4@AtlGetStri:
	cmp	esi, eax
	jae	SHORT $LN11@AtlGetStri
; Line 316
	dec	ecx
	movzx	edx, WORD PTR [esi]
	lea	esi, DWORD PTR [esi+edx*2+2]
	jne	SHORT $LL4@AtlGetStri
$LN3@AtlGetStri:
; Line 318
	cmp	esi, eax
	jb	SHORT $LN2@AtlGetStri
$LN11@AtlGetStri:
	pop	esi
	pop	edi
; Line 320
	xor	eax, eax
	pop	ebx
; Line 328
	pop	ebp
	ret	0
$LN2@AtlGetStri:
; Line 322
	movzx	eax, WORD PTR [esi]
	neg	eax
	sbb	eax, eax
	and	eax, esi
	pop	esi
	pop	edi
	pop	ebx
; Line 328
	pop	ebp
	ret	0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z PROC ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxstr.h
; Line 46
	push	ebp
	mov	ebp, esp
; Line 47
	mov	eax, DWORD PTR _nID$[ebp]
	push	eax
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle
; Line 48
	pop	ebp
	ret	0
?FindStringResourceInstance@?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@SAPAUHINSTANCE__@@I@Z ENDP ; StrTraitMFC<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT
_pszA$ = 8						; size = 4
_pszB$ = 12						; size = 4
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z PROC	; ATL::ChTraitsCRT<char>::StringCompare, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 165
	push	ebp
	mov	ebp, esp
; Line 167
	pop	ebp
; Line 166
	jmp	__mbscmp
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z ENDP	; ATL::ChTraitsCRT<char>::StringCompare
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AtlIsValidString@ATL@@YAHPBDI@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
_nMaxLength$ = 12					; size = 4
?AtlIsValidString@ATL@@YAHPBDI@Z PROC			; ATL::AtlIsValidString, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcore.h
; Line 55
	push	ebp
	mov	ebp, esp
; Line 57
	xor	eax, eax
	cmp	DWORD PTR _psz$[ebp], eax
	setne	al
; Line 58
	pop	ebp
	ret	0
?AtlIsValidString@ATL@@YAHPBDI@Z ENDP			; ATL::AtlIsValidString
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT _HRESULT_FROM_WIN32
_TEXT	SEGMENT
_x$ = 8							; size = 4
_HRESULT_FROM_WIN32 PROC				; COMDAT
; File c:\program files (x86)\microsoft sdks\windows\v7.0a\include\winerror.h
; Line 23841
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _x$[ebp]
	test	eax, eax
	jle	SHORT $LN4@HRESULT_FR
	and	eax, 65535				; 0000ffffH
	or	eax, -2147024896			; 80070000H
$LN4@HRESULT_FR:
	pop	ebp
	ret	0
_HRESULT_FROM_WIN32 ENDP
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?AddRef@CStringData@ATL@@QAEXXZ PROC			; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 91
	add	ecx, 12					; 0000000cH
	mov	eax, 1
	lock	 xadd	 DWORD PTR [ecx], eax
; Line 92
	ret	0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0CObject@@IAE@XZ
_TEXT	SEGMENT
??0CObject@@IAE@XZ PROC					; CObject::CObject, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afx.inl
; Line 92
	mov	eax, ecx
	ret	0
??0CObject@@IAE@XZ ENDP					; CObject::CObject
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?IsStoring@CArchive@@QBEHXZ
_TEXT	SEGMENT
?IsStoring@CArchive@@QBEHXZ PROC			; CArchive::IsStoring, COMDAT
; _this$ = ecx
; Line 202
	mov	eax, DWORD PTR [ecx+24]
	not	eax
	and	eax, 1
	ret	0
?IsStoring@CArchive@@QBEHXZ ENDP			; CArchive::IsStoring
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\new.h
; Line 81
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR __Where$[ebp]
	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AfxCrtErrorCheck@@YAHH@Z
_TEXT	SEGMENT
_error$ = 8						; size = 4
?AfxCrtErrorCheck@@YAHH@Z PROC				; AfxCrtErrorCheck, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afx.h
; Line 470
	push	ebp
	mov	ebp, esp
; Line 471
	mov	eax, DWORD PTR _error$[ebp]
	cmp	eax, 80					; 00000050H
	ja	SHORT $LN3@AfxCrtErro
	movzx	ecx, BYTE PTR $LN9@AfxCrtErro[eax]
	jmp	DWORD PTR $LN11@AfxCrtErro[ecx*4]
$LN4@AfxCrtErro:
; Line 474
	jmp	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$LN3@AfxCrtErro:
; Line 478
	jmp	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN7@AfxCrtErro:
; Line 488
	pop	ebp
	ret	0
	npad	3
$LN11@AfxCrtErro:
	DD	$LN7@AfxCrtErro
	DD	$LN4@AfxCrtErro
	DD	$LN3@AfxCrtErro
	DD	$LN3@AfxCrtErro
$LN9@AfxCrtErro:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
?AfxCrtErrorCheck@@YAHH@Z ENDP				; AfxCrtErrorCheck
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?EnsureRead@CArchive@@QAEXPAXI@Z
_TEXT	SEGMENT
_lpBuf$ = 8						; size = 4
_nCount$ = 12						; size = 4
?EnsureRead@CArchive@@QAEXPAXI@Z PROC			; CArchive::EnsureRead, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afx.inl
; Line 388
	push	ebp
	mov	ebp, esp
; Line 389
	mov	eax, DWORD PTR _lpBuf$[ebp]
	push	esi
	mov	esi, DWORD PTR _nCount$[ebp]
	push	esi
	push	eax
	call	?Read@CArchive@@QAEIPAXI@Z		; CArchive::Read
; Line 390
	cmp	eax, esi
	pop	esi
	je	SHORT $LN1@EnsureRead
; Line 392
	push	0
	push	3
	call	?AfxThrowArchiveException@@YGXHPBD@Z	; AfxThrowArchiveException
$LN5@EnsureRead:
$LN1@EnsureRead:
; Line 394
	pop	ebp
	ret	8
$LN4@EnsureRead:
?EnsureRead@CArchive@@QAEXPAXI@Z ENDP			; CArchive::EnsureRead
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$SerializeElements@PAVeuroNatRadarScreen@@@@YGXAAVCArchive@@PAPAVeuroNatRadarScreen@@H@Z
_TEXT	SEGMENT
_pData$233254 = -4					; size = 4
_pData$233244 = -4					; size = 4
_ar$ = 8						; size = 4
??$SerializeElements@PAVeuroNatRadarScreen@@@@YGXAAVCArchive@@PAPAVeuroNatRadarScreen@@H@Z PROC ; SerializeElements<euroNatRadarScreen *>, COMDAT
; _pElements$ = eax
; _nCount$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxtempl.h
; Line 67
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 68
	test	edi, edi
	je	SHORT $LN9@SerializeE
	test	eax, eax
	jne	SHORT $LN9@SerializeE
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN34@SerializeE:
$LN9@SerializeE:
; Line 73
	mov	ecx, DWORD PTR _ar$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	not	edx
; Line 79
	mov	DWORD PTR _pData$233244[ebp], eax
	test	dl, 1
	je	SHORT $LN6@SerializeE
; Line 80
	test	edi, edi
	je	SHORT $LN1@SerializeE
	npad	6
$LL5@SerializeE:
; Line 84
	mov	ebx, edi
	cmp	edi, 536870911				; 1fffffffH
	jb	SHORT $LN16@SerializeE
	mov	ebx, 536870911				; 1fffffffH
$LN16@SerializeE:
; Line 85
	mov	eax, DWORD PTR _pData$233244[ebp]
	mov	ecx, DWORD PTR _ar$[ebp]
	lea	esi, DWORD PTR [ebx*4]
	push	esi
	push	eax
	call	?Write@CArchive@@QAEXPBXI@Z		; CArchive::Write
; Line 87
	add	DWORD PTR _pData$233244[ebp], esi
	sub	edi, ebx
	jne	SHORT $LL5@SerializeE
$LN1@SerializeE:
	pop	edi
	pop	esi
	pop	ebx
; Line 107
	mov	esp, ebp
	pop	ebp
	ret	4
$LN6@SerializeE:
; Line 97
	test	edi, edi
	je	SHORT $LN1@SerializeE
	npad	9
$LL2@SerializeE:
; Line 101
	mov	ebx, edi
	cmp	edi, 536870911				; 1fffffffH
	jb	SHORT $LN18@SerializeE
	mov	ebx, 536870911				; 1fffffffH
$LN18@SerializeE:
; Line 102
	mov	ecx, DWORD PTR _pData$233254[ebp]
	lea	esi, DWORD PTR [ebx*4]
	push	esi
	push	ecx
	mov	ecx, DWORD PTR _ar$[ebp]
	call	?Read@CArchive@@QAEIPAXI@Z		; CArchive::Read
	cmp	eax, esi
	jne	SHORT $LN27@SerializeE
; Line 104
	add	DWORD PTR _pData$233254[ebp], esi
	sub	edi, ebx
	jne	SHORT $LL2@SerializeE
	pop	edi
	pop	esi
	pop	ebx
; Line 107
	mov	esp, ebp
	pop	ebp
	ret	4
$LN27@SerializeE:
; Line 102
	push	0
	push	3
	call	?AfxThrowArchiveException@@YGXHPBD@Z	; AfxThrowArchiveException
$LN35@SerializeE:
$LN33@SerializeE:
	int	3
??$SerializeElements@PAVeuroNatRadarScreen@@@@YGXAAVCArchive@@PAPAVeuroNatRadarScreen@@H@Z ENDP ; SerializeElements<euroNatRadarScreen *>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?ElementAt@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z
_TEXT	SEGMENT
?ElementAt@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::ElementAt, COMDAT
; _this$ = ecx
; _nIndex$ = eax
; Line 319
	test	eax, eax
	js	SHORT $LN1@ElementAt@2
	cmp	eax, DWORD PTR [ecx+8]
	jge	SHORT $LN1@ElementAt@2
; Line 320
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [ecx+eax*4]
; Line 322
	ret	0
$LN1@ElementAt@2:
; Line 321
	jmp	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
?ElementAt@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::ElementAt
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??A?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z
_TEXT	SEGMENT
??A?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::operator[], COMDAT
; _this$ = ecx
; _nIndex$ = eax
; Line 339
	test	eax, eax
	js	SHORT $LN3@operator
	cmp	eax, DWORD PTR [ecx+8]
	jge	SHORT $LN3@operator
	mov	ecx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [ecx+eax*4]
	ret	0
$LN3@operator:
	jmp	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
??A?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEAAPAVeuroNatRadarScreen@@H@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::operator[]
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?StringFindChar@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z
_TEXT	SEGMENT
_pszBlock$ = 8						; size = 4
_chMatch$ = 12						; size = 1
?StringFindChar@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z PROC	; ATL::ChTraitsCRT<char>::StringFindChar, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 208
	push	ebp
	mov	ebp, esp
; Line 209
	movzx	eax, BYTE PTR _chMatch$[ebp]
	mov	ecx, DWORD PTR _pszBlock$[ebp]
	push	eax
	push	ecx
	call	__mbschr
	add	esp, 8
; Line 210
	pop	ebp
	ret	0
?StringFindChar@?$ChTraitsCRT@D@ATL@@SAPBDPBDD@Z ENDP	; ATL::ChTraitsCRT<char>::StringFindChar
; Function compile flags: /Ogtp
;	COMDAT ?GetAllocLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetAllocLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC	; ATL::CSimpleStringT<char,0>::GetAllocLength, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 512
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax-8]
; Line 513
	ret	0
?GetAllocLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetAllocLength
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx
; Line 545
	mov	eax, DWORD PTR [ecx]
	mov	eax, DWORD PTR [eax-12]
; Line 546
	ret	0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z PROC ; ATL::ChTraitsCRT<char>::ConvertToBaseType, COMDAT
; _pszDest$ = ecx
; _nDestLength$ = eax
; _nSrcLength$ = edx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 352
	push	ebp
	mov	ebp, esp
; Line 354
	push	0
	push	0
	push	eax
	mov	eax, DWORD PTR _pszSrc$[ebp]
	push	ecx
	push	edx
	push	eax
	push	0
	push	3
	call	DWORD PTR __imp__WideCharToMultiByte@32
; Line 355
	pop	ebp
	ret	0
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ENDP ; ATL::ChTraitsCRT<char>::ConvertToBaseType
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC ; ATL::AtlGetStringResourceImage, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlcore.h
; Line 333
	push	ebp
	mov	ebp, esp
	push	esi
; Line 339
	mov	esi, DWORD PTR _id$[ebp]
	mov	eax, esi
	shr	eax, 4
	push	edi
	mov	edi, DWORD PTR _hInstance$[ebp]
	inc	eax
	movzx	ecx, ax
	push	6
	push	ecx
	push	edi
	call	DWORD PTR __imp__FindResourceW@12
; Line 340
	test	eax, eax
	jne	SHORT $LN1@AtlGetStri@2
	pop	edi
	pop	esi
; Line 346
	pop	ebp
	ret	0
$LN1@AtlGetStri@2:
; Line 345
	push	esi
	push	eax
	push	edi
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
; Line 346
	pop	ebp
	ret	0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Compare, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1361
	push	ebp
	mov	ebp, esp
; Line 1362
	mov	edx, DWORD PTR _psz$[ebp]
	test	edx, edx
	jne	SHORT $LN12@Compare
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN23@Compare:
$LN12@Compare:
; Line 1364
	mov	eax, DWORD PTR [ecx]
	push	edx
	push	eax
	call	__mbscmp
	add	esp, 8
; Line 1365
	pop	ebp
	ret	4
$LN22@Compare:
?Compare@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHPBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Compare
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_psz2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z PROC ; ATL::operator==, COMDAT
; Line 2388
	push	ebp
	mov	ebp, esp
; Line 2389
	mov	ecx, DWORD PTR _psz2$[ebp]
	test	ecx, ecx
	jne	SHORT $LN14@operator@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN26@operator@3:
$LN14@operator@3:
	mov	eax, DWORD PTR _str1$[ebp]
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	eax
	call	__mbscmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
; Line 2390
	pop	ebp
	ret	0
$LN25@operator@3:
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ENDP ; ATL::operator==
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$AtlAdd@H@ATL@@YAJPAHHH@Z
_TEXT	SEGMENT
_ptResult$ = 8						; size = 4
_tLeft$ = 12						; size = 4
_tRight$ = 16						; size = 4
??$AtlAdd@H@ATL@@YAJPAHHH@Z PROC			; ATL::AtlAdd<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlalloc.h
; Line 98
	push	ebp
	mov	ebp, esp
; Line 99
	mov	eax, DWORD PTR _tLeft$[ebp]
	mov	ecx, DWORD PTR _tRight$[ebp]
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, eax
	cmp	edx, ecx
	jge	SHORT $LN1@AtlAdd
; Line 101
	mov	eax, -2147024362			; 80070216H
; Line 105
	pop	ebp
	ret	0
$LN1@AtlAdd:
; Line 103
	add	eax, ecx
	mov	ecx, DWORD PTR _ptResult$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 104
	xor	eax, eax
; Line 105
	pop	ebp
	ret	0
??$AtlAdd@H@ATL@@YAJPAHHH@Z ENDP			; ATL::AtlAdd<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 902
	push	ebp
	mov	ebp, esp
	push	esi
; Line 905
	mov	esi, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR [esi]
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	push	edi
	call	edx
; Line 906
	cmp	DWORD PTR [esi+12], 0
	lea	ecx, DWORD PTR [esi+12]
	jl	SHORT $LN3@CloneData
	cmp	eax, DWORD PTR [esi]
	jne	SHORT $LN3@CloneData
; Line 908
	mov	edi, esi
; Line 909
	mov	eax, 1
	lock	 xadd	 DWORD PTR [ecx], eax
; Line 923
	mov	eax, edi
	pop	edi
	pop	esi
; Line 924
	pop	ebp
	ret	0
$LN3@CloneData:
; Line 913
	mov	ecx, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	1
	push	ecx
	mov	ecx, eax
	call	edx
	mov	edi, eax
; Line 914
	test	edi, edi
	jne	SHORT $LN1@CloneData
; Line 916
	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$LN17@CloneData:
$LN1@CloneData:
; Line 918
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [edi+4], eax
; Line 920
	mov	eax, DWORD PTR [esi+4]
	inc	eax
	push	eax
	add	esi, 16					; 00000010H
	push	esi
	push	eax
	lea	ecx, DWORD PTR [edi+16]
	push	ecx
	call	_memcpy_s
	add	esp, 16					; 00000010H
; Line 923
	mov	eax, edi
	pop	edi
	pop	esi
; Line 924
	pop	ebp
	ret	0
$LN16@CloneData:
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ PROC ; ATL::CSimpleStringT<char,0>::GetManager, COMDAT
; _this$ = ecx
; Line 549
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax-16]
; Line 550
	test	ecx, ecx
	je	SHORT $LN3@GetManager
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	jmp	eax
$LN3@GetManager:
	xor	eax, eax
; Line 551
	ret	0
?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetManager
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z
_TEXT	SEGMENT
__S1$ = 8						; size = 4
__S1max$ = 12						; size = 4
__S2$ = 16						; size = 4
__N$ = 20						; size = 4
?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z PROC		; ATL::Checked::memcpy_s, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlchecked.h
; Line 68
	push	ebp
	mov	ebp, esp
; Line 69
	mov	eax, DWORD PTR __N$[ebp]
	mov	ecx, DWORD PTR __S2$[ebp]
	mov	edx, DWORD PTR __S1max$[ebp]
	push	eax
	mov	eax, DWORD PTR __S1$[ebp]
	push	ecx
	push	edx
	push	eax
	call	_memcpy_s
	add	esp, 16					; 00000010H
	cmp	eax, 80					; 00000050H
	ja	SHORT $LN5@memcpy_s
	movzx	ecx, BYTE PTR $LN12@memcpy_s[eax]
	jmp	DWORD PTR $LN14@memcpy_s[ecx*4]
$LN6@memcpy_s:
	jmp	?AfxThrowMemoryException@@YGXXZ		; AfxThrowMemoryException
$LN5@memcpy_s:
	jmp	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN7@memcpy_s:
; Line 70
	pop	ebp
	ret	0
	npad	2
$LN14@memcpy_s:
	DD	$LN7@memcpy_s
	DD	$LN6@memcpy_s
	DD	$LN5@memcpy_s
	DD	$LN5@memcpy_s
$LN12@memcpy_s:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	0
?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z ENDP		; ATL::Checked::memcpy_s
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z
_TEXT	SEGMENT
_nNewMax$233183 = -4					; size = 4
_nAllocSize$233146 = -4					; size = 4
?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize, COMDAT
; _this$ = esi
; _nNewSize$ = edi
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxtempl.h
; Line 366
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 370
	test	edi, edi
	jns	SHORT $LN58@SetSize
; Line 371
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN60@SetSize:
$LN58@SetSize:
; Line 376
	jne	SHORT $LN29@SetSize
; Line 379
	mov	eax, DWORD PTR [esi+4]
	test	eax, eax
	je	SHORT $LN28@SetSize
; Line 383
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
; Line 384
	mov	DWORD PTR [esi+4], 0
$LN28@SetSize:
; Line 386
	xor	eax, eax
	mov	DWORD PTR [esi+12], eax
	mov	DWORD PTR [esi+8], eax
; Line 473
	mov	esp, ebp
	pop	ebp
	ret	0
$LN29@SetSize:
; Line 388
	mov	ecx, DWORD PTR [esi+4]
	push	ebx
	test	ecx, ecx
	jne	SHORT $LN23@SetSize
; Line 395
	mov	eax, DWORD PTR [esi+16]
	mov	DWORD PTR _nAllocSize$233146[ebp], edi
	cmp	edi, eax
	jg	SHORT $LN35@SetSize
	mov	DWORD PTR _nAllocSize$233146[ebp], eax
$LN35@SetSize:
; Line 396
	mov	ebx, DWORD PTR _nAllocSize$233146[ebp]
	add	ebx, ebx
	add	ebx, ebx
	push	ebx
	call	??_U@YAPAXI@Z				; operator new[]
; Line 397
	push	ebx
	push	0
	push	eax
	mov	DWORD PTR [esi+4], eax
	call	_memset
; Line 404
	mov	eax, DWORD PTR _nAllocSize$233146[ebp]
	add	esp, 16					; 00000010H
	mov	DWORD PTR [esi+12], eax
; Line 470
	mov	DWORD PTR [esi+8], edi
	pop	ebx
; Line 473
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@SetSize:
; Line 406
	mov	ebx, DWORD PTR [esi+12]
	cmp	edi, ebx
	jg	SHORT $LN18@SetSize
; Line 409
	mov	eax, DWORD PTR [esi+8]
	cmp	edi, eax
	jle	$LN59@SetSize
; Line 412
	mov	edx, edi
	sub	edx, eax
	add	edx, edx
	add	edx, edx
	push	edx
	lea	eax, DWORD PTR [ecx+eax*4]
	push	0
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 470
	mov	DWORD PTR [esi+8], edi
	pop	ebx
; Line 473
	mov	esp, ebp
	pop	ebp
	ret	0
$LN18@SetSize:
; Line 430
	mov	eax, DWORD PTR [esi+16]
; Line 431
	test	eax, eax
	jne	SHORT $LN36@SetSize
; Line 435
	mov	eax, DWORD PTR [esi+8]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
; Line 436
	cmp	eax, 4
	jge	SHORT $LN38@SetSize
	mov	eax, 4
	jmp	SHORT $LN36@SetSize
$LN38@SetSize:
	cmp	eax, 1024				; 00000400H
	jle	SHORT $LN36@SetSize
	mov	eax, 1024				; 00000400H
$LN36@SetSize:
; Line 439
	add	eax, ebx
	cmp	edi, eax
	jge	SHORT $LN6@SetSize
; Line 440
	mov	DWORD PTR _nNewMax$233183[ebp], eax
; Line 441
	jmp	SHORT $LN5@SetSize
$LN6@SetSize:
; Line 442
	mov	DWORD PTR _nNewMax$233183[ebp], edi
	mov	eax, edi
$LN5@SetSize:
; Line 446
	cmp	eax, ebx
	jge	SHORT $LN4@SetSize
; Line 447
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN61@SetSize:
$LN4@SetSize:
; Line 452
	add	eax, eax
	add	eax, eax
	push	eax
	call	??_U@YAPAXI@Z				; operator new[]
; Line 456
	mov	ecx, DWORD PTR [esi+8]
	mov	edx, DWORD PTR [esi+4]
	mov	ebx, eax
	mov	eax, DWORD PTR _nNewMax$233183[ebp]
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	add	eax, eax
	push	edx
	add	eax, eax
	push	eax
	push	ebx
	call	?memcpy_s@Checked@ATL@@YAXPAXIPBXI@Z	; ATL::Checked::memcpy_s
; Line 460
	mov	eax, DWORD PTR [esi+8]
	mov	ecx, edi
	sub	ecx, eax
	add	ecx, ecx
	add	ecx, ecx
	push	ecx
	lea	edx, DWORD PTR [ebx+eax*4]
	push	0
	push	edx
	call	_memset
; Line 468
	mov	eax, DWORD PTR [esi+4]
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
; Line 471
	mov	ecx, DWORD PTR _nNewMax$233183[ebp]
	add	esp, 36					; 00000024H
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+12], ecx
$LN59@SetSize:
; Line 470
	mov	DWORD PTR [esi+8], edi
	pop	ebx
; Line 473
	mov	esp, ebp
	pop	ebp
	ret	0
$LN57@SetSize:
?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Serialize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEXAAVCArchive@@@Z
_TEXT	SEGMENT
_ar$ = 8						; size = 4
?Serialize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEXAAVCArchive@@@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::Serialize, COMDAT
; _this$ = ecx
; Line 631
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 635
	mov	ebx, DWORD PTR _ar$[ebp]
	mov	eax, DWORD PTR [ebx+24]
	not	eax
	push	esi
	mov	esi, ecx
	test	al, 1
	je	SHORT $LN2@Serialize
; Line 637
	mov	ecx, DWORD PTR [esi+8]
	push	ecx
	mov	ecx, ebx
	call	?WriteCount@CArchive@@QAEXK@Z		; CArchive::WriteCount
; Line 644
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi+4]
	push	ebx
	call	??$SerializeElements@PAVeuroNatRadarScreen@@@@YGXAAVCArchive@@PAPAVeuroNatRadarScreen@@H@Z ; SerializeElements<euroNatRadarScreen *>
	pop	esi
	pop	ebx
; Line 645
	pop	ebp
	ret	4
$LN2@Serialize:
	push	edi
; Line 641
	mov	ecx, ebx
	call	?ReadCount@CArchive@@QAEKXZ		; CArchive::ReadCount
; Line 642
	mov	edi, eax
	call	?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize
; Line 644
	mov	ecx, DWORD PTR [esi+8]
	mov	eax, DWORD PTR [esi+4]
	pop	edi
	push	ebx
	call	??$SerializeElements@PAVeuroNatRadarScreen@@@@YGXAAVCArchive@@PAPAVeuroNatRadarScreen@@H@Z ; SerializeElements<euroNatRadarScreen *>
	pop	esi
	pop	ebx
; Line 645
	pop	ebp
	ret	4
?Serialize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEXAAVCArchive@@@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::Serialize
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??1?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAE@XZ
_TEXT	SEGMENT
??1?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAE@XZ PROC	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::~CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>, COMDAT
; _this$ = eax
; Line 353
	mov	DWORD PTR [eax], OFFSET ??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
; Line 356
	mov	eax, DWORD PTR [eax+4]
	test	eax, eax
	je	SHORT $LN4@CArray
; Line 360
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	pop	ecx
$LN4@CArray:
; Line 362
	ret	0
??1?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAE@XZ ENDP	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::~CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAE@XZ
_TEXT	SEGMENT
??0?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAE@XZ PROC	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>, COMDAT
; _this$ = eax
; Line 347
	xor	ecx, ecx
	mov	DWORD PTR [eax], OFFSET ??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
	mov	DWORD PTR [eax+4], ecx
; Line 348
	mov	DWORD PTR [eax+16], ecx
	mov	DWORD PTR [eax+12], ecx
	mov	DWORD PTR [eax+8], ecx
; Line 349
	ret	0
??0?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAE@XZ ENDP	; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Find@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHDH@Z
_TEXT	SEGMENT
_ch$ = 8						; size = 1
_iStart$ = 12						; size = 4
?Find@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHDH@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Find, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1670
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
; Line 1676
	mov	ecx, DWORD PTR _iStart$[ebp]
	test	ecx, ecx
	js	SHORT $LN1@Find
	mov	eax, DWORD PTR [esi]
	cmp	ecx, DWORD PTR [eax-12]
	jge	SHORT $LN1@Find
; Line 1682
	movzx	edx, BYTE PTR _ch$[ebp]
	push	edx
	add	eax, ecx
	push	eax
	call	__mbschr
	add	esp, 8
; Line 1685
	test	eax, eax
	je	SHORT $LN1@Find
	sub	eax, DWORD PTR [esi]
	pop	esi
; Line 1686
	pop	ebp
	ret	8
$LN1@Find:
; Line 1678
	or	eax, -1
	pop	esi
; Line 1686
	pop	ebp
	ret	8
?Find@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEHDH@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Find
; Function compile flags: /Ogtp
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC		; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 462
	push	esi
	mov	esi, ecx
; Line 463
	mov	ecx, DWORD PTR [esi]
; Line 465
	cmp	DWORD PTR [ecx-12], 0
	lea	eax, DWORD PTR [ecx-16]
	push	edi
	mov	edi, DWORD PTR [eax]
	je	SHORT $LN22@Empty
; Line 470
	cmp	DWORD PTR [eax+12], 0
	lea	edx, DWORD PTR [eax+12]
	jge	SHORT $LN2@Empty
; Line 473
	cmp	DWORD PTR [ecx-8], 0
	jge	SHORT $LN11@Empty
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN27@Empty:
$LN11@Empty:
	mov	DWORD PTR [ecx-12], 0
	mov	eax, DWORD PTR [esi]
	pop	edi
	mov	BYTE PTR [eax], 0
	pop	esi
; Line 481
	ret	0
$LN2@Empty:
; Line 477
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN19@Empty
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN19@Empty:
; Line 478
	mov	edx, DWORD PTR [edi]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, edi
	call	eax
; Line 479
	add	eax, 16					; 00000010H
	mov	DWORD PTR [esi], eax
$LN22@Empty:
; Line 481
	pop	edi
	pop	esi
	ret	0
$LN26@Empty:
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@0@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_str2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@0@Z PROC ; ATL::operator==, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 2381
	push	ebp
	mov	ebp, esp
; Line 2382
	mov	eax, DWORD PTR _str2$[ebp]
	mov	ecx, DWORD PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN16@operator@7
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN28@operator@7:
$LN16@operator@7:
	mov	edx, DWORD PTR _str1$[ebp]
	mov	eax, DWORD PTR [edx]
	push	ecx
	push	eax
	call	__mbscmp
	add	esp, 8
	neg	eax
	sbb	eax, eax
	inc	eax
; Line 2383
	pop	ebp
	ret	0
$LN27@operator@7:
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@0@Z ENDP ; ATL::operator==
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??$AtlAddThrow@H@ATL@@YAHHH@Z
_TEXT	SEGMENT
_tLeft$ = 8						; size = 4
_tRight$ = 12						; size = 4
??$AtlAddThrow@H@ATL@@YAHHH@Z PROC			; ATL::AtlAddThrow<int>, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlalloc.h
; Line 207
	push	ebp
	mov	ebp, esp
; Line 209
	mov	eax, DWORD PTR _tLeft$[ebp]
	mov	ecx, DWORD PTR _tRight$[ebp]
	mov	edx, 2147483647				; 7fffffffH
	sub	edx, eax
	cmp	edx, ecx
	jl	SHORT $LN11@AtlAddThro
	add	eax, ecx
; Line 215
	pop	ebp
	ret	0
$LN11@AtlAddThro:
; Line 212
	push	-2147024362				; 80070216H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN13@AtlAddThro:
$LN12@AtlAddThro:
	int	3
??$AtlAddThrow@H@ATL@@YAHHH@Z ENDP			; ATL::AtlAddThrow<int>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 236
	push	ebp
	mov	ebp, esp
; Line 238
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	ebx
	push	esi
	mov	esi, DWORD PTR [eax]
	mov	ebx, ecx
; Line 239
	mov	ecx, DWORD PTR [esi-16]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	push	edi
	call	eax
	cmp	DWORD PTR [esi-4], 0
	lea	ecx, DWORD PTR [esi-4]
	jl	SHORT $LN7@CSimpleStr@3
	cmp	eax, DWORD PTR [esi-16]
	jne	SHORT $LN7@CSimpleStr@3
	lea	edi, DWORD PTR [esi-16]
	mov	edx, 1
	lock	 xadd	 DWORD PTR [ecx], edx
; Line 240
	add	edi, 16					; 00000010H
	mov	DWORD PTR [ebx], edi
	pop	edi
	pop	esi
; Line 241
	mov	eax, ebx
	pop	ebx
	pop	ebp
	ret	4
; Line 239
$LN7@CSimpleStr@3:
	mov	ecx, DWORD PTR [esi-12]
	mov	edx, DWORD PTR [eax]
	mov	edx, DWORD PTR [edx]
	push	1
	push	ecx
	mov	ecx, eax
	call	edx
	mov	edi, eax
	test	edi, edi
	jne	SHORT $LN5@CSimpleStr@3
	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$LN26@CSimpleStr@3:
$LN5@CSimpleStr@3:
	mov	eax, DWORD PTR [esi-12]
	mov	DWORD PTR [edi+4], eax
	mov	eax, DWORD PTR [esi-12]
	inc	eax
	push	eax
	push	esi
	push	eax
	lea	ecx, DWORD PTR [edi+16]
	push	ecx
	call	_memcpy_s
	add	esp, 16					; 00000010H
; Line 240
	add	edi, 16					; 00000010H
	mov	DWORD PTR [ebx], edi
	pop	edi
	pop	esi
; Line 241
	mov	eax, ebx
	pop	ebx
	pop	ebp
	ret	4
$LN25@CSimpleStr@3:
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?GetManager@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetManager@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::GetManager, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1351
	mov	eax, DWORD PTR [ecx]
	mov	ecx, DWORD PTR [eax-16]
	test	ecx, ecx
	je	SHORT $LN1@GetManager@2
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
; Line 1352
	test	eax, eax
	jne	SHORT $LN2@GetManager@2
$LN1@GetManager@2:
; Line 1354
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
; Line 1355
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	jmp	eax
$LN2@GetManager@2:
; Line 1356
	ret	0
?GetManager@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBEPAUIAtlStringMgr@2@XZ ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::GetManager
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?SetAtGrow@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHABQAVeuroNatRadarScreen@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?SetAtGrow@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHABQAVeuroNatRadarScreen@@@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetAtGrow, COMDAT
; _this$ = eax
; _nIndex$ = ebx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxtempl.h
; Line 532
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, eax
; Line 536
	test	ebx, ebx
	jns	SHORT $LN2@SetAtGrow
; Line 537
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN6@SetAtGrow:
$LN2@SetAtGrow:
; Line 539
	cmp	ebx, DWORD PTR [esi+8]
	jl	SHORT $LN1@SetAtGrow
; Line 540
	push	edi
	lea	edi, DWORD PTR [ebx+1]
	call	?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize
	pop	edi
$LN1@SetAtGrow:
; Line 541
	mov	ecx, DWORD PTR _newElement$[ebp]
	mov	eax, DWORD PTR [esi+4]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+ebx*4], edx
	pop	esi
; Line 542
	pop	ebp
	ret	4
$LN5@SetAtGrow:
?SetAtGrow@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHABQAVeuroNatRadarScreen@@@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetAtGrow
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??_G?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_G?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEPAXI@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	mov	eax, DWORD PTR [esi+4]
	mov	DWORD PTR [esi], OFFSET ??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
	test	eax, eax
	je	SHORT $LN7@scalar@7
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN7@scalar@7:
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN16@scalar@7
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN16@scalar@7:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_G?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAEPAXI@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::`scalar deleting destructor'
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Add@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEHABQAVeuroNatRadarScreen@@@Z
_TEXT	SEGMENT
_newElement$ = 8					; size = 4
?Add@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEHABQAVeuroNatRadarScreen@@@Z PROC ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::Add, COMDAT
; _this$ = eax
; Line 331
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	mov	esi, eax
	mov	ebx, DWORD PTR [esi+8]
	push	edi
; Line 332
	test	ebx, ebx
	jns	SHORT $LN4@Add
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN9@Add:
$LN4@Add:
	lea	edi, DWORD PTR [ebx+1]
	call	?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR _newElement$[ebp]
	mov	edx, DWORD PTR [ecx]
	pop	edi
	mov	DWORD PTR [eax+ebx*4], edx
	pop	esi
; Line 333
	mov	eax, ebx
	pop	ebx
	pop	ebp
	ret	4
$LN8@Add:
?Add@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEHABQAVeuroNatRadarScreen@@@Z ENDP ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::Add
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pchSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
_pStringMgr$ = 16					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z PROC ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 266
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 271
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	test	ecx, ecx
	jne	SHORT $LN11@CSimpleStr@4
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN31@CSimpleStr@4:
$LN11@CSimpleStr@4:
; Line 273
	mov	ebx, DWORD PTR _pchSrc$[ebp]
	mov	esi, DWORD PTR _nLength$[ebp]
	test	ebx, ebx
	jne	SHORT $LN2@CSimpleStr@4
	test	esi, esi
	je	SHORT $LN2@CSimpleStr@4
; Line 282
$LN19@CSimpleStr@4:
; Line 274
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN32@CSimpleStr@4:
$LN2@CSimpleStr@4:
; Line 276
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	push	esi
	call	edx
; Line 277
	test	eax, eax
	jne	SHORT $LN1@CSimpleStr@4
; Line 279
	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$LN33@CSimpleStr@4:
$LN1@CSimpleStr@4:
; Line 281
	add	eax, 16					; 00000010H
	mov	DWORD PTR [edi], eax
; Line 282
	test	esi, esi
	js	SHORT $LN19@CSimpleStr@4
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN19@CSimpleStr@4
	mov	DWORD PTR [eax-12], esi
	mov	eax, DWORD PTR [edi]
; Line 283
	push	esi
	push	ebx
	mov	BYTE PTR [esi+eax], 0
	mov	ecx, DWORD PTR [edi]
	push	esi
	push	ecx
	call	_memcpy_s
	add	esp, 16					; 00000010H
; Line 284
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	12					; 0000000cH
$LN30@CSimpleStr@4:
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pch$ = 8						; size = 4
_nLength$ = 12						; size = 4
_pStringMgr$ = 16					; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 1166
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	mov	ecx, DWORD PTR _pStringMgr$[ebp]
	test	ecx, ecx
	jne	SHORT $LN14@CStringT@3
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN35@CStringT@3:
$LN14@CStringT@3:
	mov	ebx, DWORD PTR _pch$[ebp]
	mov	esi, DWORD PTR _nLength$[ebp]
	test	ebx, ebx
	jne	SHORT $LN5@CStringT@3
	test	esi, esi
	je	SHORT $LN5@CStringT@3
$LN22@CStringT@3:
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN36@CStringT@3:
$LN5@CStringT@3:
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax]
	push	1
	push	esi
	call	edx
	test	eax, eax
	jne	SHORT $LN4@CStringT@3
	call	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$LN37@CStringT@3:
$LN4@CStringT@3:
	add	eax, 16					; 00000010H
	mov	DWORD PTR [edi], eax
	test	esi, esi
	js	SHORT $LN22@CStringT@3
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN22@CStringT@3
	mov	DWORD PTR [eax-12], esi
	mov	eax, DWORD PTR [edi]
	push	esi
	push	ebx
	mov	BYTE PTR [esi+eax], 0
	mov	ecx, DWORD PTR [edi]
	push	esi
	push	ecx
	call	_memcpy_s
	add	esp, 16					; 00000010H
; Line 1167
	mov	eax, edi
	pop	edi
	pop	esi
	pop	ebx
	pop	ebp
	ret	12					; 0000000cH
$LN34@CStringT@3:
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogtp
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx
; Line 946
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _strSrc$[ebp]
	push	esi
	push	eax
	mov	esi, ecx
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Line 947
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT
$T242857 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nCount$ = 12						; size = 4
?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left, COMDAT
; _this$ = ecx
; Line 2063
	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
; Line 2065
	mov	esi, DWORD PTR _nCount$[ebp]
	push	edi
	mov	edi, ecx
	mov	DWORD PTR $T242857[ebp], 0
	test	esi, esi
	jns	SHORT $LN2@Left
; Line 2066
	xor	esi, esi
$LN2@Left:
; Line 2068
	mov	eax, DWORD PTR [edi]
; Line 2069
	cmp	esi, DWORD PTR [eax-12]
	jl	SHORT $LN1@Left
; Line 2071
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	edi
	mov	ecx, esi
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
	pop	edi
; Line 2074
	mov	eax, esi
	pop	esi
; Line 2075
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@Left:
; Line 2074
	mov	ecx, DWORD PTR [eax-16]
	test	ecx, ecx
	je	SHORT $LN14@Left
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	test	eax, eax
	jne	SHORT $LN15@Left
$LN14@Left:
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN15@Left:
	mov	ecx, DWORD PTR [edi]
	push	eax
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ecx
	mov	ecx, esi
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	pop	edi
	mov	eax, esi
	pop	esi
; Line 2075
	mov	esp, ebp
	pop	ebp
	ret	8
?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z
_TEXT	SEGMENT
$T242910 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_nCount$ = 12						; size = 4
?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Right, COMDAT
; _this$ = ecx
; Line 2047
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 2049
	mov	esi, DWORD PTR _nCount$[ebp]
	push	edi
	mov	ebx, ecx
	mov	DWORD PTR $T242910[ebp], 0
	test	esi, esi
	jns	SHORT $LN2@Right
; Line 2050
	xor	esi, esi
$LN2@Right:
; Line 2052
	mov	eax, DWORD PTR [ebx]
	mov	edi, DWORD PTR [eax-12]
; Line 2053
	cmp	esi, edi
	jl	SHORT $LN1@Right
; Line 2055
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ebx
	mov	ecx, esi
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
	pop	edi
; Line 2058
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2059
	mov	esp, ebp
	pop	ebp
	ret	8
$LN1@Right:
; Line 2058
	mov	ecx, DWORD PTR [eax-16]
	test	ecx, ecx
	je	SHORT $LN14@Right
	mov	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR [eax+16]
	call	edx
	test	eax, eax
	jne	SHORT $LN15@Right
$LN14@Right:
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN15@Right:
	mov	ecx, DWORD PTR [ebx]
	sub	ecx, esi
	push	eax
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	add	ecx, edi
	push	ecx
	mov	ecx, esi
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2059
	mov	esp, ebp
	pop	ebp
	ret	8
?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Right
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT
$T242963 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
_iFirst$ = 12						; size = 4
_nCount$ = 16						; size = 4
?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid, COMDAT
; _this$ = ecx
; Line 2016
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
	push	edi
; Line 2020
	mov	edi, DWORD PTR _iFirst$[ebp]
	mov	ebx, ecx
	mov	DWORD PTR $T242963[ebp], 0
	test	edi, edi
	jns	SHORT $LN5@Mid
; Line 2021
	xor	edi, edi
$LN5@Mid:
; Line 2022
	mov	esi, DWORD PTR _nCount$[ebp]
	test	esi, esi
	jns	SHORT $LN4@Mid
; Line 2023
	xor	esi, esi
$LN4@Mid:
; Line 2025
	mov	eax, 2147483647				; 7fffffffH
	sub	eax, edi
	cmp	eax, esi
	jl	SHORT $LN53@Mid
	mov	edx, DWORD PTR [ebx]
	mov	eax, DWORD PTR [edx-12]
	lea	ecx, DWORD PTR [edi+esi]
	cmp	ecx, eax
	jle	SHORT $LN3@Mid
; Line 2027
	mov	esi, eax
	sub	esi, edi
$LN3@Mid:
; Line 2029
	cmp	edi, eax
	jle	SHORT $LN54@Mid
; Line 2031
	xor	esi, esi
$LN54@Mid:
; Line 2037
	test	edi, edi
	jne	SHORT $LN1@Mid
	cmp	esi, eax
	jne	SHORT $LN1@Mid
; Line 2039
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	push	ebx
	mov	ecx, esi
	call	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
	pop	edi
; Line 2042
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2043
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN53@Mid:
; Line 2025
	push	-2147024362				; 80070216H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN57@Mid:
$LN1@Mid:
; Line 2042
	mov	ecx, DWORD PTR [edx-16]
	test	ecx, ecx
	je	SHORT $LN40@Mid
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	test	eax, eax
	jne	SHORT $LN41@Mid
$LN40@Mid:
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+16]
	call	eax
$LN41@Mid:
	mov	ecx, DWORD PTR [ebx]
	push	eax
	push	esi
	mov	esi, DWORD PTR ___$ReturnUdt$[ebp]
	add	ecx, edi
	push	ecx
	mov	ecx, esi
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	pop	edi
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 2043
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
$LN55@Mid:
?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
; Function compile flags: /Ogtp
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nOldLength$220528 = 12					; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC	; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 633
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 634
	mov	esi, DWORD PTR _nLength$[ebp]
	mov	ebx, ecx
	test	esi, esi
	jne	SHORT $LN5@SetString
; Line 636
	call	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty
	pop	esi
	pop	ebx
; Line 666
	pop	ebp
	ret	8
$LN5@SetString:
; Line 646
	mov	ecx, DWORD PTR _pszSrc$[ebp]
	test	ecx, ecx
	jne	SHORT $LN3@SetString
; Line 664
$LN38@SetString:
; Line 647
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN50@SetString:
$LN3@SetString:
; Line 649
	mov	eax, DWORD PTR [ebx]
	mov	edx, DWORD PTR [eax-12]
	push	edi
; Line 650
	mov	edi, ecx
	sub	edi, eax
	mov	DWORD PTR _nOldLength$220528[ebp], edx
; Line 654
	test	esi, esi
	jns	SHORT $LN17@SetString
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN51@SetString:
$LN17@SetString:
	mov	edx, 1
	sub	edx, DWORD PTR [eax-4]
	mov	eax, DWORD PTR [eax-8]
	sub	eax, esi
	or	edx, eax
	jge	SHORT $LN47@SetString
	push	esi
	mov	ecx, ebx
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
	mov	ecx, DWORD PTR _pszSrc$[ebp]
$LN47@SetString:
	mov	eax, DWORD PTR [ebx]
; Line 658
	push	esi
	cmp	edi, DWORD PTR _nOldLength$220528[ebp]
	ja	SHORT $LN2@SetString
	mov	edx, DWORD PTR [eax-8]
	lea	ecx, DWORD PTR [eax+edi]
	push	ecx
	push	edx
	push	eax
	call	_memmove_s
; Line 660
	jmp	SHORT $LN49@SetString
$LN2@SetString:
; Line 662
	push	ecx
	mov	ecx, DWORD PTR [eax-8]
	push	ecx
	push	eax
	call	_memcpy_s
$LN49@SetString:
; Line 664
	mov	eax, DWORD PTR [ebx]
	add	esp, 16					; 00000010H
	pop	edi
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN38@SetString
	mov	DWORD PTR [eax-12], esi
	mov	edx, DWORD PTR [ebx]
	mov	BYTE PTR [esi+edx], 0
	pop	esi
	pop	ebx
; Line 666
	pop	ebp
	ret	8
$LN48@SetString:
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
tv200 = 12						; size = 4
_nID$ = 12						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 2254
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
; Line 2255
	mov	esi, DWORD PTR _nID$[ebp]
	mov	eax, esi
	shr	eax, 4
	push	edi
	mov	edi, DWORD PTR _hInstance$[ebp]
	inc	eax
	mov	ebx, ecx
	movzx	ecx, ax
	push	6
	push	ecx
	push	edi
	call	DWORD PTR __imp__FindResourceW@12
	test	eax, eax
	je	SHORT $LN36@LoadString
	push	esi
	push	eax
	push	edi
	call	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
	mov	edi, eax
	add	esp, 12					; 0000000cH
; Line 2256
	test	edi, edi
	jne	SHORT $LN1@LoadString
$LN36@LoadString:
	pop	edi
	pop	esi
; Line 2258
	xor	eax, eax
	pop	ebx
; Line 2267
	pop	ebp
	ret	8
$LN1@LoadString:
; Line 2261
	movzx	eax, WORD PTR [edi]
	push	0
	push	0
	push	0
	push	0
	push	eax
	lea	ecx, DWORD PTR [edi+2]
	push	ecx
	push	0
	push	3
	mov	DWORD PTR tv200[ebp], ecx
	call	DWORD PTR __imp__WideCharToMultiByte@32
	mov	esi, eax
; Line 2262
	test	esi, esi
	jns	SHORT $LN14@LoadString
; Line 2264
$LN27@LoadString:
; Line 2262
	push	-2147024809				; 80070057H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN38@LoadString:
$LN14@LoadString:
	mov	eax, DWORD PTR [ebx]
	mov	edx, 1
	sub	edx, DWORD PTR [eax-4]
	mov	eax, DWORD PTR [eax-8]
	sub	eax, esi
	or	edx, eax
	jge	SHORT $LN13@LoadString
	push	esi
	mov	ecx, ebx
	call	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$LN13@LoadString:
; Line 2263
	mov	ecx, DWORD PTR [ebx]
	movzx	edx, WORD PTR [edi]
	mov	eax, DWORD PTR tv200[ebp]
	push	0
	push	0
	push	esi
	push	ecx
	push	edx
	push	eax
	push	0
	push	3
	call	DWORD PTR __imp__WideCharToMultiByte@32
; Line 2264
	mov	eax, DWORD PTR [ebx]
	cmp	esi, DWORD PTR [eax-8]
	jg	SHORT $LN27@LoadString
	mov	DWORD PTR [eax-12], esi
	mov	ecx, DWORD PTR [ebx]
	pop	edi
	mov	BYTE PTR [esi+ecx], 0
	pop	esi
; Line 2266
	mov	eax, 1
	pop	ebx
; Line 2267
	pop	ebp
	ret	8
$LN37@LoadString:
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogtp
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC	; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 627
	push	ebp
	mov	ebp, esp
	push	esi
; Line 628
	mov	esi, DWORD PTR _pszSrc$[ebp]
	test	esi, esi
	jne	SHORT $LN3@SetString@2
	xor	eax, eax
	push	eax
	push	esi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
	pop	esi
; Line 629
	pop	ebp
	ret	4
; Line 628
$LN3@SetString@2:
	mov	eax, esi
	push	edi
	lea	edi, DWORD PTR [eax+1]
	npad	1
$LL6@SetString@2:
	mov	dl, BYTE PTR [eax]
	inc	eax
	test	dl, dl
	jne	SHORT $LL6@SetString@2
	sub	eax, edi
	pop	edi
	push	eax
	push	esi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
	pop	esi
; Line 629
	pop	ebp
	ret	4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 2240
	push	ebp
	mov	ebp, esp
	push	esi
	push	edi
; Line 2241
	mov	edi, DWORD PTR _nID$[ebp]
	push	edi
	mov	esi, ecx
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle
; Line 2242
	test	eax, eax
	jne	SHORT $LN1@LoadString@2
	pop	edi
	pop	esi
; Line 2248
	pop	ebp
	ret	4
$LN1@LoadString@2:
; Line 2247
	push	edi
	push	eax
	mov	ecx, esi
	call	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
	pop	edi
	pop	esi
; Line 2248
	pop	ebp
	ret	4
?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogtp
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
; Line 339
	push	ebp
	mov	ebp, esp
; Line 340
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	edi
	mov	edi, ecx
	test	edx, edx
	jne	SHORT $LN5@operator@15
	xor	eax, eax
	push	eax
	push	edx
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 342
	mov	eax, edi
	pop	edi
; Line 343
	pop	ebp
	ret	4
; Line 340
$LN5@operator@15:
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL8@operator@15:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL8@operator@15
	sub	eax, esi
	pop	esi
	push	eax
	push	edx
	mov	ecx, edi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 342
	mov	eax, edi
	pop	edi
; Line 343
	pop	ebp
	ret	4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogtp
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 2574
	push	ebp
	mov	ebp, esp
	push	edi
	mov	edi, ecx
; Line 2577
	mov	ecx, DWORD PTR _pv$[ebp]
	xor	al, al
	test	ecx, ecx
	je	SHORT $LN2@CheckImpli
	test	ecx, -65536				; ffff0000H
	jne	SHORT $LN2@CheckImpli
; Line 2579
	push	esi
	movzx	esi, cx
; Line 2580
	push	esi
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle
	test	eax, eax
	je	SHORT $LN6@CheckImpli
	push	esi
	push	eax
	mov	ecx, edi
	call	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
$LN6@CheckImpli:
; Line 2584
	mov	al, 1
	pop	esi
$LN2@CheckImpli:
	pop	edi
; Line 2588
	pop	ebp
	ret	4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
; Function compile flags: /Ogtp
;	COMDAT ??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx
; Line 1232
	push	ebp
	mov	ebp, esp
; Line 1233
	mov	edx, DWORD PTR _pszSrc$[ebp]
	push	edi
	mov	edi, ecx
	test	edx, edx
	jne	SHORT $LN7@operator@17
	xor	eax, eax
	push	eax
	push	edx
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 1235
	mov	eax, edi
	pop	edi
; Line 1236
	pop	ebp
	ret	4
; Line 1233
$LN7@operator@17:
	mov	eax, edx
	push	esi
	lea	esi, DWORD PTR [eax+1]
$LL10@operator@17:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL10@operator@17
	sub	eax, esi
	pop	esi
	push	eax
	push	edx
	mov	ecx, edi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Line 1235
	mov	eax, edi
	pop	edi
; Line 1236
	pop	ebp
	ret	4
??4?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\afxtempl.h
xdata$x	SEGMENT
__unwindtable$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z$0
__ehfuncinfo$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z
_TEXT	SEGMENT
$T244713 = -16						; size = 4
$T244712 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_sDisplayName$ = 8					; size = 4
_NeedRadarContent$ = 12					; size = 1
_GeoReferenced$ = 16					; size = 1
_CanBeSaved$ = 20					; size = 1
_CanBeCreated$ = 24					; size = 1
?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z PROC ; euroNatPlugin::OnRadarScreenCreated, COMDAT
; _this$ = ecx
; File c:\users\michael\desktop\code\euronat\euronatplugin.cpp
; Line 93
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ebx, ecx
; Line 94
	push	40					; 00000028H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T244713[ebp], eax
	xor	edi, edi
	mov	DWORD PTR __$EHRec$[ebp+8], edi
	cmp	eax, edi
	je	SHORT $LN3@OnRadarScr
	mov	ecx, DWORD PTR [ebx+44]
	mov	edx, DWORD PTR [ebx+40]
	push	ecx
	push	edx
	mov	esi, eax
	call	??0euroNatRadarScreen@@QAE@PAUNAT@@PAH@Z ; euroNatRadarScreen::euroNatRadarScreen
	mov	DWORD PTR $T244712[ebp], eax
	jmp	SHORT $LN4@OnRadarScr
$LN3@OnRadarScr:
	mov	DWORD PTR $T244712[ebp], edi
$LN4@OnRadarScr:
	lea	esi, DWORD PTR [ebx+20]
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ebx, DWORD PTR [esi+8]
	cmp	ebx, edi
	jge	SHORT $LN9@OnRadarScr
; Line 96
$LN16@OnRadarScr:
; Line 94
	call	?AfxThrowInvalidArgException@@YGXXZ	; AfxThrowInvalidArgException
$LN22@OnRadarScr:
$LN9@OnRadarScr:
	lea	edi, DWORD PTR [ebx+1]
	call	?SetSize@?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@QAEXHH@Z ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::SetSize
	mov	eax, DWORD PTR [esi+4]
	mov	ecx, DWORD PTR $T244712[ebp]
	mov	DWORD PTR [eax+ebx*4], ecx
; Line 96
	cmp	ebx, DWORD PTR [esi+8]
	jge	SHORT $LN16@OnRadarScr
	mov	edx, DWORD PTR [esi+4]
	mov	eax, DWORD PTR [edx+ebx*4]
; Line 97
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
$LN21@OnRadarScr:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z$0:
	mov	eax, DWORD PTR $T244713[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	pop	ecx
	ret	0
__ehhandler$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnRadarScreenCreated@euroNatPlugin@@UAEPAVCRadarScreen@EuroScopePlugIn@@PBD_N111@Z ENDP ; euroNatPlugin::OnRadarScreenCreated
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z$0
__ehfuncinfo$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z PROC ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\cstringt.h
; Line 963
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	call	?AfxGetStringManager@@YGPAUIAtlStringMgr@ATL@@XZ ; AfxGetStringManager
	xor	ecx, ecx
	test	eax, eax
	setne	cl
	test	ecx, ecx
	jne	SHORT $LN15@CStringT@6
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN47@CStringT@6:
$LN15@CStringT@6:
	mov	edx, DWORD PTR [eax]
	mov	ecx, eax
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	eax, 16					; 00000010H
	mov	DWORD PTR [edi], eax
; Line 964
	mov	edx, DWORD PTR _pszSrc$[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	test	edx, edx
	je	SHORT $LN43@CStringT@6
	test	edx, -65536				; ffff0000H
	jne	SHORT $LN39@CStringT@6
	movzx	esi, dx
	push	esi
	call	?AfxFindStringResourceHandle@@YGPAUHINSTANCE__@@I@Z ; AfxFindStringResourceHandle
	test	eax, eax
	je	SHORT $LN37@CStringT@6
	push	esi
	push	eax
	mov	ecx, edi
	call	?LoadStringA@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::LoadStringA
	jmp	SHORT $LN37@CStringT@6
$LN43@CStringT@6:
; Line 966
	xor	eax, eax
	jmp	SHORT $LN40@CStringT@6
$LN39@CStringT@6:
	mov	eax, edx
	lea	esi, DWORD PTR [eax+1]
	npad	7
$LL44@CStringT@6:
	mov	cl, BYTE PTR [eax]
	inc	eax
	test	cl, cl
	jne	SHORT $LL44@CStringT@6
	sub	eax, esi
$LN40@CStringT@6:
	push	eax
	push	edx
	mov	ecx, edi
	call	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
$LN37@CStringT@6:
; Line 968
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	4
$LN46@CStringT@6:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ	; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
__ehhandler$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??1euroNatPlugin@@UAE@XZ			; euroNatPlugin::~euroNatPlugin
__unwindtable$??1euroNatPlugin@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1euroNatPlugin@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1euroNatPlugin@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1euroNatPlugin@@UAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??1euroNatPlugin@@UAE@XZ$3
__ehfuncinfo$??1euroNatPlugin@@UAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??1euroNatPlugin@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1euroNatPlugin@@UAE@XZ PROC				; euroNatPlugin::~euroNatPlugin
; _this$ = ecx
; File c:\users\michael\desktop\code\euronat\euronatplugin.cpp
; Line 25
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1euroNatPlugin@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
	mov	DWORD PTR _this$[ebp], edi
	mov	DWORD PTR [edi], OFFSET ??_7euroNatPlugin@@6B@
	mov	DWORD PTR __$EHRec$[ebp+8], 3
; Line 26
	call	?Save@NATShow@@SAXPAVCPlugIn@EuroScopePlugIn@@@Z ; NATShow::Save
; Line 27
	lea	ecx, DWORD PTR [edi+48]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	??1euroNatOptions@@UAE@XZ		; euroNatOptions::~euroNatOptions
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR [edi+24]
	mov	DWORD PTR [edi+20], OFFSET ??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
	test	eax, eax
	je	SHORT $LN10@euroNatPlu
	push	eax
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN10@euroNatPlu:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR [edi+12]
	test	eax, eax
	je	SHORT $LN19@euroNatPlu
	mov	ecx, DWORD PTR [eax-4]
	lea	esi, DWORD PTR [eax-4]
	push	OFFSET ??1NAT@@QAE@XZ
	push	ecx
	push	584					; 00000248H
	push	eax
	call	??_M@YGXPAXIHP6EX0@Z@Z
	push	esi
	call	??_V@YAXPAX@Z				; operator delete[]
	add	esp, 4
$LN19@euroNatPlu:
	mov	eax, DWORD PTR [edi+16]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
	mov	ecx, edi
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	call	DWORD PTR __imp_??1CPlugIn@EuroScopePlugIn@@UAE@XZ
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
__unwindfunclet$??1euroNatPlugin@@UAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1CPlugIn@EuroScopePlugIn@@UAE@XZ
__unwindfunclet$??1euroNatPlugin@@UAE@XZ$1:
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 8
	jmp	??1NATData@@QAE@XZ			; NATData::~NATData
__unwindfunclet$??1euroNatPlugin@@UAE@XZ$2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	jmp	??1?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAE@XZ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::~CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>
__unwindfunclet$??1euroNatPlugin@@UAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1euroNatOptions@@UAE@XZ		; euroNatOptions::~euroNatOptions
__ehhandler$??1euroNatPlugin@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1euroNatPlugin@@UAE@XZ
	jmp	___CxxFrameHandler3
??1euroNatPlugin@@UAE@XZ ENDP				; euroNatPlugin::~euroNatPlugin
; Function compile flags: /Ogtp
;	COMDAT ??_GeuroNatPlugin@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GeuroNatPlugin@@UAEPAXI@Z PROC			; euroNatPlugin::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, ecx
	call	??1euroNatPlugin@@UAE@XZ		; euroNatPlugin::~euroNatPlugin
	test	BYTE PTR ___flags$[ebp], 1
	je	SHORT $LN4@scalar@12
	push	esi
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN4@scalar@12:
	mov	eax, esi
	pop	esi
	pop	ebp
	ret	4
??_GeuroNatPlugin@@UAEPAXI@Z ENDP			; euroNatPlugin::`scalar deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio 10.0\vc\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
__unwindtable$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$1
	DD	00H
	DD	FLAT:__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$3
	DD	00H
	DD	FLAT:__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$12
__ehfuncinfo$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
xdata$x	ENDS
;	COMDAT ?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z
_TEXT	SEGMENT
_opt$232958 = -20					; size = 4
$T249553 = -20						; size = 4
$T249551 = -20						; size = 4
$T249549 = -20						; size = 4
$T249547 = -20						; size = 4
$T249545 = -20						; size = 4
$T249543 = -20						; size = 4
$T249541 = -20						; size = 4
$T249539 = -20						; size = 4
$T249536 = -20						; size = 4
_val$232960 = -16					; size = 4
$T249538 = -16						; size = 4
$T249535 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_cmd$ = 8						; size = 4
_sCommandLine$ = 8					; size = 4
?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z PROC	; euroNatPlugin::OnCompileCommand, COMDAT
; _this$ = ecx
; File c:\users\michael\desktop\code\euronat\euronatplugin.cpp
; Line 29
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, ecx
; Line 30
	mov	eax, DWORD PTR _sCommandLine$[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
; Line 31
	push	OFFSET ??_C@_0M@HJMNOLAP@?4natrefresh?$AA@
	lea	ecx, DWORD PTR $T249535[ebp]
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	esi, eax
	push	11					; 0000000bH
	lea	ecx, DWORD PTR $T249536[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	ecx, DWORD PTR [esi]
	xor	edx, edx
	test	ecx, ecx
	setne	dl
	test	edx, edx
	jne	SHORT $LN65@OnCompileC
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN390@OnCompileC:
$LN65@OnCompileC:
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249536[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN83@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN83@OnCompileC:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T249535[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN92@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN92@OnCompileC:
	test	bl, bl
	je	SHORT $LN33@OnCompileC
; Line 32
	push	0
	push	0
	push	0
	push	0
	push	OFFSET ?NATWorkerData@NATData@@2UNATWorkerCont@1@A ; NATData::NATWorkerData
	push	OFFSET ?FetchDataWorker@NATData@@KAIPAX@Z ; NATData::FetchDataWorker
	mov	BYTE PTR ?Loading@NATShow@@2_NA, 1	; NATShow::Loading
	call	?AfxBeginThread@@YGPAVCWinThread@@P6AIPAX@Z0HIKPAU_SECURITY_ATTRIBUTES@@@Z ; AfxBeginThread
	mov	DWORD PTR [edi+8], eax
	jmp	$LN365@OnCompileC
$LN33@OnCompileC:
; Line 33
	push	OFFSET ??_C@_09FOKNFEAA@?4natshow?5?$AA@
	lea	ecx, DWORD PTR $T249538[ebp]
	call	??0?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	mov	esi, eax
	push	9
	lea	ecx, DWORD PTR $T249539[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	ecx, DWORD PTR [esi]
	xor	edx, edx
	test	ecx, ecx
	setne	dl
	test	edx, edx
	jne	SHORT $LN112@OnCompileC
	push	-2147467259				; 80004005H
	call	?AtlThrowImpl@ATL@@YGXJ@Z		; ATL::AtlThrowImpl
$LN391@OnCompileC:
$LN112@OnCompileC:
	mov	eax, DWORD PTR [eax]
	push	ecx
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249539[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	or	esi, -1
	lea	edx, DWORD PTR [eax+12]
	mov	ecx, esi
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN129@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN129@OnCompileC:
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	mov	eax, DWORD PTR $T249538[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	mov	edx, esi
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN138@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN138@OnCompileC:
; Line 34
	lea	ecx, DWORD PTR $T249541[ebp]
	test	bl, bl
	je	$LN31@OnCompileC
	push	3
	push	9
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
	mov	eax, DWORD PTR [eax]
	push	OFFSET ??_C@_03JOEPJFAM@gui?$AA@
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249541[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	mov	ecx, esi
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN171@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN171@OnCompileC:
	test	bl, bl
; Line 37
	jne	$LN389@OnCompileC
; Line 38
	push	4
	push	9
	lea	ecx, DWORD PTR $T249543[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
	mov	eax, DWORD PTR [eax]
	push	OFFSET ??_C@_04PGHBAKEC@east?$AA@
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249543[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	mov	ecx, esi
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN204@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN204@OnCompileC:
	test	bl, bl
	je	SHORT $LN28@OnCompileC
; Line 39
	cmp	BYTE PTR ?Eastbound@NATShow@@2_NA, 0	; NATShow::Eastbound
	sete	cl
	mov	BYTE PTR ?Eastbound@NATShow@@2_NA, cl	; NATShow::Eastbound
	jmp	$LN365@OnCompileC
$LN28@OnCompileC:
; Line 40
	push	4
	push	9
	lea	edx, DWORD PTR $T249545[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
	mov	eax, DWORD PTR [eax]
	push	OFFSET ??_C@_04GDDDFJPH@west?$AA@
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249545[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	lock	 xadd	 DWORD PTR [ecx], esi
	dec	esi
	test	esi, esi
	jg	SHORT $LN237@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN237@OnCompileC:
	test	bl, bl
	je	SHORT $LN26@OnCompileC
; Line 41
	cmp	BYTE PTR ?Westbound@NATShow@@2_NA, 0	; NATShow::Westbound
	sete	cl
	mov	BYTE PTR ?Eastbound@NATShow@@2_NA, cl	; NATShow::Eastbound
	jmp	$LN365@OnCompileC
$LN26@OnCompileC:
; Line 42
	push	3
	push	9
	lea	edx, DWORD PTR $T249547[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
	push	OFFSET ??_C@_03NFKEKGGK@all?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	lea	ecx, DWORD PTR $T249547[ebp]
	mov	bl, al
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	test	bl, bl
	je	SHORT $LN24@OnCompileC
; Line 43
	mov	BYTE PTR ?Eastbound@NATShow@@2_NA, 1	; NATShow::Eastbound
; Line 44
	mov	BYTE PTR ?Westbound@NATShow@@2_NA, 1	; NATShow::Westbound
	jmp	$LN365@OnCompileC
$LN24@OnCompileC:
; Line 45
	push	4
	push	9
	lea	eax, DWORD PTR $T249549[ebp]
	push	eax
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	lea	ecx, DWORD PTR $T249549[ebp]
	mov	bl, al
	call	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
	test	bl, bl
	je	$LN365@OnCompileC
; Line 46
	mov	BYTE PTR ?Eastbound@NATShow@@2_NA, 0	; NATShow::Eastbound
; Line 47
	mov	BYTE PTR ?Westbound@NATShow@@2_NA, 0	; NATShow::Westbound
; Line 48
	jmp	$LN365@OnCompileC
$LN31@OnCompileC:
; Line 49
	push	11					; 0000000bH
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	eax, DWORD PTR [eax]
	push	OFFSET ??_C@_0M@CAMOGCEC@?4natoptions?$AA@
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249551[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	mov	ecx, esi
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN270@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN270@OnCompileC:
	test	bl, bl
	je	SHORT $LN20@OnCompileC
$LN389@OnCompileC:
; Line 50
	mov	edx, DWORD PTR [edi+48]
	mov	eax, DWORD PTR [edx+96]
	lea	ecx, DWORD PTR [edi+48]
	call	eax
; Line 51
	mov	edx, DWORD PTR [edi+48]
	mov	eax, DWORD PTR [edx+352]
	push	0
	push	3000					; 00000bb8H
	lea	ecx, DWORD PTR [edi+48]
	call	eax
; Line 52
	push	1
	lea	ecx, DWORD PTR [edi+48]
	call	?ShowWindow@CWnd@@QAEHH@Z		; CWnd::ShowWindow
	jmp	$LN365@OnCompileC
$LN20@OnCompileC:
; Line 53
	push	8
	lea	ecx, DWORD PTR $T249553[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Left@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Left
	mov	eax, DWORD PTR [eax]
	push	OFFSET ??_C@_08JNPHKMEB@?4natopt?5?$AA@
	push	eax
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	mov	eax, DWORD PTR $T249553[ebp]
	sete	bl
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	mov	ecx, esi
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN303@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN303@OnCompileC:
	test	bl, bl
	je	$LN18@OnCompileC
; Line 54
	mov	eax, DWORD PTR _cmd$[ebp]
	cmp	DWORD PTR [eax-12], 8
	jle	SHORT $LN311@OnCompileC
	add	eax, 8
	push	32					; 00000020H
	push	eax
	call	__mbschr
	add	esp, 8
	test	eax, eax
	je	SHORT $LN311@OnCompileC
	sub	eax, DWORD PTR _cmd$[ebp]
	mov	esi, eax
$LN311@OnCompileC:
; Line 55
	lea	ecx, DWORD PTR [esi-8]
	push	ecx
	push	8
	lea	edx, DWORD PTR _opt$232958[ebp]
	push	edx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Mid@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@HH@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Mid
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 56
	mov	eax, DWORD PTR _cmd$[ebp]
	mov	eax, DWORD PTR [eax-12]
	sub	eax, esi
	dec	eax
	push	eax
	lea	ecx, DWORD PTR _val$232960[ebp]
	push	ecx
	lea	ecx, DWORD PTR _cmd$[ebp]
	call	?Right@?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QBE?AV12@H@Z ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::Right
; Line 57
	mov	esi, DWORD PTR _opt$232958[ebp]
	push	OFFSET ??_C@_09PFBFOOJD@linestyle?$AA@
	push	esi
	call	__mbscmp
	add	esp, 8
	test	eax, eax
	sete	al
	test	al, al
	je	SHORT $LN17@OnCompileC
; Line 58
	lea	edx, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_06EDEKCDFE@dotted?$AA@
	push	edx
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN16@OnCompileC
; Line 59
	mov	BYTE PTR ?DottedLines@NATShow@@2_NA, 1	; NATShow::DottedLines
; Line 60
	mov	BYTE PTR ?Lines@NATShow@@2_NA, 1	; NATShow::Lines
	jmp	$LN2@OnCompileC
$LN16@OnCompileC:
; Line 61
	lea	eax, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_05OPIONHBI@solid?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN14@OnCompileC
; Line 62
	mov	BYTE PTR ?DottedLines@NATShow@@2_NA, 0	; NATShow::DottedLines
; Line 63
	mov	BYTE PTR ?Lines@NATShow@@2_NA, 1	; NATShow::Lines
	jmp	$LN2@OnCompileC
$LN14@OnCompileC:
; Line 64
	lea	ecx, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_04CGFJFPFD@none?$AA@
	push	ecx
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	$LN2@OnCompileC
; Line 65
	mov	BYTE PTR ?Lines@NATShow@@2_NA, 0	; NATShow::Lines
; Line 66
	jmp	$LN2@OnCompileC
$LN17@OnCompileC:
; Line 67
	lea	edx, DWORD PTR _opt$232958[ebp]
	push	OFFSET ??_C@_09MIAMOF@infostyle?$AA@
	push	edx
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN10@OnCompileC
; Line 68
	lea	eax, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_06GGHJAEBN@static?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN9@OnCompileC
; Line 69
	mov	BYTE PTR ?StaticInfo@NATShow@@2_NA, 1	; NATShow::StaticInfo
	jmp	SHORT $LN2@OnCompileC
$LN9@OnCompileC:
; Line 70
	lea	ecx, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_05EIEHMANA@popup?$AA@
	push	ecx
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN2@OnCompileC
; Line 71
	mov	BYTE PTR ?StaticInfo@NATShow@@2_NA, 0	; NATShow::StaticInfo
; Line 72
	jmp	SHORT $LN2@OnCompileC
$LN10@OnCompileC:
; Line 73
	lea	edx, DWORD PTR _opt$232958[ebp]
	push	OFFSET ??_C@_07HGJGOMC@letters?$AA@
	push	edx
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN2@OnCompileC
; Line 74
	lea	eax, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_04FKMICODN@show?$AA@
	push	eax
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN4@OnCompileC
; Line 75
	mov	BYTE PTR ?Letters@NATShow@@2_NA, 1	; NATShow::Letters
	jmp	SHORT $LN2@OnCompileC
$LN4@OnCompileC:
; Line 76
	lea	ecx, DWORD PTR _val$232960[ebp]
	push	OFFSET ??_C@_04IBOFHAPJ@hide?$AA@
	push	ecx
	call	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@0@PBD@Z ; ATL::operator==
	add	esp, 8
	test	al, al
	je	SHORT $LN2@OnCompileC
; Line 77
	mov	BYTE PTR ?Letters@NATShow@@2_NA, 0	; NATShow::Letters
$LN2@OnCompileC:
; Line 80
	mov	eax, DWORD PTR _val$232960[ebp]
	add	eax, -16				; fffffff0H
	lea	edx, DWORD PTR [eax+12]
	or	ecx, -1
	lock	 xadd	 DWORD PTR [edx], ecx
	dec	ecx
	test	ecx, ecx
	jg	SHORT $LN356@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN356@OnCompileC:
	lea	eax, DWORD PTR [esi-16]
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN365@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN365@OnCompileC:
; Line 83
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _cmd$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	or	edx, -1
	lock	 xadd	 DWORD PTR [ecx], edx
	dec	edx
	test	edx, edx
	jg	SHORT $LN383@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN383@OnCompileC:
	mov	al, 1
; Line 84
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN18@OnCompileC:
; Line 81
	mov	DWORD PTR __$EHRec$[ebp+8], esi
	mov	eax, DWORD PTR _cmd$[ebp]
	add	eax, -16				; fffffff0H
	lea	ecx, DWORD PTR [eax+12]
	lock	 xadd	 DWORD PTR [ecx], esi
	dec	esi
	test	esi, esi
	jg	SHORT $LN374@OnCompileC
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	push	eax
	mov	eax, DWORD PTR [edx+4]
	call	eax
$LN374@OnCompileC:
	xor	al, al
; Line 84
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
$LN388@OnCompileC:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$0:
	lea	ecx, DWORD PTR _cmd$[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$1:
	lea	ecx, DWORD PTR $T249535[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$3:
	lea	ecx, DWORD PTR $T249538[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__unwindfunclet$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z$12:
	lea	ecx, DWORD PTR _opt$232958[ebp]
	jmp	??1?$CStringT@DV?$StrTraitMFC@DV?$ChTraitsCRT@D@ATL@@@@@ATL@@QAE@XZ ; ATL::CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,StrTraitMFC<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?OnCompileCommand@euroNatPlugin@@UAE_NPBD@Z ENDP	; euroNatPlugin::OnCompileCommand
PUBLIC	??0euroNatPlugin@@QAE@XZ			; euroNatPlugin::euroNatPlugin
__unwindtable$??0euroNatPlugin@@QAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0euroNatPlugin@@QAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0euroNatPlugin@@QAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0euroNatPlugin@@QAE@XZ$2
	DD	02H
	DD	FLAT:__unwindfunclet$??0euroNatPlugin@@QAE@XZ$3
__ehfuncinfo$??0euroNatPlugin@@QAE@XZ DD 019930522H
	DD	04H
	DD	FLAT:__unwindtable$??0euroNatPlugin@@QAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogtp
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
??0euroNatPlugin@@QAE@XZ PROC				; euroNatPlugin::euroNatPlugin
; Line 14
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0euroNatPlugin@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	edi, DWORD PTR _this$[ebp]
	push	OFFSET ??_C@_0BD@PMKHIJAE@NYARTCC?5ES?5euroNAT?$AA@
	push	OFFSET ??_C@_0BC@CFFPPFMB@Michael?5Freudeman?$AA@
	push	OFFSET ??_C@_03GCKCNDHP@1?41?$AA@
	push	OFFSET ??_C@_07DFEKGNDK@euroNAT?$AA@
	push	8
	mov	ecx, edi
	call	DWORD PTR __imp_??0CPlugIn@EuroScopePlugIn@@QAE@HPBD000@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	lea	esi, DWORD PTR [edi+8]
	mov	DWORD PTR [edi], OFFSET ??_7euroNatPlugin@@6B@
	call	??0NATData@@QAE@XZ			; NATData::NATData
	xor	eax, eax
	mov	DWORD PTR [edi+20], OFFSET ??_7?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@6B@
	mov	DWORD PTR [edi+24], eax
	mov	DWORD PTR [edi+36], eax
	mov	DWORD PTR [edi+32], eax
	mov	DWORD PTR [edi+28], eax
	lea	eax, DWORD PTR [edi+48]
	push	eax
	mov	BYTE PTR __$EHRec$[ebp+8], 2
	call	??0euroNatOptions@@QAE@PAVCWnd@@@Z	; euroNatOptions::euroNatOptions
	mov	BYTE PTR __$EHRec$[ebp+8], 3
; Line 16
	mov	ecx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A
	mov	DWORD PTR [edi+40], ecx
; Line 17
	mov	edx, DWORD PTR ?NATWorkerData@NATData@@2UNATWorkerCont@1@A+4
; Line 19
	mov	esi, edi
	mov	DWORD PTR [edi+44], edx
	call	?Load@NATShow@@SAXPAVCPlugIn@EuroScopePlugIn@@@Z ; NATShow::Load
; Line 21
	push	0
	push	0
	push	0
	push	0
	push	OFFSET ?NATWorkerData@NATData@@2UNATWorkerCont@1@A ; NATData::NATWorkerData
	push	OFFSET ?FetchDataWorker@NATData@@KAIPAX@Z ; NATData::FetchDataWorker
	mov	BYTE PTR ?Loading@NATShow@@2_NA, 1	; NATShow::Loading
	call	?AfxBeginThread@@YGPAVCWinThread@@P6AIPAX@Z0HIKPAU_SECURITY_ATTRIBUTES@@@Z ; AfxBeginThread
	mov	DWORD PTR [edi+8], eax
; Line 22
	mov	eax, edi
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
__unwindfunclet$??0euroNatPlugin@@QAE@XZ$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	DWORD PTR __imp_??1CPlugIn@EuroScopePlugIn@@UAE@XZ
__unwindfunclet$??0euroNatPlugin@@QAE@XZ$1:
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 8
	jmp	??1NATData@@QAE@XZ			; NATData::~NATData
__unwindfunclet$??0euroNatPlugin@@QAE@XZ$2:
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 20					; 00000014H
	jmp	??1?$CArray@PAVeuroNatRadarScreen@@ABQAV1@@@UAE@XZ ; CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>::~CArray<euroNatRadarScreen *,euroNatRadarScreen * const &>
__unwindfunclet$??0euroNatPlugin@@QAE@XZ$3:
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 48					; 00000030H
	jmp	??1euroNatOptions@@UAE@XZ		; euroNatOptions::~euroNatOptions
__ehhandler$??0euroNatPlugin@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-16]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0euroNatPlugin@@QAE@XZ
	jmp	___CxxFrameHandler3
??0euroNatPlugin@@QAE@XZ ENDP				; euroNatPlugin::euroNatPlugin
END
